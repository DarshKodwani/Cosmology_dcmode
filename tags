!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A1s_tab	hyrec/hydrogen.h	/^    double A1s_tab[NVIRT];      \/* 3*A2p1s*phi(E)*DE *\/ $/;"	m	struct:__anon32
A2s_tab	hyrec/hydrogen.h	/^    double A2s_tab[NVIRT];      \/* dLambda_2s\/dE * DeltaE if E < Elya dK2s\/dE * Delta E if E > Elya *\/$/;"	m	struct:__anon32
A3s3d_tab	hyrec/hydrogen.h	/^    double A3s3d_tab[NVIRT];    \/* (dLambda_3s\/dE + 5*dLambda_3d\/dE) * Delta E for E < ELyb, Raman scattering rate for E > ELyb *\/$/;"	m	struct:__anon32
A4s4d_tab	hyrec/hydrogen.h	/^    double A4s4d_tab[NVIRT];    \/* (dLambda_4s\/dE + 5*dLambda_4d\/dE) * Delta E *\/$/;"	m	struct:__anon32
ALPHA_FILE	hyrec/hydrogen.h	42;"	d
A_s	include/primordial.h	/^  double A_s;  \/**< usual scalar amplitude = curvature power spectrum at pivot scale *\/$/;"	m	struct:primordial
Ai	include/sparse.h	/^	int *Ai;		\/* Ai[0..(maxnz-1)]. Contains the row indices of the entries. *\/$/;"	m	struct:sparse_matrix
Ap	include/sparse.h	/^	int *Ap;		\/* Ap[0..ncols]. Ap[k+1]-Ap[k] is the number of entries in the k'th column. *\/$/;"	m	struct:sparse_matrix
Ax	include/sparse.h	/^	double *Ax;		\/* Ax[0..(maxnz-1)]. Contains the values of the entries. *\/$/;"	m	struct:sparse_matrix
BASE	python/classy.c	51;"	d	file:
Bfact	include/thermodynamics.h	/^  double Bfact;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CB1	include/thermodynamics.h	/^  double CB1;    \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CB1_He1	include/thermodynamics.h	/^  double CB1_He1; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CB1_He2	include/thermodynamics.h	/^  double CB1_He2; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CDB	include/thermodynamics.h	/^  double CDB; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CDB_He	include/thermodynamics.h	/^  double CDB_He; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CF1_from_Gegenbauer	tools/hyperspherical.c	/^int CF1_from_Gegenbauer(int l,$/;"	f
CK	include/thermodynamics.h	/^  double CK;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CK_He	include/thermodynamics.h	/^  double CK_He;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CL	include/thermodynamics.h	/^  double CL;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CL_He	include/thermodynamics.h	/^  double CL_He;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CR	include/thermodynamics.h	/^  double CR;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CT	include/thermodynamics.h	/^  double CT;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
CYTHON_ABI	python/classy.c	10;"	d	file:
CYTHON_CCOMPLEX	python/classy.c	493;"	d	file:
CYTHON_CCOMPLEX	python/classy.c	495;"	d	file:
CYTHON_CCOMPLEX	python/classy.c	497;"	d	file:
CYTHON_COMPILING_IN_CPYTHON	python/classy.c	40;"	d	file:
CYTHON_COMPILING_IN_CPYTHON	python/classy.c	43;"	d	file:
CYTHON_COMPILING_IN_PYPY	python/classy.c	39;"	d	file:
CYTHON_COMPILING_IN_PYPY	python/classy.c	42;"	d	file:
CYTHON_FORMAT_SSIZE_T	python/classy.c	58;"	d	file:
CYTHON_INLINE	python/classy.c	218;"	d	file:
CYTHON_INLINE	python/classy.c	220;"	d	file:
CYTHON_INLINE	python/classy.c	222;"	d	file:
CYTHON_INLINE	python/classy.c	224;"	d	file:
CYTHON_NCP_UNUSED	python/classy.c	300;"	d	file:
CYTHON_NCP_UNUSED	python/classy.c	302;"	d	file:
CYTHON_PEP393_ENABLED	python/classy.c	83;"	d	file:
CYTHON_PEP393_ENABLED	python/classy.c	93;"	d	file:
CYTHON_REFNANNY	python/classy.c	852;"	d	file:
CYTHON_RESTRICT	python/classy.c	205;"	d	file:
CYTHON_RESTRICT	python/classy.c	207;"	d	file:
CYTHON_RESTRICT	python/classy.c	209;"	d	file:
CYTHON_RESTRICT	python/classy.c	211;"	d	file:
CYTHON_UNUSED	python/classy.c	288;"	d	file:
CYTHON_UNUSED	python/classy.c	290;"	d	file:
CYTHON_UNUSED	python/classy.c	293;"	d	file:
CYTHON_UNUSED	python/classy.c	295;"	d	file:
CYTHON_USE_PYLONG_INTERNALS	python/classy.c	46;"	d	file:
CYTHON_WITHOUT_ASSERTIONS	python/classy.c	282;"	d	file:
Ci	include/evolver_ndf15.h	/^	int *Ci; \/* Stores the row indices of the  spJ+spJ' sparsity pattern. *\/$/;"	m	struct:jacobian
ClosedModY	tools/hyperspherical.c	/^int ClosedModY(int l, int beta, double *y, int * phisign, int * dphisign){$/;"	f
Cp	include/evolver_ndf15.h	/^	int *Cp; \/* Stores the column pointers of the spJ+spJ' sparsity pattern. *\/$/;"	m	struct:jacobian
DECREF	python/classy.c	/^    void (*DECREF)(void*, PyObject*, int);$/;"	m	struct:__anon8	file:
DIFFUSION	hyrec/hydrogen.h	74;"	d
DL_EXPORT	python/classy.c	30;"	d	file:
DL_IMPORT	python/classy.c	27;"	d	file:
DTM_TR	hyrec/hydrogen.h	/^  double DlogTR, DTM_TR;$/;"	m	struct:__anon31
Dfac	source/perturbations.c	4207;"	d	file:
Difmax	include/evolver_ndf15.h	/^	double * Difmax;$/;"	m	struct:numjac_workspace
DlogTR	hyrec/hydrogen.h	/^  double DlogTR, DTM_TR;$/;"	m	struct:__anon31
E21	hyrec/hydrogen.h	17;"	d
E31	hyrec/hydrogen.h	18;"	d
E32	hyrec/hydrogen.h	20;"	d
E41	hyrec/hydrogen.h	19;"	d
E42	hyrec/hydrogen.h	21;"	d
EFFECT_A	hyrec/hydrogen.h	70;"	d
EFFECT_B	hyrec/hydrogen.h	71;"	d
EFFECT_C	hyrec/hydrogen.h	72;"	d
EFFECT_D	hyrec/hydrogen.h	73;"	d
EI	hyrec/hydrogen.h	14;"	d
EMLA2s2p	hyrec/history.h	16;"	d
Eb_tab	hyrec/hydrogen.h	/^    double Eb_tab[NVIRT];       \/* Energies of the virtual levels in eV *\/$/;"	m	struct:__anon32
ErrorMsg	include/common.h	/^typedef char ErrorMsg[_ERRORMSGSIZE_]; \/**< Generic error messages (there is such a field in each structure) *\/$/;"	t
FULL	hyrec/history.h	17;"	d
FUNC_H2G	hyrec/history.h	25;"	d
FUNC_HEI	hyrec/history.h	24;"	d
FUNC_HMLA	hyrec/history.h	26;"	d
FUNC_PEEBLES	hyrec/history.h	27;"	d
FileArg	include/parser.h	/^typedef char FileArg[_ARGUMENT_LENGTH_MAX_];$/;"	t
FileName	include/common.h	/^typedef char FileName[_FILENAMESIZE_];$/;"	t
FinishContext	python/classy.c	/^    void (*FinishContext)(void**);$/;"	m	struct:__anon8	file:
Fscale	include/evolver_ndf15.h	/^	double * Fscale;$/;"	m	struct:numjac_workspace
GET_PSUM	test/test_degeneracy.c	9;"	d	file:
GIVEREF	python/classy.c	/^    void (*GIVEREF)(void*, PyObject*, int);$/;"	m	struct:__anon8	file:
GOTREF	python/classy.c	/^    void (*GOTREF)(void*, PyObject*, int);$/;"	m	struct:__anon8	file:
Gamma_dcdm	include/background.h	/^  double Gamma_dcdm; \/**< \\f$ \\Gamma_{dcdm} \\f$: decay constant for decaying cold dark matter *\/$/;"	m	struct:background
Gamma_prime_fld	include/perturbations.h	/^  double Gamma_prime_fld;      \/**< Gamma_prime in PPF scheme (equivalent to eq. 14 in 0808.3125) *\/$/;"	m	struct:perturb_workspace
H	include/primordial.h	/^  double H;$/;"	m	struct:primordial_inflation_parameters_and_workspace
H0	include/background.h	/^  double H0; \/**< \\f$ H_0 \\f$: Hubble parameter (in fact, [\\f$H_0\/c\\f$]) in \\f$ Mpc^{-1} \\f$ *\/$/;"	m	struct:background
H0	include/primordial.h	/^  double H0;	\/**< one parameter of the function H(phi) *\/$/;"	m	struct:primordial
H0	include/thermodynamics.h	/^  double H0;  \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
H1	include/primordial.h	/^  double H1;	\/**< one parameter of the function H(phi) *\/$/;"	m	struct:primordial
H2	include/primordial.h	/^  double H2;	\/**< one parameter of the function H(phi) *\/$/;"	m	struct:primordial
H3	include/primordial.h	/^  double H3;	\/**< one parameter of the function H(phi) *\/$/;"	m	struct:primordial
H4	include/primordial.h	/^  double H4;	\/**< one parameter of the function H(phi) *\/$/;"	m	struct:primordial
HERMITE3	include/transfer.h	/^enum Hermite_Interpolation_Order {HERMITE3, HERMITE4, HERMITE6};$/;"	e	enum:Hermite_Interpolation_Order
HERMITE4	include/transfer.h	/^enum Hermite_Interpolation_Order {HERMITE3, HERMITE4, HERMITE6};$/;"	e	enum:Hermite_Interpolation_Order
HERMITE6	include/transfer.h	/^enum Hermite_Interpolation_Order {HERMITE3, HERMITE4, HERMITE6};$/;"	e	enum:Hermite_Interpolation_Order
HERMITE_DO_D2PHI	tools/hyperspherical.c	1468;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1481;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1494;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1495;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1508;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1523;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1525;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1538;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1540;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1555;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1558;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1570;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1583;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1596;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1597;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1610;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1625;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1627;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1640;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1642;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1657;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1660;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1672;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1685;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1698;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1699;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1712;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1727;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1729;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1742;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1744;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1759;"	d	file:
HERMITE_DO_D2PHI	tools/hyperspherical.c	1762;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1467;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1480;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1482;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1493;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1507;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1510;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1522;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1537;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1539;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1554;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1557;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1569;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1582;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1584;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1595;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1609;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1612;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1624;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1639;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1641;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1656;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1659;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1671;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1684;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1686;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1697;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1711;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1714;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1726;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1741;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1743;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1758;"	d	file:
HERMITE_DO_DPHI	tools/hyperspherical.c	1761;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1466;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1469;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1479;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1492;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1506;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1509;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1521;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1524;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1536;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1553;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1556;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1568;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1571;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1581;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1594;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1608;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1611;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1623;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1626;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1638;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1655;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1658;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1670;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1673;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1683;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1696;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1710;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1713;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1725;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1728;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1740;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1757;"	d	file:
HERMITE_DO_PHI	tools/hyperspherical.c	1760;"	d	file:
HIS	include/transfer.h	/^  HyperInterpStruct HIS; \/**< structure containing all hyperspherical bessel functions (flat case) or all hyperspherical bessel functions for a given value of beta=q\/sqrt(|K|) (non-flat case). HIS = Hyperspherical Interpolation Structure. *\/$/;"	m	struct:transfer_workspace
HIS_allocated	include/transfer.h	/^  int HIS_allocated; \/**< flag specifying whether the previous structure has been allocated *\/$/;"	m	struct:transfer_workspace
HRATEEFF	hyrec/hydrogen.h	/^HRATEEFF;$/;"	t	typeref:struct:__anon31
HYREC_VERSION	hyrec/hyrec.h	9;"	d
H_frac	include/thermodynamics.h	/^  double H_frac; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
Hermite_Interpolation_Order	include/transfer.h	/^enum Hermite_Interpolation_Order {HERMITE3, HERMITE4, HERMITE6};$/;"	g
HyperInterpStruct	include/hyperspherical.h	/^} HyperInterpStruct;$/;"	t	typeref:struct:HypersphericalInterpolationStructure
HypersphericalExplicit	tools/hyperspherical.c	/^int HypersphericalExplicit(int K,int l, double beta,double x, double *Phi){$/;"	f
HypersphericalInterpolationStructure	include/hyperspherical.h	/^typedef struct HypersphericalInterpolationStructure{$/;"	s
I	include/quadrature.h	/^  double I;		\/* Estimate of integral *\/$/;"	m	struct:adaptive_integration_tree_node
INCREF	python/classy.c	/^    void (*INCREF)(void*, PyObject*, int);$/;"	m	struct:__anon8	file:
IS_UNSIGNED	python/classy.c	519;"	d	file:
K	include/background.h	/^  double K; \/**< \\f$ K \\f$: Curvature parameter \\f$ K=-\\Omega0_k*a_{today}^2*H_0^2\\f$; *\/$/;"	m	struct:background
K	include/hermite3_interpolation_csource.h	/^int K = pHIS->K;$/;"	v
K	include/hermite4_interpolation_csource.h	/^int K = pHIS->K;$/;"	v
K	include/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
K	include/hyperspherical.h	/^   int K;$/;"	m	struct:WKB_parameters
K	include/hyperspherical.h	/^  int K;                 \/\/Sign of the curvature, (0,-1,1)$/;"	m	struct:HypersphericalInterpolationStructure
K	include/transfer.h	/^  double K; \/**< curvature parameter (see background module for details) *\/$/;"	m	struct:transfer_workspace
K	tools/hermite3_interpolation_csource.h	/^int K = pHIS->K;$/;"	v
K	tools/hermite4_interpolation_csource.h	/^int K = pHIS->K;$/;"	v
K	tools/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
L	include/sparse.h	/^	sp_mat *L;		\/*L and U is the factors of the decomposed matrix.*\/$/;"	m	struct:sparse_numerical
L2s1s	hyrec/hydrogen.h	26;"	d
LU	include/evolver_ndf15.h	/^	double **LU;$/;"	m	struct:jacobian
LUw	include/evolver_ndf15.h	/^	double *LUw;$/;"	m	struct:jacobian
MASK	python/classy.c	52;"	d	file:
MAX	include/common.h	70;"	d
MIN	include/common.h	69;"	d
MODEL	hyrec/history.h	20;"	d
M_ncdm	include/background.h	/^  double * M_ncdm;                       \/**< vector of masses of non-cold relic:$/;"	m	struct:background
N	include/primordial.h	/^  double N;$/;"	m	struct:primordial_inflation_parameters_and_workspace
NC_RSD	include/transfer.h	/^              NC_RSD} radial_function_type;$/;"	e	enum:__anon34
NDIFF	hyrec/hydrogen.h	80;"	d
NMAX	test/test_degeneracy.c	8;"	d	file:
NRSIGN	include/common.h	72;"	d
NSUBLYA	hyrec/hydrogen.h	77;"	d
NSUBLYB	hyrec/hydrogen.h	78;"	d
NTM	hyrec/hydrogen.h	52;"	d
NTR	hyrec/hydrogen.h	49;"	d
NVIRT	hyrec/hydrogen.h	79;"	d
N_ncdm	include/background.h	/^  int N_ncdm;                            \/**< Number of distinguishable ncdm species *\/$/;"	m	struct:background
N_ncdm	include/perturbations.h	/^  int N_ncdm;		\/**< number of distinct non-cold-dark-matter (ncdm) species *\/$/;"	m	struct:perturb_vector
N_star	include/primordial.h	/^  N_star,$/;"	e	enum:phi_pivot_methods
Neff	include/background.h	/^  double Neff; \/**< so-called "effective neutrino number", computed at earliest time in interpolation table *\/$/;"	m	struct:background
Nnow	include/thermodynamics.h	/^  double Nnow;   \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
Nnueff	hyrec/history.h	/^   double Nnueff;               \/* effective number of neutrinos *\/$/;"	m	struct:__anon30
Numerical	include/evolver_ndf15.h	/^	sp_num *Numerical; \/*Stores the LU decomposition.*\/$/;"	m	struct:jacobian
Omega0_b	include/background.h	/^  double Omega0_b; \/**< \\f$ \\Omega_{0 b} \\f$: baryons *\/$/;"	m	struct:background
Omega0_cdm	include/background.h	/^  double Omega0_cdm; \/**< \\f$ \\Omega_{0 cdm} \\f$: cold dark matter *\/$/;"	m	struct:background
Omega0_dcdm	include/background.h	/^  double Omega0_dcdm; \/**< \\f$ \\Omega_{0 dcdm} \\f$: decaying cold dark matter *\/$/;"	m	struct:background
Omega0_dcdmdr	include/background.h	/^  double Omega0_dcdmdr; \/**< \\f$ \\Omega_{0 dcdm}+\\Omega_{0 dr} \\f$: decaying cold dark matter (dcdm) decaying to dark radiation (dr) *\/$/;"	m	struct:background
Omega0_dr	include/background.h	/^  double Omega0_dr; \/**< \\f$ \\Omega_{0 dr} \\f$: decay radiation *\/$/;"	m	struct:background
Omega0_fld	include/background.h	/^  double Omega0_fld; \/**< \\f$ \\Omega_{0 de} \\f$: fluid *\/$/;"	m	struct:background
Omega0_g	include/background.h	/^  double Omega0_g; \/**< \\f$ \\Omega_{0 \\gamma} \\f$: photons *\/$/;"	m	struct:background
Omega0_k	include/background.h	/^  double Omega0_k; \/**< \\f$ \\Omega_{0_k} \\f$: curvature contribution *\/$/;"	m	struct:background
Omega0_lambda	include/background.h	/^  double Omega0_lambda; \/**< \\f$ \\Omega_{0_\\Lambda} \\f$: cosmological constant *\/$/;"	m	struct:background
Omega0_ncdm	include/background.h	/^  double * Omega0_ncdm, Omega0_ncdm_tot; \/**< Omega0_ncdm for each species and for the total Omega0_ncdm *\/$/;"	m	struct:background
Omega0_ncdm_tot	include/background.h	/^  double * Omega0_ncdm, Omega0_ncdm_tot; \/**< Omega0_ncdm for each species and for the total Omega0_ncdm *\/$/;"	m	struct:background
Omega0_scf	include/background.h	/^  double Omega0_scf;        \/**< \\f$ \\Omega_{0 scf} \\f$: scalar field *\/$/;"	m	struct:background
Omega0_ur	include/background.h	/^  double Omega0_ur; \/**< \\f$ \\Omega_{0 \\nu r} \\f$: ultra-relativistic neutrinos *\/$/;"	m	struct:background
Omega_dcdmdr	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	e	enum:target_names
Omega_ini_dcdm	include/background.h	/^  double Omega_ini_dcdm;    \/**< \\f$ \\Omega_{ini,dcdm} \\f$: rescaled initial value for dcdm density (see 1407.2418 for definitions) *\/$/;"	m	struct:background
Omega_ini_dcdm	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	e	enum:target_names
Omega_scf	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	e	enum:target_names
PEEBLES	hyrec/history.h	14;"	d
PROMPT	hyrec/history.h	9;"	d
PY_LONG_LONG	python/classy.c	33;"	d	file:
PY_SSIZE_T_CLEAN	python/classy.c	3;"	d	file:
PhiWKB_minus_phiminabs	tools/hyperspherical.c	/^double PhiWKB_minus_phiminabs(double x, void *param){$/;"	f
Phi_l	include/hermite3_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
Phi_l	include/hermite4_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
Phi_l	include/hermite6_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
Phi_l	tools/hermite3_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
Phi_l	tools/hermite4_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
Phi_l	tools/hermite6_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
PyBaseString_Type	python/classy.c	135;"	d	file:
PyBoolObject	python/classy.c	170;"	d	file:
PyByteArray_Check	python/classy.c	114;"	d	file:
PyIntObject	python/classy.c	153;"	d	file:
PyInt_AS_LONG	python/classy.c	163;"	d	file:
PyInt_AsLong	python/classy.c	162;"	d	file:
PyInt_AsSsize_t	python/classy.c	164;"	d	file:
PyInt_AsUnsignedLongLongMask	python/classy.c	166;"	d	file:
PyInt_AsUnsignedLongMask	python/classy.c	165;"	d	file:
PyInt_Check	python/classy.c	155;"	d	file:
PyInt_CheckExact	python/classy.c	156;"	d	file:
PyInt_FromLong	python/classy.c	159;"	d	file:
PyInt_FromSize_t	python/classy.c	160;"	d	file:
PyInt_FromSsize_t	python/classy.c	161;"	d	file:
PyInt_FromString	python/classy.c	157;"	d	file:
PyInt_FromUnicode	python/classy.c	158;"	d	file:
PyInt_Type	python/classy.c	154;"	d	file:
PyNumber_Int	python/classy.c	167;"	d	file:
PyObject_ASCII	python/classy.c	132;"	d	file:
PyObject_Format	python/classy.c	117;"	d	file:
PyObject_Free	python/classy.c	121;"	d	file:
PyObject_Malloc	python/classy.c	120;"	d	file:
PyObject_Realloc	python/classy.c	122;"	d	file:
PySet_CheckExact	python/classy.c	149;"	d	file:
PyStringObject	python/classy.c	136;"	d	file:
PyString_Check	python/classy.c	138;"	d	file:
PyString_CheckExact	python/classy.c	139;"	d	file:
PyString_Type	python/classy.c	137;"	d	file:
PyUnicode_Contains	python/classy.c	111;"	d	file:
PyUnicode_InternFromString	python/classy.c	174;"	d	file:
Py_HUGE_VAL	python/classy.c	36;"	d	file:
Py_OptimizeFlag	python/classy.c	55;"	d	file:
Py_TPFLAGS_CHECKTYPES	python/classy.c	71;"	d	file:
Py_TPFLAGS_HAVE_FINALIZE	python/classy.c	80;"	d	file:
Py_TPFLAGS_HAVE_INDEX	python/classy.c	74;"	d	file:
Py_TPFLAGS_HAVE_NEWBUFFER	python/classy.c	77;"	d	file:
Py_hash_t	python/classy.c	/^  typedef long Py_hash_t;$/;"	t	file:
RECFAST	hyrec/history.h	15;"	d
REC_COSMOPARAMS	hyrec/history.h	/^} REC_COSMOPARAMS;$/;"	t	typeref:struct:__anon30
RR_FILE	hyrec/hydrogen.h	43;"	d
Rowmax	include/evolver_ndf15.h	/^	int * Rowmax;$/;"	m	struct:numjac_workspace
SCALAR_POLARISATION_E	include/transfer.h	/^              SCALAR_POLARISATION_E,$/;"	e	enum:__anon34
SCALAR_TEMPERATURE_0	include/transfer.h	/^typedef enum {SCALAR_TEMPERATURE_0,$/;"	e	enum:__anon34
SCALAR_TEMPERATURE_1	include/transfer.h	/^              SCALAR_TEMPERATURE_1,$/;"	e	enum:__anon34
SCALAR_TEMPERATURE_2	include/transfer.h	/^              SCALAR_TEMPERATURE_2,$/;"	e	enum:__anon34
SHIFT	python/classy.c	50;"	d	file:
SIGN	include/common.h	71;"	d
SPFLIP	include/sparse.h	59;"	d
SPMARK	include/sparse.h	62;"	d
SPMARKED	include/sparse.h	61;"	d
SPUNFLIP	include/sparse.h	60;"	d
SWAP	test/test_degeneracy.c	13;"	d	file:
S_fld	include/perturbations.h	/^  double S_fld;                \/**< S quantity sourcing Gamma_prime evolution in PPF scheme (equivalent to eq. 15 in 0808.3125) *\/$/;"	m	struct:perturb_workspace
SetupContext	python/classy.c	/^    void* (*SetupContext)(const char*, int, const char*);$/;"	m	struct:__anon8	file:
T0	hyrec/history.h	/^   double T0;                   \/* CMB temperature today in K*\/$/;"	m	struct:__anon30
TENSOR_POLARISATION_B	include/transfer.h	/^              TENSOR_POLARISATION_B,$/;"	e	enum:__anon34
TENSOR_POLARISATION_E	include/transfer.h	/^              TENSOR_POLARISATION_E,$/;"	e	enum:__anon34
TENSOR_TEMPERATURE_2	include/transfer.h	/^              TENSOR_TEMPERATURE_2,$/;"	e	enum:__anon34
TINY	include/evolver_ndf15.h	6;"	d
TINy	test/test_degeneracy.c	7;"	d	file:
TM_TR_MAX	hyrec/hydrogen.h	51;"	d
TM_TR_MIN	hyrec/hydrogen.h	50;"	d
TM_TR_tab	hyrec/hydrogen.h	/^  double *TM_TR_tab;$/;"	m	struct:__anon31
TR_MAX	hyrec/hydrogen.h	48;"	d
TR_MIN	hyrec/hydrogen.h	47;"	d
TWOG_FILE	hyrec/hydrogen.h	81;"	d
TWO_PHOTON_PARAMS	hyrec/hydrogen.h	/^}  TWO_PHOTON_PARAMS;$/;"	t	typeref:struct:__anon32
T_cmb	include/background.h	/^  double T_cmb; \/**< \\f$ T_{cmb} \\f$: current CMB temperature in Kelvins *\/$/;"	m	struct:background
T_ncdm	include/background.h	/^  double * T_ncdm,T_ncdm_default;       \/**< list of 1st parameters in$/;"	m	struct:background
T_ncdm_default	include/background.h	/^  double * T_ncdm,T_ncdm_default;       \/**< list of 1st parameters in$/;"	m	struct:background
Tnow	include/thermodynamics.h	/^  double Tnow;   \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
U	include/sparse.h	/^	sp_mat *U;$/;"	m	struct:sparse_numerical
V	include/primordial.h	/^  double V;$/;"	m	struct:primordial_inflation_parameters_and_workspace
V0	include/primordial.h	/^  double V0;	\/**< one parameter of the function V(phi) *\/$/;"	m	struct:primordial
V1	include/primordial.h	/^  double V1;	\/**< one parameter of the function V(phi) *\/$/;"	m	struct:primordial
V2	include/primordial.h	/^  double V2;	\/**< one parameter of the function V(phi) *\/$/;"	m	struct:primordial
V3	include/primordial.h	/^  double V3;	\/**< one parameter of the function V(phi) *\/$/;"	m	struct:primordial
V4	include/primordial.h	/^  double V4;	\/**< one parameter of the function V(phi) *\/$/;"	m	struct:primordial
VECTOR_POLARISATION_B	include/transfer.h	/^              VECTOR_POLARISATION_B,$/;"	e	enum:__anon34
VECTOR_POLARISATION_E	include/transfer.h	/^              VECTOR_POLARISATION_E,$/;"	e	enum:__anon34
VECTOR_TEMPERATURE_1	include/transfer.h	/^              VECTOR_TEMPERATURE_1,$/;"	e	enum:__anon34
VECTOR_TEMPERATURE_2	include/transfer.h	/^              VECTOR_TEMPERATURE_2,$/;"	e	enum:__anon34
V_e_scf	source/background.c	/^double V_e_scf(struct background *pba,$/;"	f
V_p_scf	source/background.c	/^double V_p_scf($/;"	f
V_scf	source/background.c	/^double V_scf($/;"	f
WKB_parameters	include/hyperspherical.h	/^struct WKB_parameters{$/;"	s
Xvar	source/perturbations.c	4213;"	d	file:
Y	hyrec/history.h	/^   double Y;                    \/* primordial helium abundance *\/$/;"	m	struct:__anon30
YHe	include/thermodynamics.h	/^  double YHe;  \/**< \\f$ Y_{He} \\f$: primordial helium fraction *\/$/;"	m	struct:thermo
YHe	include/thermodynamics.h	/^  double YHe; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
_A2P_s_	include/thermodynamics.h	655;"	d
_A2P_t_	include/thermodynamics.h	656;"	d
_ARGUMENT_LENGTH_MAX_	include/parser.h	7;"	d
_BBN_	include/thermodynamics.h	621;"	d
_COLUMNWIDTH_	include/common.h	57;"	d
_Complex_I	python/classy.c	508;"	d	file:
_Complex_I	python/classy.c	509;"	d	file:
_DECAY_ADIC_	source/perturbations.c	4192;"	d	file:
_DELIMITER_	include/common.h	61;"	d
_ERRCON_	include/dei_rkck.h	91;"	d
_ERRORMSGSIZE_	include/common.h	27;"	d
_FAILURE_	include/common.h	25;"	d
_FALSE_	include/common.h	22;"	d
_FILENAMESIZE_	include/common.h	30;"	d
_GT_END_	include/growTable.h	12;"	d
_GT_FACTOR_	include/growTable.h	11;"	d
_GT_INITSIZE_	include/growTable.h	10;"	d
_G_	include/background.h	525;"	d
_Gyr_over_Mpc_	include/background.h	522;"	d
_H0_BIG_	include/background.h	543;"	d
_H0_SMALL_	include/background.h	544;"	d
_HIS_BYTE_ALIGNMENT_	include/hyperspherical.h	16;"	d
_HUGE_	include/common.h	53;"	d
_HYPER_BLOCK_	include/hyperspherical.h	13;"	d
_HYPER_CHUNK_	include/hyperspherical.h	14;"	d
_HYPER_OVERFLOW_	include/hyperspherical.h	9;"	d
_HYPER_SAFETY_	include/hyperspherical.h	11;"	d
_K_PER_DECADE_PRIMORDIAL_MIN_	include/primordial.h	528;"	d
_LINE_LENGTH_MAX_	include/parser.h	6;"	d
_L_H_alpha_	include/thermodynamics.h	650;"	d
_L_H_ion_	include/thermodynamics.h	649;"	d
_L_He1_ion_	include/thermodynamics.h	651;"	d
_L_He2St_ion_	include/thermodynamics.h	659;"	d
_L_He2_ion_	include/thermodynamics.h	652;"	d
_L_He_2Pt_	include/thermodynamics.h	657;"	d
_L_He_2St_	include/thermodynamics.h	658;"	d
_L_He_2p_	include/thermodynamics.h	654;"	d
_L_He_2s_	include/thermodynamics.h	653;"	d
_Lambda_	include/thermodynamics.h	647;"	d
_Lambda_He_	include/thermodynamics.h	648;"	d
_MAXSTP_	include/dei_rkck.h	86;"	d
_MAXTITLESTRINGLENGTH_	include/common.h	59;"	d
_MAX_IT_	include/common.h	45;"	d
_MAX_NUMBER_OF_K_FILES_	include/perturbations.h	79;"	d
_MIN_NUMBER_OF_LAGUERRE_POINTS_	include/quadrature.h	4;"	d
_M_EV_TOO_BIG_FOR_HALOFIT_	include/nonlinear.h	8;"	d
_Mpc_over_m_	include/background.h	519;"	d
_NPARAMS_	test/test_degeneracy.c	14;"	d	file:
_NUM_TARGETS_	include/input.h	140;"	d
_OMEGAK_BIG_	include/background.h	548;"	d
_OMEGAK_SMALL_	include/background.h	549;"	d
_ONE_OVER_HYPER_OVERFLOW_	include/hyperspherical.h	10;"	d
_OUTPUTPRECISION_	include/common.h	55;"	d
_PGROW_	include/dei_rkck.h	89;"	d
_PIHALF_	include/common.h	35;"	d
_PI_	include/common.h	33;"	d
_PI_	test/chi2.c	11;"	d	file:
_PSD_DERIVATIVE_EXP_MAX_	include/background.h	564;"	d
_PSD_DERIVATIVE_EXP_MIN_	include/background.h	563;"	d
_PSHRNK_	include/dei_rkck.h	90;"	d
_QUADRATURE_MAX_	include/common.h	47;"	d
_QUADRATURE_MAX_BG_	include/common.h	49;"	d
_RECFAST_INTEG_SIZE_	include/thermodynamics.h	645;"	d
_RKCK_a2_	include/dei_rkck.h	93;"	d
_RKCK_a3_	include/dei_rkck.h	94;"	d
_RKCK_a4_	include/dei_rkck.h	95;"	d
_RKCK_a5_	include/dei_rkck.h	96;"	d
_RKCK_a6_	include/dei_rkck.h	97;"	d
_RKCK_b21_	include/dei_rkck.h	98;"	d
_RKCK_b31_	include/dei_rkck.h	99;"	d
_RKCK_b32_	include/dei_rkck.h	100;"	d
_RKCK_b41_	include/dei_rkck.h	101;"	d
_RKCK_b42_	include/dei_rkck.h	102;"	d
_RKCK_b43_	include/dei_rkck.h	103;"	d
_RKCK_b51_	include/dei_rkck.h	104;"	d
_RKCK_b52_	include/dei_rkck.h	105;"	d
_RKCK_b53_	include/dei_rkck.h	106;"	d
_RKCK_b54_	include/dei_rkck.h	107;"	d
_RKCK_b61_	include/dei_rkck.h	108;"	d
_RKCK_b62_	include/dei_rkck.h	109;"	d
_RKCK_b63_	include/dei_rkck.h	110;"	d
_RKCK_b64_	include/dei_rkck.h	111;"	d
_RKCK_b65_	include/dei_rkck.h	112;"	d
_RKCK_c1_	include/dei_rkck.h	113;"	d
_RKCK_c3_	include/dei_rkck.h	114;"	d
_RKCK_c4_	include/dei_rkck.h	115;"	d
_RKCK_c6_	include/dei_rkck.h	116;"	d
_RKCK_dc1_	include/dei_rkck.h	118;"	d
_RKCK_dc3_	include/dei_rkck.h	119;"	d
_RKCK_dc4_	include/dei_rkck.h	120;"	d
_RKCK_dc5_	include/dei_rkck.h	117;"	d
_RKCK_dc6_	include/dei_rkck.h	121;"	d
_SAFETY_	include/dei_rkck.h	88;"	d
_SCALE_BACK_	include/background.h	559;"	d
_SELECTION_NUM_MAX_	include/perturbations.h	68;"	d
_SPLINE_EST_DERIV_	include/arrays.h	11;"	d
_SPLINE_NATURAL_	include/arrays.h	10;"	d
_SQRT2_	include/common.h	39;"	d
_SQRT6_	include/common.h	41;"	d
_SQRT_PI_	include/common.h	43;"	d
_SUCCESS_	include/common.h	24;"	d
_SVN_VERSION_	include/svnversion.h	1;"	d
_TCMB_BIG_	include/background.h	545;"	d
_TCMB_SMALL_	include/background.h	546;"	d
_TINY_	include/dei_rkck.h	87;"	d
_TOLERANCE_ON_CURVATURE_	include/background.h	547;"	d
_TOLVAR_	include/common.h	51;"	d
_TRIG_PRECISSION_	include/hyperspherical.h	12;"	d
_TRUE_	include/common.h	21;"	d
_TWOPI_	include/common.h	37;"	d
_TWO_OVER_THREE_	include/hyperspherical.h	15;"	d
_T_0_	include/thermodynamics.h	675;"	d
_T_1_	include/thermodynamics.h	678;"	d
_USE_MATH_DEFINES	python/classy.c	229;"	d	file:
_VERSION_	include/common.h	18;"	d
_YHE_BIG_	include/thermodynamics.h	690;"	d
_YHE_SMALL_	include/thermodynamics.h	691;"	d
_Z_PK_NUM_MAX_	include/output.h	14;"	d
_Z_REC_MAX_	include/thermodynamics.h	692;"	d
_Z_REC_MIN_	include/thermodynamics.h	693;"	d
__ARRAYS__	include/arrays.h	6;"	d
__BACKGROUND__	include/background.h	4;"	d
__CLASSDIR__	include/common.h	66;"	d
__CLASS__	include/class.h	2;"	d
__COMMON__	include/common.h	16;"	d
__DEI__	include/dei_rkck.h	2;"	d
__EVO__	include/evolver_ndf15.h	2;"	d
__EVO__	include/evolver_rkck.h	2;"	d
__GROWTABLE__	include/growTable.h	6;"	d
__HYPERSPHERICAL__	include/hyperspherical.h	6;"	d
__INPUT__	include/input.h	4;"	d
__LENSING__	include/lensing.h	4;"	d
__NONLINEAR__	include/nonlinear.h	6;"	d
__OUTPUT__	include/output.h	4;"	d
__PARSER__	include/parser.h	2;"	d
__PERTURBATIONS__	include/perturbations.h	4;"	d
__PRIMORDIAL__	include/primordial.h	4;"	d
__PYX_BUF_FLAGS_PACKED_STRUCT	python/classy.c	521;"	d	file:
__PYX_BUILD_PY_SSIZE_T	python/classy.c	57;"	d	file:
__PYX_DEFAULT_STRING_ENCODING	python/classy.c	/^static char* __PYX_DEFAULT_STRING_ENCODING;$/;"	v	file:
__PYX_DEFAULT_STRING_ENCODING	python/classy.c	310;"	d	file:
__PYX_DEFAULT_STRING_ENCODING_IS_ASCII	python/classy.c	308;"	d	file:
__PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT	python/classy.c	309;"	d	file:
__PYX_ERR	python/classy.c	248;"	d	file:
__PYX_EXTERN_C	python/classy.c	263;"	d	file:
__PYX_EXTERN_C	python/classy.c	265;"	d	file:
__PYX_HAVE_API__classy	python/classy.c	270;"	d	file:
__PYX_HAVE_RT_ImportModule	python/classy.c	29258;"	d	file:
__PYX_HAVE_RT_ImportType	python/classy.c	29276;"	d	file:
__PYX_HAVE__classy	python/classy.c	269;"	d	file:
__PYX_NAN	python/classy.c	/^static CYTHON_INLINE float __PYX_NAN() {$/;"	f	file:
__PYX_NAN	python/classy.c	233;"	d	file:
__PYX_VERIFY_RETURN_INT	python/classy.c	28339;"	d	file:
__PYX_VERIFY_RETURN_INT_EXC	python/classy.c	28341;"	d	file:
__PYX__VERIFY_RETURN_INT	python/classy.c	28343;"	d	file:
__Pyx_AddTraceback	python/classy.c	/^static void __Pyx_AddTraceback(const char *funcname, int c_line,$/;"	f	file:
__Pyx_ArgTypeTest	python/classy.c	/^static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,$/;"	f	file:
__Pyx_BUILTIN_MODULE_NAME	python/classy.c	60;"	d	file:
__Pyx_BUILTIN_MODULE_NAME	python/classy.c	65;"	d	file:
__Pyx_BufFmt_CheckString	python/classy.c	/^static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {$/;"	f	file:
__Pyx_BufFmt_Context	python/classy.c	/^} __Pyx_BufFmt_Context;$/;"	t	typeref:struct:__anon5	file:
__Pyx_BufFmt_DescribeTypeChar	python/classy.c	/^static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {$/;"	f	file:
__Pyx_BufFmt_ExpectNumber	python/classy.c	/^static int __Pyx_BufFmt_ExpectNumber(const char **ts) {$/;"	f	file:
__Pyx_BufFmt_Init	python/classy.c	/^static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,$/;"	f	file:
__Pyx_BufFmt_ParseNumber	python/classy.c	/^static int __Pyx_BufFmt_ParseNumber(const char** ts) {$/;"	f	file:
__Pyx_BufFmt_ProcessTypeChunk	python/classy.c	/^static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {$/;"	f	file:
__Pyx_BufFmt_RaiseExpected	python/classy.c	/^static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {$/;"	f	file:
__Pyx_BufFmt_RaiseUnexpectedChar	python/classy.c	/^static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {$/;"	f	file:
__Pyx_BufFmt_StackElem	python/classy.c	/^} __Pyx_BufFmt_StackElem;$/;"	t	typeref:struct:__anon4	file:
__Pyx_BufFmt_TypeCharToAlignment	python/classy.c	/^static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {$/;"	f	file:
__Pyx_BufFmt_TypeCharToGroup	python/classy.c	/^static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {$/;"	f	file:
__Pyx_BufFmt_TypeCharToNativeSize	python/classy.c	/^static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {$/;"	f	file:
__Pyx_BufFmt_TypeCharToPadding	python/classy.c	/^static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {$/;"	f	file:
__Pyx_BufFmt_TypeCharToStandardSize	python/classy.c	/^static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {$/;"	f	file:
__Pyx_BufPtrStrided1d	python/classy.c	1183;"	d	file:
__Pyx_BufPtrStrided3d	python/classy.c	1182;"	d	file:
__Pyx_Buf_DimInfo	python/classy.c	/^} __Pyx_Buf_DimInfo;$/;"	t	typeref:struct:__anon11	file:
__Pyx_Buffer	python/classy.c	/^} __Pyx_Buffer;$/;"	t	typeref:struct:__anon12	file:
__Pyx_CIMAG	python/classy.c	1328;"	d	file:
__Pyx_CIMAG	python/classy.c	1331;"	d	file:
__Pyx_CIMAG	python/classy.c	1335;"	d	file:
__Pyx_CLEAR	python/classy.c	910;"	d	file:
__Pyx_CREAL	python/classy.c	1327;"	d	file:
__Pyx_CREAL	python/classy.c	1330;"	d	file:
__Pyx_CREAL	python/classy.c	1334;"	d	file:
__Pyx_CYFUNCTION_CCLASS	python/classy.c	1217;"	d	file:
__Pyx_CYFUNCTION_CLASSMETHOD	python/classy.c	1216;"	d	file:
__Pyx_CYFUNCTION_STATICMETHOD	python/classy.c	1215;"	d	file:
__Pyx_CalculateMetaclass	python/classy.c	/^            static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {$/;"	f	file:
__Pyx_CheckKeywordStrings	python/classy.c	/^    static CYTHON_INLINE int __Pyx_CheckKeywordStrings($/;"	f	file:
__Pyx_CodeObjectCache	python/classy.c	/^struct __Pyx_CodeObjectCache {$/;"	s	file:
__Pyx_CodeObjectCacheEntry	python/classy.c	/^} __Pyx_CodeObjectCacheEntry;$/;"	t	typeref:struct:__anon10	file:
__Pyx_CreateCodeObjectForTraceback	python/classy.c	/^static PyCodeObject* __Pyx_CreateCodeObjectForTraceback($/;"	f	file:
__Pyx_CyFunction_Call	python/classy.c	/^static PyObject * __Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {$/;"	f	file:
__Pyx_CyFunction_Defaults	python/classy.c	1222;"	d	file:
__Pyx_CyFunction_GetClassObj	python/classy.c	1220;"	d	file:
__Pyx_CyFunction_GetClosure	python/classy.c	1218;"	d	file:
__Pyx_CyFunction_InitDefaults	python/classy.c	/^static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {$/;"	f	file:
__Pyx_CyFunction_New	python/classy.c	/^static PyObject *__Pyx_CyFunction_New(PyTypeObject *type, PyMethodDef *ml, int flags, PyObject* qualname,$/;"	f	file:
__Pyx_CyFunction_NewEx	python/classy.c	1248;"	d	file:
__Pyx_CyFunction_SetAnnotationsDict	python/classy.c	/^static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {$/;"	f	file:
__Pyx_CyFunction_SetDefaultsGetter	python/classy.c	1224;"	d	file:
__Pyx_CyFunction_SetDefaultsKwDict	python/classy.c	/^static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {$/;"	f	file:
__Pyx_CyFunction_SetDefaultsTuple	python/classy.c	/^static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {$/;"	f	file:
__Pyx_CyFunction_USED	python/classy.c	1213;"	d	file:
__Pyx_CyFunction_clear	python/classy.c	/^__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)$/;"	f	file:
__Pyx_CyFunction_dealloc	python/classy.c	/^static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)$/;"	f	file:
__Pyx_CyFunction_descr_get	python/classy.c	/^static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)$/;"	f	file:
__Pyx_CyFunction_get_annotations	python/classy.c	/^__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op) {$/;"	f	file:
__Pyx_CyFunction_get_closure	python/classy.c	/^__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_get_code	python/classy.c	/^__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_get_defaults	python/classy.c	/^__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op) {$/;"	f	file:
__Pyx_CyFunction_get_dict	python/classy.c	/^__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_get_doc	python/classy.c	/^__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)$/;"	f	file:
__Pyx_CyFunction_get_globals	python/classy.c	/^__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_get_kwdefaults	python/classy.c	/^__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op) {$/;"	f	file:
__Pyx_CyFunction_get_name	python/classy.c	/^__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_get_qualname	python/classy.c	/^__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_get_self	python/classy.c	/^__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)$/;"	f	file:
__Pyx_CyFunction_init_defaults	python/classy.c	/^__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {$/;"	f	file:
__Pyx_CyFunction_reduce	python/classy.c	/^__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)$/;"	f	file:
__Pyx_CyFunction_repr	python/classy.c	/^__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)$/;"	f	file:
__Pyx_CyFunction_set_annotations	python/classy.c	/^__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value) {$/;"	f	file:
__Pyx_CyFunction_set_defaults	python/classy.c	/^__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value) {$/;"	f	file:
__Pyx_CyFunction_set_dict	python/classy.c	/^__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value)$/;"	f	file:
__Pyx_CyFunction_set_doc	python/classy.c	/^__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value)$/;"	f	file:
__Pyx_CyFunction_set_kwdefaults	python/classy.c	/^__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value) {$/;"	f	file:
__Pyx_CyFunction_set_name	python/classy.c	/^__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value)$/;"	f	file:
__Pyx_CyFunction_set_qualname	python/classy.c	/^__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value)$/;"	f	file:
__Pyx_CyFunction_traverse	python/classy.c	/^static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)$/;"	f	file:
__Pyx_CyFunction_weakreflist	python/classy.c	27822;"	d	file:
__Pyx_CyFunction_weakreflist	python/classy.c	27824;"	d	file:
__Pyx_DECREF	python/classy.c	882;"	d	file:
__Pyx_DECREF	python/classy.c	894;"	d	file:
__Pyx_DECREF_SET	python/classy.c	906;"	d	file:
__Pyx_DefaultClassType	python/classy.c	63;"	d	file:
__Pyx_DefaultClassType	python/classy.c	68;"	d	file:
__Pyx_ErrFetch	python/classy.c	1026;"	d	file:
__Pyx_ErrFetch	python/classy.c	1033;"	d	file:
__Pyx_ErrFetchInState	python/classy.c	/^static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {$/;"	f	file:
__Pyx_ErrFetchWithState	python/classy.c	1024;"	d	file:
__Pyx_ErrFetchWithState	python/classy.c	1031;"	d	file:
__Pyx_ErrRestore	python/classy.c	1025;"	d	file:
__Pyx_ErrRestore	python/classy.c	1032;"	d	file:
__Pyx_ErrRestoreInState	python/classy.c	/^static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {$/;"	f	file:
__Pyx_ErrRestoreWithState	python/classy.c	1023;"	d	file:
__Pyx_ErrRestoreWithState	python/classy.c	1030;"	d	file:
__Pyx_FetchCommonType	python/classy.c	/^            static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {$/;"	f	file:
__Pyx_GIVEREF	python/classy.c	884;"	d	file:
__Pyx_GIVEREF	python/classy.c	896;"	d	file:
__Pyx_GOTREF	python/classy.c	883;"	d	file:
__Pyx_GOTREF	python/classy.c	895;"	d	file:
__Pyx_GetBuffer	python/classy.c	/^static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {$/;"	f	file:
__Pyx_GetBuffer	python/classy.c	1309;"	d	file:
__Pyx_GetBufferAndValidate	python/classy.c	/^static CYTHON_INLINE int __Pyx_GetBufferAndValidate($/;"	f	file:
__Pyx_GetBuiltinName	python/classy.c	/^static PyObject *__Pyx_GetBuiltinName(PyObject *name) {$/;"	f	file:
__Pyx_GetItemInt	python/classy.c	988;"	d	file:
__Pyx_GetItemInt_Fast	python/classy.c	/^static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,$/;"	f	file:
__Pyx_GetItemInt_Generic	python/classy.c	/^    static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {$/;"	f	file:
__Pyx_GetItemInt_List	python/classy.c	993;"	d	file:
__Pyx_GetItemInt_List_Fast	python/classy.c	/^static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,$/;"	f	file:
__Pyx_GetItemInt_Tuple	python/classy.c	999;"	d	file:
__Pyx_GetItemInt_Tuple_Fast	python/classy.c	/^static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,$/;"	f	file:
__Pyx_GetModuleGlobalName	python/classy.c	/^    static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {$/;"	f	file:
__Pyx_INCREF	python/classy.c	881;"	d	file:
__Pyx_INCREF	python/classy.c	893;"	d	file:
__Pyx_Import	python/classy.c	/^            static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {$/;"	f	file:
__Pyx_ImportFrom	python/classy.c	/^            static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {$/;"	f	file:
__Pyx_ImportModule	python/classy.c	/^static PyObject *__Pyx_ImportModule(const char *name) {$/;"	f	file:
__Pyx_ImportType	python/classy.c	/^static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,$/;"	f	file:
__Pyx_InitCachedBuiltins	python/classy.c	/^static int __Pyx_InitCachedBuiltins(void) {$/;"	f	file:
__Pyx_InitCachedConstants	python/classy.c	/^static int __Pyx_InitCachedConstants(void) {$/;"	f	file:
__Pyx_InitGlobals	python/classy.c	/^static int __Pyx_InitGlobals(void) {$/;"	f	file:
__Pyx_InitStrings	python/classy.c	/^                static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {$/;"	f	file:
__Pyx_IsLittleEndian	python/classy.c	/^          static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {$/;"	f	file:
__Pyx_IterFinish	python/classy.c	/^        static CYTHON_INLINE int __Pyx_IterFinish(void) {$/;"	f	file:
__Pyx_IternextUnpackEndCheck	python/classy.c	/^        static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {$/;"	f	file:
__Pyx_LocalBuf_ND	python/classy.c	/^} __Pyx_LocalBuf_ND;$/;"	t	typeref:struct:__anon13	file:
__Pyx_MODULE_NAME	python/classy.c	1497;"	d	file:
__Pyx_NewRef	python/classy.c	375;"	d	file:
__Pyx_Owned_Py_None	python/classy.c	376;"	d	file:
__Pyx_ParseOptionalKeywords	python/classy.c	/^static int __Pyx_ParseOptionalKeywords($/;"	f	file:
__Pyx_Py3ClassCreate	python/classy.c	/^static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,$/;"	f	file:
__Pyx_Py3MetaclassPrepare	python/classy.c	/^                static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,$/;"	f	file:
__Pyx_PyAsyncMethodsStruct	python/classy.c	/^} __Pyx_PyAsyncMethodsStruct;$/;"	t	typeref:struct:__anon1	file:
__Pyx_PyAsyncMethodsStruct	python/classy.c	191;"	d	file:
__Pyx_PyBaseString_Check	python/classy.c	142;"	d	file:
__Pyx_PyBaseString_Check	python/classy.c	145;"	d	file:
__Pyx_PyBaseString_CheckExact	python/classy.c	143;"	d	file:
__Pyx_PyBaseString_CheckExact	python/classy.c	146;"	d	file:
__Pyx_PyBaseString_Join	python/classy.c	1088;"	d	file:
__Pyx_PyBaseString_Join	python/classy.c	1091;"	d	file:
__Pyx_PyBool_FromLong	python/classy.c	377;"	d	file:
__Pyx_PyByteArray_FromCString	python/classy.c	359;"	d	file:
__Pyx_PyByteArray_FromString	python/classy.c	343;"	d	file:
__Pyx_PyByteArray_FromStringAndSize	python/classy.c	344;"	d	file:
__Pyx_PyBytes_Equals	python/classy.c	/^            static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {$/;"	f	file:
__Pyx_PyBytes_FromCString	python/classy.c	358;"	d	file:
__Pyx_PyBytes_FromString	python/classy.c	345;"	d	file:
__Pyx_PyBytes_FromStringAndSize	python/classy.c	346;"	d	file:
__Pyx_PyBytes_Join	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {$/;"	f	file:
__Pyx_PyBytes_Join	python/classy.c	1095;"	d	file:
__Pyx_PyBytes_Join	python/classy.c	1097;"	d	file:
__Pyx_PyCode_New	python/classy.c	61;"	d	file:
__Pyx_PyCode_New	python/classy.c	66;"	d	file:
__Pyx_PyDict_GetItem	python/classy.c	/^static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {$/;"	f	file:
__Pyx_PyDict_GetItem	python/classy.c	1141;"	d	file:
__Pyx_PyIdentifier_FromString	python/classy.c	1445;"	d	file:
__Pyx_PyIdentifier_FromString	python/classy.c	1447;"	d	file:
__Pyx_PyIndex_AsSsize_t	python/classy.c	/^static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {$/;"	f	file:
__Pyx_PyInt_AddObjC	python/classy.c	/^static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {$/;"	f	file:
__Pyx_PyInt_AddObjC	python/classy.c	1043;"	d	file:
__Pyx_PyInt_AsHash_t	python/classy.c	180;"	d	file:
__Pyx_PyInt_AsHash_t	python/classy.c	183;"	d	file:
__Pyx_PyInt_As_int	python/classy.c	/^                static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {$/;"	f	file:
__Pyx_PyInt_As_long	python/classy.c	/^                static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {$/;"	f	file:
__Pyx_PyInt_As_size_t	python/classy.c	/^                static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {$/;"	f	file:
__Pyx_PyInt_EqObjC	python/classy.c	/^static PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED int inplace) {$/;"	f	file:
__Pyx_PyInt_EqObjC	python/classy.c	1119;"	d	file:
__Pyx_PyInt_FromHash_t	python/classy.c	179;"	d	file:
__Pyx_PyInt_FromHash_t	python/classy.c	182;"	d	file:
__Pyx_PyInt_FromSize_t	python/classy.c	/^static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {$/;"	f	file:
__Pyx_PyInt_From_enum__NPY_TYPES	python/classy.c	/^                static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {$/;"	f	file:
__Pyx_PyInt_From_int	python/classy.c	/^                static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {$/;"	f	file:
__Pyx_PyInt_From_long	python/classy.c	/^                static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {$/;"	f	file:
__Pyx_PyList_Append	python/classy.c	/^static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {$/;"	f	file:
__Pyx_PyList_Append	python/classy.c	1067;"	d	file:
__Pyx_PyMethod_New	python/classy.c	186;"	d	file:
__Pyx_PyMethod_New	python/classy.c	188;"	d	file:
__Pyx_PyNumber_Divide	python/classy.c	254;"	d	file:
__Pyx_PyNumber_Divide	python/classy.c	257;"	d	file:
__Pyx_PyNumber_Float	python/classy.c	393;"	d	file:
__Pyx_PyNumber_InPlaceDivide	python/classy.c	255;"	d	file:
__Pyx_PyNumber_InPlaceDivide	python/classy.c	258;"	d	file:
__Pyx_PyNumber_Int	python/classy.c	389;"	d	file:
__Pyx_PyNumber_Int	python/classy.c	391;"	d	file:
__Pyx_PyNumber_IntOrLong	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {$/;"	f	file:
__Pyx_PyObject_Append	python/classy.c	/^        static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {$/;"	f	file:
__Pyx_PyObject_AsSString	python/classy.c	355;"	d	file:
__Pyx_PyObject_AsString	python/classy.c	/^static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {$/;"	f	file:
__Pyx_PyObject_AsStringAndSize	python/classy.c	/^static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {$/;"	f	file:
__Pyx_PyObject_AsUString	python/classy.c	356;"	d	file:
__Pyx_PyObject_Call	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {$/;"	f	file:
__Pyx_PyObject_Call	python/classy.c	948;"	d	file:
__Pyx_PyObject_CallMethO	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {$/;"	f	file:
__Pyx_PyObject_CallMethod1	python/classy.c	/^        static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {$/;"	f	file:
__Pyx_PyObject_CallNoArg	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {$/;"	f	file:
__Pyx_PyObject_CallNoArg	python/classy.c	963;"	d	file:
__Pyx_PyObject_CallOneArg	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {$/;"	f	file:
__Pyx_PyObject_DelAttrStr	python/classy.c	968;"	d	file:
__Pyx_PyObject_DelAttrStr	python/classy.c	980;"	d	file:
__Pyx_PyObject_FromCString	python/classy.c	357;"	d	file:
__Pyx_PyObject_FromString	python/classy.c	311;"	d	file:
__Pyx_PyObject_FromStringAndSize	python/classy.c	312;"	d	file:
__Pyx_PyObject_GetAttrStr	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {$/;"	f	file:
__Pyx_PyObject_GetAttrStr	python/classy.c	926;"	d	file:
__Pyx_PyObject_GetSlice	python/classy.c	/^          static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,$/;"	f	file:
__Pyx_PyObject_IsTrue	python/classy.c	/^static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {$/;"	f	file:
__Pyx_PyObject_SetAttrStr	python/classy.c	/^static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {$/;"	f	file:
__Pyx_PyObject_SetAttrStr	python/classy.c	981;"	d	file:
__Pyx_PySequence_ContainsTF	python/classy.c	/^static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {$/;"	f	file:
__Pyx_PyStr_FromCString	python/classy.c	360;"	d	file:
__Pyx_PyStr_FromString	python/classy.c	349;"	d	file:
__Pyx_PyStr_FromString	python/classy.c	352;"	d	file:
__Pyx_PyStr_FromStringAndSize	python/classy.c	350;"	d	file:
__Pyx_PyStr_FromStringAndSize	python/classy.c	353;"	d	file:
__Pyx_PyString_Equals	python/classy.c	1192;"	d	file:
__Pyx_PyString_Equals	python/classy.c	1194;"	d	file:
__Pyx_PyString_Format	python/classy.c	127;"	d	file:
__Pyx_PyString_Format	python/classy.c	129;"	d	file:
__Pyx_PyString_FormatSafe	python/classy.c	124;"	d	file:
__Pyx_PyString_Join	python/classy.c	1087;"	d	file:
__Pyx_PyString_Join	python/classy.c	1090;"	d	file:
__Pyx_PyThreadState_assign	python/classy.c	1015;"	d	file:
__Pyx_PyThreadState_assign	python/classy.c	1018;"	d	file:
__Pyx_PyThreadState_declare	python/classy.c	1014;"	d	file:
__Pyx_PyThreadState_declare	python/classy.c	1017;"	d	file:
__Pyx_PyType_AsAsync	python/classy.c	192;"	d	file:
__Pyx_PyType_AsAsync	python/classy.c	199;"	d	file:
__Pyx_PyType_AsAsync	python/classy.c	201;"	d	file:
__Pyx_PyUnicode_AsUnicode	python/classy.c	374;"	d	file:
__Pyx_PyUnicode_Concat	python/classy.c	103;"	d	file:
__Pyx_PyUnicode_Concat	python/classy.c	106;"	d	file:
__Pyx_PyUnicode_ConcatSafe	python/classy.c	104;"	d	file:
__Pyx_PyUnicode_ConcatSafe	python/classy.c	107;"	d	file:
__Pyx_PyUnicode_DATA	python/classy.c	89;"	d	file:
__Pyx_PyUnicode_DATA	python/classy.c	98;"	d	file:
__Pyx_PyUnicode_Equals	python/classy.c	/^            static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {$/;"	f	file:
__Pyx_PyUnicode_FormatSafe	python/classy.c	125;"	d	file:
__Pyx_PyUnicode_FromCString	python/classy.c	361;"	d	file:
__Pyx_PyUnicode_FromString	python/classy.c	/^static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {$/;"	f	file:
__Pyx_PyUnicode_FromStringAndSize	python/classy.c	441;"	d	file:
__Pyx_PyUnicode_FromStringAndSize	python/classy.c	443;"	d	file:
__Pyx_PyUnicode_FromUnicode	python/classy.c	372;"	d	file:
__Pyx_PyUnicode_FromUnicodeAndLength	python/classy.c	373;"	d	file:
__Pyx_PyUnicode_GET_LENGTH	python/classy.c	86;"	d	file:
__Pyx_PyUnicode_GET_LENGTH	python/classy.c	95;"	d	file:
__Pyx_PyUnicode_IS_TRUE	python/classy.c	100;"	d	file:
__Pyx_PyUnicode_IS_TRUE	python/classy.c	91;"	d	file:
__Pyx_PyUnicode_KIND	python/classy.c	88;"	d	file:
__Pyx_PyUnicode_KIND	python/classy.c	97;"	d	file:
__Pyx_PyUnicode_READ	python/classy.c	90;"	d	file:
__Pyx_PyUnicode_READ	python/classy.c	99;"	d	file:
__Pyx_PyUnicode_READY	python/classy.c	84;"	d	file:
__Pyx_PyUnicode_READY	python/classy.c	94;"	d	file:
__Pyx_PyUnicode_READ_CHAR	python/classy.c	87;"	d	file:
__Pyx_PyUnicode_READ_CHAR	python/classy.c	96;"	d	file:
__Pyx_Py_UNICODE_strlen	python/classy.c	/^static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)$/;"	f	file:
__Pyx_Py_UNICODE_strlen	python/classy.c	370;"	d	file:
__Pyx_Raise	python/classy.c	/^static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {$/;"	f	file:
__Pyx_Raise	python/classy.c	/^static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,$/;"	f	file:
__Pyx_RaiseArgtupleInvalid	python/classy.c	/^static void __Pyx_RaiseArgtupleInvalid($/;"	f	file:
__Pyx_RaiseArgumentTypeInvalid	python/classy.c	/^          static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {$/;"	f	file:
__Pyx_RaiseBufferIndexError	python/classy.c	/^            static void __Pyx_RaiseBufferIndexError(int axis) {$/;"	f	file:
__Pyx_RaiseDoubleKeywordsError	python/classy.c	/^static void __Pyx_RaiseDoubleKeywordsError($/;"	f	file:
__Pyx_RaiseNeedMoreValuesError	python/classy.c	/^        static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {$/;"	f	file:
__Pyx_RaiseNoneNotIterableError	python/classy.c	/^            static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {$/;"	f	file:
__Pyx_RaiseTooManyValuesError	python/classy.c	/^        static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {$/;"	f	file:
__Pyx_RefNanny	python/classy.c	/^  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;$/;"	v	file:
__Pyx_RefNannyAPIStruct	python/classy.c	/^  } __Pyx_RefNannyAPIStruct;$/;"	t	typeref:struct:__anon8	file:
__Pyx_RefNannyDeclarations	python/classy.c	865;"	d	file:
__Pyx_RefNannyDeclarations	python/classy.c	890;"	d	file:
__Pyx_RefNannyFinishContext	python/classy.c	879;"	d	file:
__Pyx_RefNannyFinishContext	python/classy.c	892;"	d	file:
__Pyx_RefNannyImportAPI	python/classy.c	/^static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {$/;"	f	file:
__Pyx_RefNannySetupContext	python/classy.c	867;"	d	file:
__Pyx_RefNannySetupContext	python/classy.c	876;"	d	file:
__Pyx_RefNannySetupContext	python/classy.c	891;"	d	file:
__Pyx_ReleaseBuffer	python/classy.c	/^static void __Pyx_ReleaseBuffer(Py_buffer *view) {$/;"	f	file:
__Pyx_ReleaseBuffer	python/classy.c	1310;"	d	file:
__Pyx_SET_CIMAG	python/classy.c	1339;"	d	file:
__Pyx_SET_CIMAG	python/classy.c	1342;"	d	file:
__Pyx_SET_CREAL	python/classy.c	1338;"	d	file:
__Pyx_SET_CREAL	python/classy.c	1341;"	d	file:
__Pyx_SafeReleaseBuffer	python/classy.c	/^static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {$/;"	f	file:
__Pyx_SetItemInt	python/classy.c	1145;"	d	file:
__Pyx_SetItemInt_Fast	python/classy.c	/^static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,$/;"	f	file:
__Pyx_SetItemInt_Generic	python/classy.c	/^        static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {$/;"	f	file:
__Pyx_StringTabEntry	python/classy.c	/^                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;$/;"	t	typeref:struct:__anon2	file:
__Pyx_StructField	python/classy.c	/^} __Pyx_StructField;$/;"	t	typeref:struct:__Pyx_StructField_	file:
__Pyx_StructField_	python/classy.c	/^typedef struct __Pyx_StructField_ {$/;"	s	file:
__Pyx_TypeCheck	python/classy.c	151;"	d	file:
__Pyx_TypeInfo	python/classy.c	/^} __Pyx_TypeInfo;$/;"	t	typeref:struct:__anon3	file:
__Pyx_TypeInfo_nn___pyx_t_6classy_DTYPE_t	python/classy.c	/^static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_6classy_DTYPE_t = { "DTYPE_t", NULL, sizeof(__pyx_t_6classy_DTYPE_t), { 0 }, 0, 'R', 0, 0 };$/;"	v	file:
__Pyx_TypeTest	python/classy.c	/^            static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {$/;"	f	file:
__Pyx_XCLEAR	python/classy.c	911;"	d	file:
__Pyx_XDECREF	python/classy.c	886;"	d	file:
__Pyx_XDECREF	python/classy.c	898;"	d	file:
__Pyx_XDECREF_SET	python/classy.c	902;"	d	file:
__Pyx_XGIVEREF	python/classy.c	888;"	d	file:
__Pyx_XGIVEREF	python/classy.c	900;"	d	file:
__Pyx_XGOTREF	python/classy.c	887;"	d	file:
__Pyx_XGOTREF	python/classy.c	899;"	d	file:
__Pyx_XINCREF	python/classy.c	885;"	d	file:
__Pyx_XINCREF	python/classy.c	897;"	d	file:
__Pyx_ZeroBuffer	python/classy.c	/^static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {$/;"	f	file:
__Pyx__PyObject_CallOneArg	python/classy.c	/^static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {$/;"	f	file:
__Pyx_c_abs	python/classy.c	/^        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {$/;"	f	file:
__Pyx_c_abs	python/classy.c	1401;"	d	file:
__Pyx_c_abs	python/classy.c	1408;"	d	file:
__Pyx_c_absf	python/classy.c	/^        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {$/;"	f	file:
__Pyx_c_absf	python/classy.c	1360;"	d	file:
__Pyx_c_absf	python/classy.c	1367;"	d	file:
__Pyx_c_conj	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {$/;"	f	file:
__Pyx_c_conj	python/classy.c	1399;"	d	file:
__Pyx_c_conj	python/classy.c	1406;"	d	file:
__Pyx_c_conjf	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {$/;"	f	file:
__Pyx_c_conjf	python/classy.c	1358;"	d	file:
__Pyx_c_conjf	python/classy.c	1365;"	d	file:
__Pyx_c_diff	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {$/;"	f	file:
__Pyx_c_diff	python/classy.c	1393;"	d	file:
__Pyx_c_difff	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {$/;"	f	file:
__Pyx_c_difff	python/classy.c	1352;"	d	file:
__Pyx_c_eq	python/classy.c	/^    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {$/;"	f	file:
__Pyx_c_eq	python/classy.c	1391;"	d	file:
__Pyx_c_eqf	python/classy.c	/^    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {$/;"	f	file:
__Pyx_c_eqf	python/classy.c	1350;"	d	file:
__Pyx_c_is_zero	python/classy.c	/^    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {$/;"	f	file:
__Pyx_c_is_zero	python/classy.c	1398;"	d	file:
__Pyx_c_is_zero	python/classy.c	1405;"	d	file:
__Pyx_c_is_zerof	python/classy.c	/^    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {$/;"	f	file:
__Pyx_c_is_zerof	python/classy.c	1357;"	d	file:
__Pyx_c_is_zerof	python/classy.c	1364;"	d	file:
__Pyx_c_neg	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {$/;"	f	file:
__Pyx_c_neg	python/classy.c	1396;"	d	file:
__Pyx_c_negf	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {$/;"	f	file:
__Pyx_c_negf	python/classy.c	1355;"	d	file:
__Pyx_c_pow	python/classy.c	/^        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {$/;"	f	file:
__Pyx_c_pow	python/classy.c	1402;"	d	file:
__Pyx_c_pow	python/classy.c	1409;"	d	file:
__Pyx_c_powf	python/classy.c	/^        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {$/;"	f	file:
__Pyx_c_powf	python/classy.c	1361;"	d	file:
__Pyx_c_powf	python/classy.c	1368;"	d	file:
__Pyx_c_prod	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {$/;"	f	file:
__Pyx_c_prod	python/classy.c	1394;"	d	file:
__Pyx_c_prodf	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {$/;"	f	file:
__Pyx_c_prodf	python/classy.c	1353;"	d	file:
__Pyx_c_quot	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {$/;"	f	file:
__Pyx_c_quot	python/classy.c	1395;"	d	file:
__Pyx_c_quotf	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {$/;"	f	file:
__Pyx_c_quotf	python/classy.c	1354;"	d	file:
__Pyx_c_sum	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {$/;"	f	file:
__Pyx_c_sum	python/classy.c	1392;"	d	file:
__Pyx_c_sumf	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {$/;"	f	file:
__Pyx_c_sumf	python/classy.c	1351;"	d	file:
__Pyx_check_binary_version	python/classy.c	/^                static int __Pyx_check_binary_version(void) {$/;"	f	file:
__Pyx_decode_c_string	python/classy.c	/^        static CYTHON_INLINE PyObject* __Pyx_decode_c_string($/;"	f	file:
__Pyx_div_long	python/classy.c	/^          static CYTHON_INLINE long __Pyx_div_long(long a, long b) {$/;"	f	file:
__Pyx_fits_Py_ssize_t	python/classy.c	315;"	d	file:
__Pyx_init_sys_getdefaultencoding_params	python/classy.c	/^static int __Pyx_init_sys_getdefaultencoding_params(void) {$/;"	f	file:
__Pyx_long_cast	python/classy.c	314;"	d	file:
__Pyx_minusones	python/classy.c	/^static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};$/;"	v	file:
__Pyx_pad_double	python/classy.c	/^typedef struct { double x; char c; } __Pyx_pad_double;$/;"	t	typeref:struct:__anon26	file:
__Pyx_pad_float	python/classy.c	/^typedef struct { float x; char c; } __Pyx_pad_float;$/;"	t	typeref:struct:__anon25	file:
__Pyx_pad_int	python/classy.c	/^typedef struct { int x; char c; } __Pyx_pad_int;$/;"	t	typeref:struct:__anon23	file:
__Pyx_pad_long	python/classy.c	/^typedef struct { long x; char c; } __Pyx_pad_long;$/;"	t	typeref:struct:__anon24	file:
__Pyx_pad_longdouble	python/classy.c	/^typedef struct { long double x; char c; } __Pyx_pad_longdouble;$/;"	t	typeref:struct:__anon27	file:
__Pyx_pad_longlong	python/classy.c	/^typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;$/;"	t	typeref:struct:__anon29	file:
__Pyx_pad_short	python/classy.c	/^typedef struct { short x; char c; } __Pyx_pad_short;$/;"	t	typeref:struct:__anon22	file:
__Pyx_pad_void_p	python/classy.c	/^typedef struct { void *x; char c; } __Pyx_pad_void_p;$/;"	t	typeref:struct:__anon28	file:
__Pyx_sst_abs	python/classy.c	327;"	d	file:
__Pyx_sst_abs	python/classy.c	329;"	d	file:
__Pyx_sst_abs	python/classy.c	331;"	d	file:
__Pyx_sst_abs	python/classy.c	333;"	d	file:
__Pyx_sst_abs	python/classy.c	335;"	d	file:
__Pyx_sst_abs	python/classy.c	337;"	d	file:
__Pyx_sst_abs	python/classy.c	339;"	d	file:
__Pyx_st_double	python/classy.c	/^typedef struct { char c; double x; } __Pyx_st_double;$/;"	t	typeref:struct:__anon18	file:
__Pyx_st_float	python/classy.c	/^typedef struct { char c; float x; } __Pyx_st_float;$/;"	t	typeref:struct:__anon17	file:
__Pyx_st_int	python/classy.c	/^typedef struct { char c; int x; } __Pyx_st_int;$/;"	t	typeref:struct:__anon15	file:
__Pyx_st_long	python/classy.c	/^typedef struct { char c; long x; } __Pyx_st_long;$/;"	t	typeref:struct:__anon16	file:
__Pyx_st_longdouble	python/classy.c	/^typedef struct { char c; long double x; } __Pyx_st_longdouble;$/;"	t	typeref:struct:__anon19	file:
__Pyx_st_longlong	python/classy.c	/^typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;$/;"	t	typeref:struct:__anon21	file:
__Pyx_st_short	python/classy.c	/^typedef struct { char c; short x; } __Pyx_st_short;$/;"	t	typeref:struct:__anon14	file:
__Pyx_st_void_p	python/classy.c	/^typedef struct { char c; void *x; } __Pyx_st_void_p;$/;"	t	typeref:struct:__anon20	file:
__Pyx_sys_getdefaultencoding_not_ascii	python/classy.c	/^static int __Pyx_sys_getdefaultencoding_not_ascii;$/;"	v	file:
__Pyx_truncl	python/classy.c	242;"	d	file:
__Pyx_truncl	python/classy.c	244;"	d	file:
__Pyx_uchar_cast	python/classy.c	313;"	d	file:
__Pyx_void_to_None	python/classy.c	214;"	d	file:
__Pyx_zeros	python/classy.c	/^static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};$/;"	v	file:
__QSS__	include/quadrature.h	2;"	d
__SPA__	include/sparse.h	2;"	d
__SPECTRA__	include/spectra.h	4;"	d
__THERMODYNAMICS__	include/thermodynamics.h	4;"	d
__TRANSFER__	include/transfer.h	4;"	d
__cdecl	python/classy.c	20;"	d	file:
__fastcall	python/classy.c	23;"	d	file:
__pyx_CyFunctionObject	python/classy.c	/^} __pyx_CyFunctionObject;$/;"	t	typeref:struct:__anon9	file:
__pyx_CyFunctionType	python/classy.c	/^static PyTypeObject *__pyx_CyFunctionType = 0;$/;"	v	file:
__pyx_CyFunctionType_type	python/classy.c	/^static PyTypeObject __pyx_CyFunctionType_type = {$/;"	v	file:
__pyx_CyFunction_getsets	python/classy.c	/^static PyGetSetDef __pyx_CyFunction_getsets[] = {$/;"	v	file:
__pyx_CyFunction_init	python/classy.c	/^static int __pyx_CyFunction_init(void) {$/;"	f	file:
__pyx_CyFunction_members	python/classy.c	/^static PyMemberDef __pyx_CyFunction_members[] = {$/;"	v	file:
__pyx_CyFunction_methods	python/classy.c	/^static PyMethodDef __pyx_CyFunction_methods[] = {$/;"	v	file:
__pyx_PyFloat_AsDouble	python/classy.c	383;"	d	file:
__pyx_PyFloat_AsDouble	python/classy.c	385;"	d	file:
__pyx_PyFloat_AsFloat	python/classy.c	387;"	d	file:
__pyx_b	python/classy.c	/^static PyObject *__pyx_b;$/;"	v	file:
__pyx_bisect_code_objects	python/classy.c	/^                static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {$/;"	f	file:
__pyx_buffmt_parse_array	python/classy.c	/^__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)$/;"	f	file:
__pyx_builtin_Exception	python/classy.c	/^static PyObject *__pyx_builtin_Exception;$/;"	v	file:
__pyx_builtin_RuntimeError	python/classy.c	/^static PyObject *__pyx_builtin_RuntimeError;$/;"	v	file:
__pyx_builtin_TypeError	python/classy.c	/^static PyObject *__pyx_builtin_TypeError;$/;"	v	file:
__pyx_builtin_ValueError	python/classy.c	/^static PyObject *__pyx_builtin_ValueError;$/;"	v	file:
__pyx_builtin_range	python/classy.c	/^static PyObject *__pyx_builtin_range;$/;"	v	file:
__pyx_builtin_xrange	python/classy.c	/^static PyObject *__pyx_builtin_xrange;$/;"	v	file:
__pyx_cfilenm	python/classy.c	/^static const char * __pyx_cfilenm= __FILE__;$/;"	v	file:
__pyx_clineno	python/classy.c	/^static int __pyx_clineno = 0;$/;"	v	file:
__pyx_code_cache	python/classy.c	/^static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};$/;"	v	typeref:struct:__Pyx_CodeObjectCache	file:
__pyx_codeobj__52	python/classy.c	/^static PyObject *__pyx_codeobj__52;$/;"	v	file:
__pyx_codeobj__55	python/classy.c	/^static PyObject *__pyx_codeobj__55;$/;"	v	file:
__pyx_d	python/classy.c	/^static PyObject *__pyx_d;$/;"	v	file:
__pyx_doc_6classy_5Class_12_check_task_dependency	python/classy.c	/^static char __pyx_doc_6classy_5Class_12_check_task_dependency[] = "\\n        Fill the level list with all the needed modules\\n\\n        .. warning::\\n\\n            the ordering of modules is obviously dependent on CLASS module order\\n            in the main.c file. This has to be updated in case of a change to\\n            this file.\\n\\n        Parameters\\n        ----------\\n\\n        level : list\\n            list of strings, containing initially only the last module required.\\n            For instance, to recover all the modules, the input should be\\n            ['lensing']\\n\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_16compute	python/classy.c	/^static char __pyx_doc_6classy_5Class_16compute[] = "\\n        compute(level=[\\"lensing\\"])\\n\\n        Main function, execute all the _init methods for all desired modules.\\n        This is called in MontePython, and this ensures that the Class instance\\n        of this class contains all the relevant quantities. Then, one can deduce\\n        Pk, Cl, etc...\\n\\n        Parameters\\n        ----------\\n        level : list\\n                list of the last module desired. The internal function\\n                _check_task_dependency will then add to this list all the\\n                necessary modules to compute in order to initialize this last\\n                one. The default last module is \\"lensing\\".\\n\\n        .. warning::\\n\\n            level default value should be left as an array (it was creating\\n            problem when casting as a set later on, in _check_task_dependency)\\n\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_18raw_cl	python/classy.c	/^static char __pyx_doc_6classy_5Class_18raw_cl[] = "\\n        raw_cl(lmax=-1, nofail=False)\\n\\n        Return a dictionary of the primary C_l\\n\\n        Parameters\\n        ----------\\n        lmax : int, optional\\n                Define the maximum l for which the C_l will be returned\\n                (inclusively). This number will be checked against the maximum l\\n                at which they were actually computed by CLASS, and an error will\\n                be raised if the desired lmax is bigger than what CLASS can\\n                give.\\n        nofail: bool, optional\\n                Check and enforce the computation of the spectra module\\n                beforehand, with the desired lmax.\\n\\n        Returns\\n        -------\\n        cl : dict\\n                Dictionary that contains the power spectrum for 'tt', 'te', etc... The\\n                index associated with each is defined wrt. Class convention, and are non\\n                important from the python point of view. It also returns now the\\n                ell array.\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_20lensed_cl	python/classy.c	/^static char __pyx_doc_6classy_5Class_20lensed_cl[] = "\\n        lensed_cl(lmax=-1, nofail=False)\\n\\n        Return a dictionary of the lensed C_l, computed by CLASS, without the\\n        density C_ls. They must be asked separately with the function aptly\\n        named density_cl\\n\\n        Parameters\\n        ----------\\n        lmax : int, optional\\n                Define the maximum l for which the C_l will be returned (inclusively)\\n        nofail: bool, optional\\n                Check and enforce the computation of the lensing module beforehand\\n\\n        Returns\\n        -------\\n        cl : dict\\n                Dictionary that contains the power spectrum for 'tt', 'te', etc... The\\n                index associated with each is defined wrt. Class convention, and are non\\n                important from the python point of view.\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_22density_cl	python/classy.c	/^static char __pyx_doc_6classy_5Class_22density_cl[] = "\\n        density_cl(lmax=-1, nofail=False)\\n\\n        Return a dictionary of the primary C_l for the matter\\n\\n        Parameters\\n        ----------\\n        lmax : int, optional\\n            Define the maximum l for which the C_l will be returned (inclusively)\\n        nofail: bool, optional\\n            Check and enforce the computation of the lensing module beforehand\\n\\n        Returns\\n        -------\\n        cl : numpy array of numpy.ndarrays\\n            Array that contains the list (in this order) of self correlation of\\n            1st bin, then successive correlations (set by non_diagonal) to the\\n            following bins, then self correlation of 2nd bin, etc. The array\\n            starts at index_ct_dd.\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_26luminosity_distance	python/classy.c	/^static char __pyx_doc_6classy_5Class_26luminosity_distance[] = "\\n        luminosity_distance(z)\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_28pk	python/classy.c	/^static char __pyx_doc_6classy_5Class_28pk[] = "\\n        Gives the pk for a given k and z (will be non linear if requested to Class, linear otherwise)\\n\\n        .. note::\\n\\n            there is an additional check to verify if output contains `mPk`,\\n            because otherwise a segfault will occur\\n\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_30pk_lin	python/classy.c	/^static char __pyx_doc_6classy_5Class_30pk_lin[] = "\\n        Gives the linear pk for a given k and z (even if non linear corrections were requested to Class)\\n\\n        .. note::\\n\\n            there is an additional check to verify if output contains `mPk`,\\n            because otherwise a segfault will occur\\n\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_32get_pk	python/classy.c	/^static char __pyx_doc_6classy_5Class_32get_pk[] = " Fast function to get the power spectrum on a k and z array ";$/;"	v	file:
__pyx_doc_6classy_5Class_34get_pk_lin	python/classy.c	/^static char __pyx_doc_6classy_5Class_34get_pk_lin[] = " Fast function to get the linear power spectrum on a k and z array ";$/;"	v	file:
__pyx_doc_6classy_5Class_36sigma	python/classy.c	/^static char __pyx_doc_6classy_5Class_36sigma[] = "\\n        Gives the pk for a given R and z\\n        (R is the radius in units of Mpc, so if R=8\/h this will be the usual sigma8(z)\\n\\n        .. note::\\n\\n            there is an additional check to verify whether output contains `mPk`,\\n            and whether k_max > ...\\n            because otherwise a segfault will occur\\n\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_56angular_distance	python/classy.c	/^static char __pyx_doc_6classy_5Class_56angular_distance[] = "\\n        angular_distance(z)\\n\\n        Return the angular diameter distance (exactly, the quantity defined by Class\\n        as index_bg_ang_distance in the background module)\\n\\n        Parameters\\n        ----------\\n        z : float\\n                Desired redshift\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_58scale_independent_growth_factor	python/classy.c	/^static char __pyx_doc_6classy_5Class_58scale_independent_growth_factor[] = "\\n        scale_independent_growth_factor(z)\\n\\n        Return the scale invariant growth factor D(a) for CDM perturbations\\n        (exactly, the quantity defined by Class as index_bg_D in the background module)\\n\\n        Parameters\\n        ----------\\n        z : float\\n                Desired redshift\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_60scale_independent_growth_factor_f	python/classy.c	/^static char __pyx_doc_6classy_5Class_60scale_independent_growth_factor_f[] = "\\n        scale_independent_growth_factor_f(z)\\n\\n        Return the scale invariant growth factor f(z)=d ln D \/ d ln a for CDM perturbations\\n        (exactly, the quantity defined by Class as index_bg_f in the background module)\\n\\n        Parameters\\n        ----------\\n        z : float\\n                Desired redshift\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_62Hubble	python/classy.c	/^static char __pyx_doc_6classy_5Class_62Hubble[] = "\\n        Hubble(z)\\n\\n        Return the Hubble rate (exactly, the quantity defined by Class as index_bg_H\\n        in the background module)\\n\\n        Parameters\\n        ----------\\n        z : float\\n                Desired redshift\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_64ionization_fraction	python/classy.c	/^static char __pyx_doc_6classy_5Class_64ionization_fraction[] = "\\n        ionization_fraction(z)\\n\\n        Return the ionization fraction for a given redshift z\\n\\n        Parameters\\n        ----------\\n        z : float\\n                Desired redshift\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_66baryon_temperature	python/classy.c	/^static char __pyx_doc_6classy_5Class_66baryon_temperature[] = "\\n        baryon_temperature(z)\\n\\n        Give the baryon temperature for a given redshift z\\n\\n        Parameters\\n        ----------\\n        z : float\\n                Desired redshift\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_68T_cmb	python/classy.c	/^static char __pyx_doc_6classy_5Class_68T_cmb[] = "\\n        Return the CMB temperature\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_70Omega0_m	python/classy.c	/^static char __pyx_doc_6classy_5Class_70Omega0_m[] = "\\n        Return the sum of Omega0 for all non-relativistic components\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_72get_background	python/classy.c	/^static char __pyx_doc_6classy_5Class_72get_background[] = "\\n        Return the background quantities.\\n\\n        Parameters\\n        ----------\\n\\n        Returns\\n        -------\\n        background : dictionary containing background.\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_74get_thermodynamics	python/classy.c	/^static char __pyx_doc_6classy_5Class_74get_thermodynamics[] = "\\n        Return the thermodynamics quantities.\\n\\n        Returns\\n        -------\\n        thermodynamics : dictionary containing thermodynamics.\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_76get_primordial	python/classy.c	/^static char __pyx_doc_6classy_5Class_76get_primordial[] = "\\n        Return the primordial scalar and\/or tensor spectrum depending on 'modes'.\\n        'output' must be set to something, e.g. 'tCl'.\\n\\n        Returns\\n        -------\\n        primordial : dictionary containing k-vector and primordial scalar and tensor P(k).\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_78get_perturbations	python/classy.c	/^static char __pyx_doc_6classy_5Class_78get_perturbations[] = "\\n        Return scalar, vector and\/or tensor perturbations as arrays for requested\\n        k-values.\\n\\n        .. note::\\n\\n            you need to specify both 'k_output_values', and have some\\n            perturbations computed, for instance by setting 'output' to 'tCl'.\\n\\n        Returns\\n        -------\\n        perturbations : dict of array of dicts\\n                perturbations['scalar'] is an array of length 'k_output_values' of\\n                dictionary containing scalar perturbations.\\n                Similar for perturbations['vector'] and perturbations['tensor'].\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_80get_transfer	python/classy.c	/^static char __pyx_doc_6classy_5Class_80get_transfer[] = "\\n        Return the density and\/or velocity transfer functions for all initial\\n        conditions today. You must include 'dCl' and 'vCl' in the list of\\n        'output'. The transfer functions can also be computed at higher redshift z\\n        provided that 'z_pk' has been set and that z is inside the region spanned by 'z_pk'.\\n\\n        Parameters\\n        ----------\\n        z  : redshift (default = 0)\\n        output_format  : ('class' or 'camb') Format transfer functions according to\\n                         CLASS convention (default) or CAMB convention.\\n\\n        Returns\\n        -------\\n        tk : dictionary containing transfer functions.\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_82get_current_derived_parameters	python/classy.c	/^static char __pyx_doc_6classy_5Class_82get_current_derived_parameters[] = "\\n        get_current_derived_parameters(names)\\n\\n        Return a dictionary containing an entry for all the names defined in the\\n        input list.\\n\\n        Parameters\\n        ----------\\n        names : list\\n                Derived parameters that can be asked from Monte Python, or\\n                elsewhere.\\n\\n        Returns\\n        -------\\n        derived : dict\\n\\n        .. warning::\\n\\n            This method used to take as an argument directly the data class from\\n            Monte Python. To maintain compatibility with this old feature, a\\n            check is performed to verify that names is indeed a list. If not, it\\n            returns a TypeError. The old version of this function, when asked\\n            with the new argument, will raise an AttributeError.\\n\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_84nonlinear_scale	python/classy.c	/^static char __pyx_doc_6classy_5Class_84nonlinear_scale[] = "\\n        nonlinear_scale(z, z_size)\\n\\n        Return the nonlinear scale for all the redshift specified in z, of size\\n        z_size\\n\\n        Parameters\\n        ----------\\n        z : numpy array\\n                Array of requested redshifts\\n        z_size : int\\n                Size of the redshift array\\n        ";$/;"	v	file:
__pyx_doc_6classy_5Class_86__call__	python/classy.c	/^static char __pyx_doc_6classy_5Class_86__call__[] = "\\n        Function to interface with CosmoHammer\\n\\n        Parameters\\n        ----------\\n        ctx : context\\n                Contains several dictionaries storing data and cosmological\\n                information\\n\\n        ";$/;"	v	file:
__pyx_empty_bytes	python/classy.c	/^static PyObject *__pyx_empty_bytes;$/;"	v	file:
__pyx_empty_tuple	python/classy.c	/^static PyObject *__pyx_empty_tuple;$/;"	v	file:
__pyx_empty_unicode	python/classy.c	/^static PyObject *__pyx_empty_unicode;$/;"	v	file:
__pyx_f	python/classy.c	/^static const char *__pyx_f[] = {$/;"	v	file:
__pyx_f_5numpy_PyArray_MultiIterNew1	python/classy.c	/^static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {$/;"	f	file:
__pyx_f_5numpy_PyArray_MultiIterNew2	python/classy.c	/^static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {$/;"	f	file:
__pyx_f_5numpy_PyArray_MultiIterNew3	python/classy.c	/^static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {$/;"	f	file:
__pyx_f_5numpy_PyArray_MultiIterNew4	python/classy.c	/^static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {$/;"	f	file:
__pyx_f_5numpy_PyArray_MultiIterNew5	python/classy.c	/^static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {$/;"	f	file:
__pyx_f_5numpy__util_dtypestring	python/classy.c	/^static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {$/;"	f	file:
__pyx_f_5numpy_get_array_base	python/classy.c	/^static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {$/;"	f	file:
__pyx_f_5numpy_set_array_base	python/classy.c	/^static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {$/;"	f	file:
__pyx_filename	python/classy.c	/^static const char *__pyx_filename;$/;"	v	file:
__pyx_find_code_object	python/classy.c	/^static PyCodeObject *__pyx_find_code_object(int code_line) {$/;"	f	file:
__pyx_float_0_	python/classy.c	/^static PyObject *__pyx_float_0_;$/;"	v	file:
__pyx_getprop_6classy_5Class_Omega_nu	python/classy.c	/^static PyObject *__pyx_getprop_6classy_5Class_Omega_nu(PyObject *o, CYTHON_UNUSED void *x) {$/;"	f	file:
__pyx_getprop_6classy_5Class_nonlinear_method	python/classy.c	/^static PyObject *__pyx_getprop_6classy_5Class_nonlinear_method(PyObject *o, CYTHON_UNUSED void *x) {$/;"	f	file:
__pyx_getprop_6classy_5Class_pars	python/classy.c	/^static PyObject *__pyx_getprop_6classy_5Class_pars(PyObject *o, CYTHON_UNUSED void *x) {$/;"	f	file:
__pyx_getprop_6classy_5Class_state	python/classy.c	/^static PyObject *__pyx_getprop_6classy_5Class_state(PyObject *o, CYTHON_UNUSED void *x) {$/;"	f	file:
__pyx_getsets_6classy_Class	python/classy.c	/^static struct PyGetSetDef __pyx_getsets_6classy_Class[] = {$/;"	v	typeref:struct:PyGetSetDef	file:
__pyx_insert_code_object	python/classy.c	/^static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {$/;"	f	file:
__pyx_int_0	python/classy.c	/^static PyObject *__pyx_int_0;$/;"	v	file:
__pyx_int_1	python/classy.c	/^static PyObject *__pyx_int_1;$/;"	v	file:
__pyx_int_neg_1	python/classy.c	/^static PyObject *__pyx_int_neg_1;$/;"	v	file:
__pyx_k_	python/classy.c	/^static const char __pyx_k_[] = "";$/;"	v	file:
__pyx_k_100_theta_s	python/classy.c	/^static const char __pyx_k_100_theta_s[] = "100*theta_s";$/;"	v	file:
__pyx_k_A_s	python/classy.c	/^static const char __pyx_k_A_s[] = "A_s";$/;"	v	file:
__pyx_k_Can_only_compute_up_to_lmax_d	python/classy.c	/^static const char __pyx_k_Can_only_compute_up_to_lmax_d[] = "Can only compute up to lmax=%d";$/;"	v	file:
__pyx_k_Class_did_not_read_input_paramet	python/classy.c	/^static const char __pyx_k_Class_did_not_read_input_paramet[] = "Class did not read input parameter(s): %s\\n";$/;"	v	file:
__pyx_k_CosmoComputationError	python/classy.c	/^static const char __pyx_k_CosmoComputationError[] = "CosmoComputationError";$/;"	v	file:
__pyx_k_CosmoError	python/classy.c	/^static const char __pyx_k_CosmoError[] = "CosmoError";$/;"	v	file:
__pyx_k_CosmoError___init	python/classy.c	/^static const char __pyx_k_CosmoError___init[] = "CosmoError.__init__";$/;"	v	file:
__pyx_k_CosmoError___str	python/classy.c	/^static const char __pyx_k_CosmoError___str[] = "CosmoError.__str__";$/;"	v	file:
__pyx_k_CosmoSevereError	python/classy.c	/^static const char __pyx_k_CosmoSevereError[] = "CosmoSevereError";$/;"	v	file:
__pyx_k_Deprecated	python/classy.c	/^static const char __pyx_k_Deprecated[] = "Deprecated";$/;"	v	file:
__pyx_k_Error_in_Class	python/classy.c	/^static const char __pyx_k_Error_in_Class[] = "\\n\\nError in Class: ";$/;"	v	file:
__pyx_k_Exception	python/classy.c	/^static const char __pyx_k_Exception[] = "Exception";$/;"	v	file:
__pyx_k_Format_string_allocated_too_shor	python/classy.c	/^static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";$/;"	v	file:
__pyx_k_Format_string_allocated_too_shor_2	python/classy.c	/^static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";$/;"	v	file:
__pyx_k_H0	python/classy.c	/^static const char __pyx_k_H0[] = "H0";$/;"	v	file:
__pyx_k_In_order_to_get_sigma_R_z_you_mu	python/classy.c	/^static const char __pyx_k_In_order_to_get_sigma_R_z_you_mu[] = "In order to get sigma(R,z) you must set 'P_k_max_h\/Mpc' to 1 or bigger, in order to have k_max > 1 h\/Mpc.";$/;"	v	file:
__pyx_k_Neff	python/classy.c	/^static const char __pyx_k_Neff[] = "Neff";$/;"	v	file:
__pyx_k_No_Cl_computed	python/classy.c	/^static const char __pyx_k_No_Cl_computed[] = "No Cl computed";$/;"	v	file:
__pyx_k_No_density_Cl_computed	python/classy.c	/^static const char __pyx_k_No_density_Cl_computed[] = "No density Cl computed";$/;"	v	file:
__pyx_k_No_lensed_Cl_computed	python/classy.c	/^static const char __pyx_k_No_lensed_Cl_computed[] = "No lensed Cl computed";$/;"	v	file:
__pyx_k_No_power_spectrum_computed_In_or	python/classy.c	/^static const char __pyx_k_No_power_spectrum_computed_In_or[] = "No power spectrum computed. In order to get sigma(R,z) you must add mPk to the list of outputs.";$/;"	v	file:
__pyx_k_No_power_spectrum_computed_You_m	python/classy.c	/^static const char __pyx_k_No_power_spectrum_computed_You_m[] = "No power spectrum computed. You must add mPk to the list of outputs.";$/;"	v	file:
__pyx_k_Non_native_byte_order_not_suppor	python/classy.c	/^static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";$/;"	v	file:
__pyx_k_Omega0_fld	python/classy.c	/^static const char __pyx_k_Omega0_fld[] = "Omega0_fld";$/;"	v	file:
__pyx_k_Omega0_lambda	python/classy.c	/^static const char __pyx_k_Omega0_lambda[] = "Omega0_lambda";$/;"	v	file:
__pyx_k_Omega_Lambda	python/classy.c	/^static const char __pyx_k_Omega_Lambda[] = "Omega_Lambda";$/;"	v	file:
__pyx_k_Omega_m	python/classy.c	/^static const char __pyx_k_Omega_m[] = "Omega_m";$/;"	v	file:
__pyx_k_R	python/classy.c	/^static const char __pyx_k_R[] = "R";$/;"	v	file:
__pyx_k_Raised_when_Class_could_not_com	python/classy.c	/^static const char __pyx_k_Raised_when_Class_could_not_com[] = "\\n    Raised when Class could not compute the cosmology at this point.\\n\\n    This will be caught by the parameter extraction code to give an extremely\\n    unlikely value to this point\\n    ";$/;"	v	file:
__pyx_k_Raised_when_Class_failed_to_und	python/classy.c	/^static const char __pyx_k_Raised_when_Class_failed_to_und[] = "\\n    Raised when Class failed to understand one or more input parameters.\\n\\n    This case would not raise any problem in Class default behaviour. However,\\n    for parameter extraction, one has to be sure that all input parameters were\\n    understood, otherwise the wrong cosmological model would be selected.\\n    ";$/;"	v	file:
__pyx_k_RuntimeError	python/classy.c	/^static const char __pyx_k_RuntimeError[] = "RuntimeError";$/;"	v	file:
__pyx_k_TypeError	python/classy.c	/^static const char __pyx_k_TypeError[] = "TypeError";$/;"	v	file:
__pyx_k_V_0	python/classy.c	/^static const char __pyx_k_V_0[] = "V_0";$/;"	v	file:
__pyx_k_V_1	python/classy.c	/^static const char __pyx_k_V_1[] = "V_1";$/;"	v	file:
__pyx_k_V_2	python/classy.c	/^static const char __pyx_k_V_2[] = "V_2";$/;"	v	file:
__pyx_k_V_3	python/classy.c	/^static const char __pyx_k_V_3[] = "V_3";$/;"	v	file:
__pyx_k_V_4	python/classy.c	/^static const char __pyx_k_V_4[] = "V_4";$/;"	v	file:
__pyx_k_ValueError	python/classy.c	/^static const char __pyx_k_ValueError[] = "ValueError";$/;"	v	file:
__pyx_k_YHe	python/classy.c	/^static const char __pyx_k_YHe[] = "YHe";$/;"	v	file:
__pyx_k__27	python/classy.c	/^static const char __pyx_k__27[] = "\\t";$/;"	v	file:
__pyx_k__3	python/classy.c	/^static const char __pyx_k__3[] = " ";$/;"	v	file:
__pyx_k__4	python/classy.c	/^static PyObject *__pyx_k__4;$/;"	v	file:
__pyx_k__6	python/classy.c	/^static const char __pyx_k__6[] = ", ";$/;"	v	file:
__pyx_k_add	python/classy.c	/^static const char __pyx_k_add[] = "add";$/;"	v	file:
__pyx_k_age	python/classy.c	/^static const char __pyx_k_age[] = "age";$/;"	v	file:
__pyx_k_alpha_II_201_2500	python/classy.c	/^static const char __pyx_k_alpha_II_201_2500[] = "alpha_II_201_2500";$/;"	v	file:
__pyx_k_alpha_II_21_200	python/classy.c	/^static const char __pyx_k_alpha_II_21_200[] = "alpha_II_21_200";$/;"	v	file:
__pyx_k_alpha_II_2_20	python/classy.c	/^static const char __pyx_k_alpha_II_2_20[] = "alpha_II_2_20";$/;"	v	file:
__pyx_k_alpha_II_2_2500	python/classy.c	/^static const char __pyx_k_alpha_II_2_2500[] = "alpha_II_2_2500";$/;"	v	file:
__pyx_k_alpha_RI_201_2500	python/classy.c	/^static const char __pyx_k_alpha_RI_201_2500[] = "alpha_RI_201_2500";$/;"	v	file:
__pyx_k_alpha_RI_21_200	python/classy.c	/^static const char __pyx_k_alpha_RI_21_200[] = "alpha_RI_21_200";$/;"	v	file:
__pyx_k_alpha_RI_2_20	python/classy.c	/^static const char __pyx_k_alpha_RI_2_20[] = "alpha_RI_2_20";$/;"	v	file:
__pyx_k_alpha_RI_2_2500	python/classy.c	/^static const char __pyx_k_alpha_RI_2_2500[] = "alpha_RI_2_2500";$/;"	v	file:
__pyx_k_alpha_RR_201_2500	python/classy.c	/^static const char __pyx_k_alpha_RR_201_2500[] = "alpha_RR_201_2500";$/;"	v	file:
__pyx_k_alpha_RR_21_200	python/classy.c	/^static const char __pyx_k_alpha_RR_21_200[] = "alpha_RR_21_200";$/;"	v	file:
__pyx_k_alpha_RR_2_20	python/classy.c	/^static const char __pyx_k_alpha_RR_2_20[] = "alpha_RR_2_20";$/;"	v	file:
__pyx_k_alpha_RR_2_2500	python/classy.c	/^static const char __pyx_k_alpha_RR_2_2500[] = "alpha_RR_2_2500";$/;"	v	file:
__pyx_k_alpha_k1	python/classy.c	/^static const char __pyx_k_alpha_k1[] = "alpha_k1";$/;"	v	file:
__pyx_k_alpha_k2	python/classy.c	/^static const char __pyx_k_alpha_k2[] = "alpha_k2";$/;"	v	file:
__pyx_k_alpha_kp	python/classy.c	/^static const char __pyx_k_alpha_kp[] = "alpha_kp";$/;"	v	file:
__pyx_k_alpha_s	python/classy.c	/^static const char __pyx_k_alpha_s[] = "alpha_s";$/;"	v	file:
__pyx_k_alpha_t	python/classy.c	/^static const char __pyx_k_alpha_t[] = "alpha_t";$/;"	v	file:
__pyx_k_append	python/classy.c	/^static const char __pyx_k_append[] = "append";$/;"	v	file:
__pyx_k_arange	python/classy.c	/^static const char __pyx_k_arange[] = "arange";$/;"	v	file:
__pyx_k_background	python/classy.c	/^static const char __pyx_k_background[] = "background";$/;"	v	file:
__pyx_k_bad_call	python/classy.c	/^static const char __pyx_k_bad_call[] = "bad call";$/;"	v	file:
__pyx_k_bb	python/classy.c	/^static const char __pyx_k_bb[] = "bb";$/;"	v	file:
__pyx_k_beta_s	python/classy.c	/^static const char __pyx_k_beta_s[] = "beta_s";$/;"	v	file:
__pyx_k_boundary	python/classy.c	/^static const char __pyx_k_boundary[] = "boundary";$/;"	v	file:
__pyx_k_but_you_asked_a_l_i	python/classy.c	/^static const char __pyx_k_but_you_asked_a_l_i[] = "but you asked a l=%i";$/;"	v	file:
__pyx_k_camb	python/classy.c	/^static const char __pyx_k_camb[] = "camb";$/;"	v	file:
__pyx_k_check_task_dependency	python/classy.c	/^static const char __pyx_k_check_task_dependency[] = "_check_task_dependency";$/;"	v	file:
__pyx_k_cita_d_homes_home_2_xwang_works	python/classy.c	/^static const char __pyx_k_cita_d_homes_home_2_xwang_works[] = "\/cita\/d\/homes\/home-2\/xwang\/workspace\/software\/class_public\/python\/classy.pyx";$/;"	v	file:
__pyx_k_class	python/classy.c	/^static const char __pyx_k_class[] = "class";$/;"	v	file:
__pyx_k_classy	python/classy.c	/^static const char __pyx_k_classy[] = "classy";$/;"	v	file:
__pyx_k_compute	python/classy.c	/^static const char __pyx_k_compute[] = "compute";$/;"	v	file:
__pyx_k_conformal_age	python/classy.c	/^static const char __pyx_k_conformal_age[] = "conformal_age";$/;"	v	file:
__pyx_k_contains	python/classy.c	/^static const char __pyx_k_contains[] = "contains";$/;"	v	file:
__pyx_k_cosmo	python/classy.c	/^static const char __pyx_k_cosmo[] = "cosmo";$/;"	v	file:
__pyx_k_cosmo_arguments	python/classy.c	/^static const char __pyx_k_cosmo_arguments[] = "cosmo_arguments";$/;"	v	file:
__pyx_k_ctx	python/classy.c	/^static const char __pyx_k_ctx[] = "ctx";$/;"	v	file:
__pyx_k_current	python/classy.c	/^static const char __pyx_k_current[] = "current";$/;"	v	file:
__pyx_k_da_rec	python/classy.c	/^static const char __pyx_k_da_rec[] = "da_rec";$/;"	v	file:
__pyx_k_da_rec_h	python/classy.c	/^static const char __pyx_k_da_rec_h[] = "da_rec_h";$/;"	v	file:
__pyx_k_data	python/classy.c	/^static const char __pyx_k_data[] = "data";$/;"	v	file:
__pyx_k_dd	python/classy.c	/^static const char __pyx_k_dd[] = "dd";$/;"	v	file:
__pyx_k_decode	python/classy.c	/^static const char __pyx_k_decode[] = "decode";$/;"	v	file:
__pyx_k_default	python/classy.c	/^static const char __pyx_k_default[] = "default";$/;"	v	file:
__pyx_k_derived	python/classy.c	/^static const char __pyx_k_derived[] = "derived";$/;"	v	file:
__pyx_k_dl	python/classy.c	/^static const char __pyx_k_dl[] = "dl";$/;"	v	file:
__pyx_k_doc	python/classy.c	/^static const char __pyx_k_doc[] = "__doc__";$/;"	v	file:
__pyx_k_double	python/classy.c	/^static const char __pyx_k_double[] = "double";$/;"	v	file:
__pyx_k_ds_d	python/classy.c	/^static const char __pyx_k_ds_d[] = "ds_d";$/;"	v	file:
__pyx_k_ds_d_h	python/classy.c	/^static const char __pyx_k_ds_d_h[] = "ds_d_h";$/;"	v	file:
__pyx_k_ds_rec	python/classy.c	/^static const char __pyx_k_ds_rec[] = "ds_rec";$/;"	v	file:
__pyx_k_ds_rec_h	python/classy.c	/^static const char __pyx_k_ds_rec_h[] = "ds_rec_h";$/;"	v	file:
__pyx_k_dtype	python/classy.c	/^static const char __pyx_k_dtype[] = "dtype";$/;"	v	file:
__pyx_k_ee	python/classy.c	/^static const char __pyx_k_ee[] = "ee";$/;"	v	file:
__pyx_k_ell	python/classy.c	/^static const char __pyx_k_ell[] = "ell";$/;"	v	file:
__pyx_k_encode	python/classy.c	/^static const char __pyx_k_encode[] = "encode";$/;"	v	file:
__pyx_k_epsilon_V	python/classy.c	/^static const char __pyx_k_epsilon_V[] = "epsilon_V";$/;"	v	file:
__pyx_k_eta_V	python/classy.c	/^static const char __pyx_k_eta_V[] = "eta_V";$/;"	v	file:
__pyx_k_exp	python/classy.c	/^static const char __pyx_k_exp[] = "exp";$/;"	v	file:
__pyx_k_exp_m_2_tau_As	python/classy.c	/^static const char __pyx_k_exp_m_2_tau_As[] = "exp_m_2_tau_As";$/;"	v	file:
__pyx_k_fillparfile	python/classy.c	/^static const char __pyx_k_fillparfile[] = "_fillparfile";$/;"	v	file:
__pyx_k_float64	python/classy.c	/^static const char __pyx_k_float64[] = "float64";$/;"	v	file:
__pyx_k_get	python/classy.c	/^static const char __pyx_k_get[] = "get";$/;"	v	file:
__pyx_k_getData	python/classy.c	/^static const char __pyx_k_getData[] = "getData";$/;"	v	file:
__pyx_k_get_current_derived_parameters	python/classy.c	/^static const char __pyx_k_get_current_derived_parameters[] = "get_current_derived_parameters";$/;"	v	file:
__pyx_k_get_mcmc_parameters	python/classy.c	/^static const char __pyx_k_get_mcmc_parameters[] = "get_mcmc_parameters";$/;"	v	file:
__pyx_k_h	python/classy.c	/^static const char __pyx_k_h[] = "h";$/;"	v	file:
__pyx_k_import	python/classy.c	/^static const char __pyx_k_import[] = "__import__";$/;"	v	file:
__pyx_k_init	python/classy.c	/^static const char __pyx_k_init[] = "__init__";$/;"	v	file:
__pyx_k_input	python/classy.c	/^static const char __pyx_k_input[] = "input";$/;"	v	file:
__pyx_k_issuperset	python/classy.c	/^static const char __pyx_k_issuperset[] = "issuperset";$/;"	v	file:
__pyx_k_join	python/classy.c	/^static const char __pyx_k_join[] = "join";$/;"	v	file:
__pyx_k_k	python/classy.c	/^static const char __pyx_k_k[] = "k";$/;"	v	file:
__pyx_k_k_size	python/classy.c	/^static const char __pyx_k_k_size[] = "k_size";$/;"	v	file:
__pyx_k_key	python/classy.c	/^static const char __pyx_k_key[] = "key";$/;"	v	file:
__pyx_k_ksi_V_2	python/classy.c	/^static const char __pyx_k_ksi_V_2[] = "ksi_V^2";$/;"	v	file:
__pyx_k_l_max_lss	python/classy.c	/^static const char __pyx_k_l_max_lss[] = "l_max_lss";$/;"	v	file:
__pyx_k_l_max_scalars	python/classy.c	/^static const char __pyx_k_l_max_scalars[] = "l_max_scalars";$/;"	v	file:
__pyx_k_lensing	python/classy.c	/^static const char __pyx_k_lensing[] = "lensing";$/;"	v	file:
__pyx_k_level	python/classy.c	/^static const char __pyx_k_level[] = "level";$/;"	v	file:
__pyx_k_ll	python/classy.c	/^static const char __pyx_k_ll[] = "ll";$/;"	v	file:
__pyx_k_lmax	python/classy.c	/^static const char __pyx_k_lmax[] = "lmax";$/;"	v	file:
__pyx_k_ln10_10_A_s	python/classy.c	/^static const char __pyx_k_ln10_10_A_s[] = "ln10^{10}A_s";$/;"	v	file:
__pyx_k_log	python/classy.c	/^static const char __pyx_k_log[] = "log";$/;"	v	file:
__pyx_k_m_ncdm_in_eV	python/classy.c	/^static const char __pyx_k_m_ncdm_in_eV[] = "m_ncdm_in_eV";$/;"	v	file:
__pyx_k_m_ncdm_tot	python/classy.c	/^static const char __pyx_k_m_ncdm_tot[] = "m_ncdm_tot";$/;"	v	file:
__pyx_k_main	python/classy.c	/^static const char __pyx_k_main[] = "__main__";$/;"	v	file:
__pyx_k_math	python/classy.c	/^static const char __pyx_k_math[] = "math";$/;"	v	file:
__pyx_k_mcmc_parameters	python/classy.c	/^static const char __pyx_k_mcmc_parameters[] = "mcmc_parameters";$/;"	v	file:
__pyx_k_message	python/classy.c	/^static const char __pyx_k_message[] = "message";$/;"	v	file:
__pyx_k_metaclass	python/classy.c	/^static const char __pyx_k_metaclass[] = "__metaclass__";$/;"	v	file:
__pyx_k_module	python/classy.c	/^static const char __pyx_k_module[] = "__module__";$/;"	v	file:
__pyx_k_module_classy_synopsis_Python_w	python/classy.c	/^static const char __pyx_k_module_classy_synopsis_Python_w[] = "\\n.. module:: classy\\n    :synopsis: Python wrapper around CLASS\\n.. moduleauthor:: Karim Benabed <benabed@iap.fr>\\n.. moduleauthor:: Benjamin Audren <benjamin.audren@epfl.ch>\\n.. moduleauthor:: Julien Lesgourgues <lesgourg@cern.ch>\\n\\nThis module defines a class called Class. It is used with Monte Python to\\nextract cosmological parameters.\\n\\n# JL 14.06.2017: TODO: check whether we should free somewhere the allocated fc.filename and titles, data (4 times)\\n\\n";$/;"	v	file:
__pyx_k_mu_size	python/classy.c	/^static const char __pyx_k_mu_size[] = "mu_size";$/;"	v	file:
__pyx_k_nCl	python/classy.c	/^static const char __pyx_k_nCl[] = "nCl";$/;"	v	file:
__pyx_k_n_e	python/classy.c	/^static const char __pyx_k_n_e[] = "n_e";$/;"	v	file:
__pyx_k_n_s	python/classy.c	/^static const char __pyx_k_n_s[] = "n_s";$/;"	v	file:
__pyx_k_n_t	python/classy.c	/^static const char __pyx_k_n_t[] = "n_t";$/;"	v	file:
__pyx_k_ndarray_is_not_C_contiguous	python/classy.c	/^static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";$/;"	v	file:
__pyx_k_ndarray_is_not_Fortran_contiguou	python/classy.c	/^static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";$/;"	v	file:
__pyx_k_nofail	python/classy.c	/^static const char __pyx_k_nofail[] = "nofail";$/;"	v	file:
__pyx_k_nonlinear	python/classy.c	/^static const char __pyx_k_nonlinear[] = "nonlinear";$/;"	v	file:
__pyx_k_np	python/classy.c	/^static const char __pyx_k_np[] = "np";$/;"	v	file:
__pyx_k_numpy	python/classy.c	/^static const char __pyx_k_numpy[] = "numpy";$/;"	v	file:
__pyx_k_omega_m	python/classy.c	/^static const char __pyx_k_omega_m[] = "omega_m";$/;"	v	file:
__pyx_k_output	python/classy.c	/^static const char __pyx_k_output[] = "output";$/;"	v	file:
__pyx_k_output_format	python/classy.c	/^static const char __pyx_k_output_format[] = "output_format";$/;"	v	file:
__pyx_k_pars_check	python/classy.c	/^static const char __pyx_k_pars_check[] = "_pars_check";$/;"	v	file:
__pyx_k_perturb	python/classy.c	/^static const char __pyx_k_perturb[] = "perturb";$/;"	v	file:
__pyx_k_phi_max	python/classy.c	/^static const char __pyx_k_phi_max[] = "phi_max";$/;"	v	file:
__pyx_k_phi_min	python/classy.c	/^static const char __pyx_k_phi_min[] = "phi_min";$/;"	v	file:
__pyx_k_pk	python/classy.c	/^static const char __pyx_k_pk[] = "pk";$/;"	v	file:
__pyx_k_pk_lin	python/classy.c	/^static const char __pyx_k_pk_lin[] = "pk_lin";$/;"	v	file:
__pyx_k_pp	python/classy.c	/^static const char __pyx_k_pp[] = "pp";$/;"	v	file:
__pyx_k_prepare	python/classy.c	/^static const char __pyx_k_prepare[] = "__prepare__";$/;"	v	file:
__pyx_k_primordial	python/classy.c	/^static const char __pyx_k_primordial[] = "primordial";$/;"	v	file:
__pyx_k_qualname	python/classy.c	/^static const char __pyx_k_qualname[] = "__qualname__";$/;"	v	file:
__pyx_k_r	python/classy.c	/^static const char __pyx_k_r[] = "r";$/;"	v	file:
__pyx_k_r_0002	python/classy.c	/^static const char __pyx_k_r_0002[] = "r_0002";$/;"	v	file:
__pyx_k_ra_rec	python/classy.c	/^static const char __pyx_k_ra_rec[] = "ra_rec";$/;"	v	file:
__pyx_k_ra_rec_h	python/classy.c	/^static const char __pyx_k_ra_rec_h[] = "ra_rec_h";$/;"	v	file:
__pyx_k_range	python/classy.c	/^static const char __pyx_k_range[] = "range";$/;"	v	file:
__pyx_k_rs_d	python/classy.c	/^static const char __pyx_k_rs_d[] = "rs_d";$/;"	v	file:
__pyx_k_rs_d_h	python/classy.c	/^static const char __pyx_k_rs_d_h[] = "rs_d_h";$/;"	v	file:
__pyx_k_rs_rec	python/classy.c	/^static const char __pyx_k_rs_rec[] = "rs_rec";$/;"	v	file:
__pyx_k_rs_rec_h	python/classy.c	/^static const char __pyx_k_rs_rec_h[] = "rs_rec_h";$/;"	v	file:
__pyx_k_s_was_not_recognized_as_a_deriv	python/classy.c	/^static const char __pyx_k_s_was_not_recognized_as_a_deriv[] = "%s was not recognized as a derived parameter";$/;"	v	file:
__pyx_k_scalar	python/classy.c	/^static const char __pyx_k_scalar[] = "scalar";$/;"	v	file:
__pyx_k_scale	python/classy.c	/^static const char __pyx_k_scale[] = "scale";$/;"	v	file:
__pyx_k_self	python/classy.c	/^static const char __pyx_k_self[] = "self";$/;"	v	file:
__pyx_k_set	python/classy.c	/^static const char __pyx_k_set[] = "set";$/;"	v	file:
__pyx_k_set_default	python/classy.c	/^static const char __pyx_k_set_default[] = "set_default";$/;"	v	file:
__pyx_k_sigma8	python/classy.c	/^static const char __pyx_k_sigma8[] = "sigma8";$/;"	v	file:
__pyx_k_spectra	python/classy.c	/^static const char __pyx_k_spectra[] = "spectra";$/;"	v	file:
__pyx_k_split	python/classy.c	/^static const char __pyx_k_split[] = "split";$/;"	v	file:
__pyx_k_state	python/classy.c	/^static const char __pyx_k_state[] = "state";$/;"	v	file:
__pyx_k_str	python/classy.c	/^static const char __pyx_k_str[] = "__str__";$/;"	v	file:
__pyx_k_struct_cleanup	python/classy.c	/^static const char __pyx_k_struct_cleanup[] = "struct_cleanup";$/;"	v	file:
__pyx_k_tCl_mPk	python/classy.c	/^static const char __pyx_k_tCl_mPk[] = "tCl mPk";$/;"	v	file:
__pyx_k_tau_d	python/classy.c	/^static const char __pyx_k_tau_d[] = "tau_d";$/;"	v	file:
__pyx_k_tau_rec	python/classy.c	/^static const char __pyx_k_tau_rec[] = "tau_rec";$/;"	v	file:
__pyx_k_tau_reio	python/classy.c	/^static const char __pyx_k_tau_reio[] = "tau_reio";$/;"	v	file:
__pyx_k_td	python/classy.c	/^static const char __pyx_k_td[] = "td";$/;"	v	file:
__pyx_k_te	python/classy.c	/^static const char __pyx_k_te[] = "te";$/;"	v	file:
__pyx_k_tensor	python/classy.c	/^static const char __pyx_k_tensor[] = "tensor";$/;"	v	file:
__pyx_k_test	python/classy.c	/^static const char __pyx_k_test[] = "__test__";$/;"	v	file:
__pyx_k_the_s_spectrum_was_computed_unti	python/classy.c	/^static const char __pyx_k_the_s_spectrum_was_computed_unti[] = "the %s spectrum was computed until l=%i ";$/;"	v	file:
__pyx_k_thermodynamics	python/classy.c	/^static const char __pyx_k_thermodynamics[] = "thermodynamics";$/;"	v	file:
__pyx_k_tl	python/classy.c	/^static const char __pyx_k_tl[] = "tl";$/;"	v	file:
__pyx_k_tp	python/classy.c	/^static const char __pyx_k_tp[] = "tp";$/;"	v	file:
__pyx_k_transfer	python/classy.c	/^static const char __pyx_k_transfer[] = "transfer";$/;"	v	file:
__pyx_k_tt	python/classy.c	/^static const char __pyx_k_tt[] = "tt";$/;"	v	file:
__pyx_k_unknown_dtype_code_in_numpy_pxd	python/classy.c	/^static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";$/;"	v	file:
__pyx_k_update	python/classy.c	/^static const char __pyx_k_update[] = "update";$/;"	v	file:
__pyx_k_upper	python/classy.c	/^static const char __pyx_k_upper[] = "upper";$/;"	v	file:
__pyx_k_value	python/classy.c	/^static const char __pyx_k_value[] = "value";$/;"	v	file:
__pyx_k_vector	python/classy.c	/^static const char __pyx_k_vector[] = "vector";$/;"	v	file:
__pyx_k_xrange	python/classy.c	/^static const char __pyx_k_xrange[] = "xrange";$/;"	v	file:
__pyx_k_z	python/classy.c	/^static const char __pyx_k_z[] = "z";$/;"	v	file:
__pyx_k_z_d	python/classy.c	/^static const char __pyx_k_z_d[] = "z_d";$/;"	v	file:
__pyx_k_z_rec	python/classy.c	/^static const char __pyx_k_z_rec[] = "z_rec";$/;"	v	file:
__pyx_k_z_reio	python/classy.c	/^static const char __pyx_k_z_reio[] = "z_reio";$/;"	v	file:
__pyx_k_z_size	python/classy.c	/^static const char __pyx_k_z_size[] = "z_size";$/;"	v	file:
__pyx_k_zeros	python/classy.c	/^static const char __pyx_k_zeros[] = "zeros";$/;"	v	file:
__pyx_kp_s_	python/classy.c	/^static PyObject *__pyx_kp_s_;$/;"	v	file:
__pyx_kp_s_100_theta_s	python/classy.c	/^static PyObject *__pyx_kp_s_100_theta_s;$/;"	v	file:
__pyx_kp_s_Can_only_compute_up_to_lmax_d	python/classy.c	/^static PyObject *__pyx_kp_s_Can_only_compute_up_to_lmax_d;$/;"	v	file:
__pyx_kp_s_Class_did_not_read_input_paramet	python/classy.c	/^static PyObject *__pyx_kp_s_Class_did_not_read_input_paramet;$/;"	v	file:
__pyx_kp_s_Error_in_Class	python/classy.c	/^static PyObject *__pyx_kp_s_Error_in_Class;$/;"	v	file:
__pyx_kp_s_In_order_to_get_sigma_R_z_you_mu	python/classy.c	/^static PyObject *__pyx_kp_s_In_order_to_get_sigma_R_z_you_mu;$/;"	v	file:
__pyx_kp_s_No_Cl_computed	python/classy.c	/^static PyObject *__pyx_kp_s_No_Cl_computed;$/;"	v	file:
__pyx_kp_s_No_density_Cl_computed	python/classy.c	/^static PyObject *__pyx_kp_s_No_density_Cl_computed;$/;"	v	file:
__pyx_kp_s_No_lensed_Cl_computed	python/classy.c	/^static PyObject *__pyx_kp_s_No_lensed_Cl_computed;$/;"	v	file:
__pyx_kp_s_No_power_spectrum_computed_In_or	python/classy.c	/^static PyObject *__pyx_kp_s_No_power_spectrum_computed_In_or;$/;"	v	file:
__pyx_kp_s_No_power_spectrum_computed_You_m	python/classy.c	/^static PyObject *__pyx_kp_s_No_power_spectrum_computed_You_m;$/;"	v	file:
__pyx_kp_s_Raised_when_Class_could_not_com	python/classy.c	/^static PyObject *__pyx_kp_s_Raised_when_Class_could_not_com;$/;"	v	file:
__pyx_kp_s_Raised_when_Class_failed_to_und	python/classy.c	/^static PyObject *__pyx_kp_s_Raised_when_Class_failed_to_und;$/;"	v	file:
__pyx_kp_s__27	python/classy.c	/^static PyObject *__pyx_kp_s__27;$/;"	v	file:
__pyx_kp_s__3	python/classy.c	/^static PyObject *__pyx_kp_s__3;$/;"	v	file:
__pyx_kp_s__6	python/classy.c	/^static PyObject *__pyx_kp_s__6;$/;"	v	file:
__pyx_kp_s_bad_call	python/classy.c	/^static PyObject *__pyx_kp_s_bad_call;$/;"	v	file:
__pyx_kp_s_but_you_asked_a_l_i	python/classy.c	/^static PyObject *__pyx_kp_s_but_you_asked_a_l_i;$/;"	v	file:
__pyx_kp_s_cita_d_homes_home_2_xwang_works	python/classy.c	/^static PyObject *__pyx_kp_s_cita_d_homes_home_2_xwang_works;$/;"	v	file:
__pyx_kp_s_ksi_V_2	python/classy.c	/^static PyObject *__pyx_kp_s_ksi_V_2;$/;"	v	file:
__pyx_kp_s_ln10_10_A_s	python/classy.c	/^static PyObject *__pyx_kp_s_ln10_10_A_s;$/;"	v	file:
__pyx_kp_s_s_was_not_recognized_as_a_deriv	python/classy.c	/^static PyObject *__pyx_kp_s_s_was_not_recognized_as_a_deriv;$/;"	v	file:
__pyx_kp_s_tCl_mPk	python/classy.c	/^static PyObject *__pyx_kp_s_tCl_mPk;$/;"	v	file:
__pyx_kp_s_the_s_spectrum_was_computed_unti	python/classy.c	/^static PyObject *__pyx_kp_s_the_s_spectrum_was_computed_unti;$/;"	v	file:
__pyx_kp_u_Format_string_allocated_too_shor	python/classy.c	/^static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;$/;"	v	file:
__pyx_kp_u_Format_string_allocated_too_shor_2	python/classy.c	/^static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;$/;"	v	file:
__pyx_kp_u_Non_native_byte_order_not_suppor	python/classy.c	/^static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;$/;"	v	file:
__pyx_kp_u_ndarray_is_not_C_contiguous	python/classy.c	/^static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;$/;"	v	file:
__pyx_kp_u_ndarray_is_not_Fortran_contiguou	python/classy.c	/^static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;$/;"	v	file:
__pyx_kp_u_unknown_dtype_code_in_numpy_pxd	python/classy.c	/^static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;$/;"	v	file:
__pyx_lineno	python/classy.c	/^static int __pyx_lineno;$/;"	v	file:
__pyx_m	python/classy.c	/^static PyObject *__pyx_m;$/;"	v	file:
__pyx_mdef_6classy_10CosmoError_1__init__	python/classy.c	/^static PyMethodDef __pyx_mdef_6classy_10CosmoError_1__init__ = {"__init__", (PyCFunction)__pyx_pw_6classy_10CosmoError_1__init__, METH_VARARGS|METH_KEYWORDS, 0};$/;"	v	file:
__pyx_mdef_6classy_10CosmoError_3__str__	python/classy.c	/^static PyMethodDef __pyx_mdef_6classy_10CosmoError_3__str__ = {"__str__", (PyCFunction)__pyx_pw_6classy_10CosmoError_3__str__, METH_O, 0};$/;"	v	file:
__pyx_methods	python/classy.c	/^static PyMethodDef __pyx_methods[] = {$/;"	v	file:
__pyx_methods_6classy_Class	python/classy.c	/^static PyMethodDef __pyx_methods_6classy_Class[] = {$/;"	v	file:
__pyx_module_is_main_classy	python/classy.c	/^int __pyx_module_is_main_classy = 0;$/;"	v
__pyx_moduledef	python/classy.c	/^static struct PyModuleDef __pyx_moduledef = {$/;"	v	typeref:struct:PyModuleDef	file:
__pyx_n_s_A_s	python/classy.c	/^static PyObject *__pyx_n_s_A_s;$/;"	v	file:
__pyx_n_s_CosmoComputationError	python/classy.c	/^static PyObject *__pyx_n_s_CosmoComputationError;$/;"	v	file:
__pyx_n_s_CosmoError	python/classy.c	/^static PyObject *__pyx_n_s_CosmoError;$/;"	v	file:
__pyx_n_s_CosmoError___init	python/classy.c	/^static PyObject *__pyx_n_s_CosmoError___init;$/;"	v	file:
__pyx_n_s_CosmoError___str	python/classy.c	/^static PyObject *__pyx_n_s_CosmoError___str;$/;"	v	file:
__pyx_n_s_CosmoSevereError	python/classy.c	/^static PyObject *__pyx_n_s_CosmoSevereError;$/;"	v	file:
__pyx_n_s_Deprecated	python/classy.c	/^static PyObject *__pyx_n_s_Deprecated;$/;"	v	file:
__pyx_n_s_Exception	python/classy.c	/^static PyObject *__pyx_n_s_Exception;$/;"	v	file:
__pyx_n_s_H0	python/classy.c	/^static PyObject *__pyx_n_s_H0;$/;"	v	file:
__pyx_n_s_Neff	python/classy.c	/^static PyObject *__pyx_n_s_Neff;$/;"	v	file:
__pyx_n_s_Omega0_fld	python/classy.c	/^static PyObject *__pyx_n_s_Omega0_fld;$/;"	v	file:
__pyx_n_s_Omega0_lambda	python/classy.c	/^static PyObject *__pyx_n_s_Omega0_lambda;$/;"	v	file:
__pyx_n_s_Omega_Lambda	python/classy.c	/^static PyObject *__pyx_n_s_Omega_Lambda;$/;"	v	file:
__pyx_n_s_Omega_m	python/classy.c	/^static PyObject *__pyx_n_s_Omega_m;$/;"	v	file:
__pyx_n_s_R	python/classy.c	/^static PyObject *__pyx_n_s_R;$/;"	v	file:
__pyx_n_s_RuntimeError	python/classy.c	/^static PyObject *__pyx_n_s_RuntimeError;$/;"	v	file:
__pyx_n_s_TypeError	python/classy.c	/^static PyObject *__pyx_n_s_TypeError;$/;"	v	file:
__pyx_n_s_V_0	python/classy.c	/^static PyObject *__pyx_n_s_V_0;$/;"	v	file:
__pyx_n_s_V_1	python/classy.c	/^static PyObject *__pyx_n_s_V_1;$/;"	v	file:
__pyx_n_s_V_2	python/classy.c	/^static PyObject *__pyx_n_s_V_2;$/;"	v	file:
__pyx_n_s_V_3	python/classy.c	/^static PyObject *__pyx_n_s_V_3;$/;"	v	file:
__pyx_n_s_V_4	python/classy.c	/^static PyObject *__pyx_n_s_V_4;$/;"	v	file:
__pyx_n_s_ValueError	python/classy.c	/^static PyObject *__pyx_n_s_ValueError;$/;"	v	file:
__pyx_n_s_YHe	python/classy.c	/^static PyObject *__pyx_n_s_YHe;$/;"	v	file:
__pyx_n_s_add	python/classy.c	/^static PyObject *__pyx_n_s_add;$/;"	v	file:
__pyx_n_s_age	python/classy.c	/^static PyObject *__pyx_n_s_age;$/;"	v	file:
__pyx_n_s_alpha_II_201_2500	python/classy.c	/^static PyObject *__pyx_n_s_alpha_II_201_2500;$/;"	v	file:
__pyx_n_s_alpha_II_21_200	python/classy.c	/^static PyObject *__pyx_n_s_alpha_II_21_200;$/;"	v	file:
__pyx_n_s_alpha_II_2_20	python/classy.c	/^static PyObject *__pyx_n_s_alpha_II_2_20;$/;"	v	file:
__pyx_n_s_alpha_II_2_2500	python/classy.c	/^static PyObject *__pyx_n_s_alpha_II_2_2500;$/;"	v	file:
__pyx_n_s_alpha_RI_201_2500	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RI_201_2500;$/;"	v	file:
__pyx_n_s_alpha_RI_21_200	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RI_21_200;$/;"	v	file:
__pyx_n_s_alpha_RI_2_20	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RI_2_20;$/;"	v	file:
__pyx_n_s_alpha_RI_2_2500	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RI_2_2500;$/;"	v	file:
__pyx_n_s_alpha_RR_201_2500	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RR_201_2500;$/;"	v	file:
__pyx_n_s_alpha_RR_21_200	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RR_21_200;$/;"	v	file:
__pyx_n_s_alpha_RR_2_20	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RR_2_20;$/;"	v	file:
__pyx_n_s_alpha_RR_2_2500	python/classy.c	/^static PyObject *__pyx_n_s_alpha_RR_2_2500;$/;"	v	file:
__pyx_n_s_alpha_k1	python/classy.c	/^static PyObject *__pyx_n_s_alpha_k1;$/;"	v	file:
__pyx_n_s_alpha_k2	python/classy.c	/^static PyObject *__pyx_n_s_alpha_k2;$/;"	v	file:
__pyx_n_s_alpha_kp	python/classy.c	/^static PyObject *__pyx_n_s_alpha_kp;$/;"	v	file:
__pyx_n_s_alpha_s	python/classy.c	/^static PyObject *__pyx_n_s_alpha_s;$/;"	v	file:
__pyx_n_s_alpha_t	python/classy.c	/^static PyObject *__pyx_n_s_alpha_t;$/;"	v	file:
__pyx_n_s_append	python/classy.c	/^static PyObject *__pyx_n_s_append;$/;"	v	file:
__pyx_n_s_arange	python/classy.c	/^static PyObject *__pyx_n_s_arange;$/;"	v	file:
__pyx_n_s_background	python/classy.c	/^static PyObject *__pyx_n_s_background;$/;"	v	file:
__pyx_n_s_bb	python/classy.c	/^static PyObject *__pyx_n_s_bb;$/;"	v	file:
__pyx_n_s_beta_s	python/classy.c	/^static PyObject *__pyx_n_s_beta_s;$/;"	v	file:
__pyx_n_s_boundary	python/classy.c	/^static PyObject *__pyx_n_s_boundary;$/;"	v	file:
__pyx_n_s_camb	python/classy.c	/^static PyObject *__pyx_n_s_camb;$/;"	v	file:
__pyx_n_s_check_task_dependency	python/classy.c	/^static PyObject *__pyx_n_s_check_task_dependency;$/;"	v	file:
__pyx_n_s_class	python/classy.c	/^static PyObject *__pyx_n_s_class;$/;"	v	file:
__pyx_n_s_classy	python/classy.c	/^static PyObject *__pyx_n_s_classy;$/;"	v	file:
__pyx_n_s_compute	python/classy.c	/^static PyObject *__pyx_n_s_compute;$/;"	v	file:
__pyx_n_s_conformal_age	python/classy.c	/^static PyObject *__pyx_n_s_conformal_age;$/;"	v	file:
__pyx_n_s_contains	python/classy.c	/^static PyObject *__pyx_n_s_contains;$/;"	v	file:
__pyx_n_s_cosmo	python/classy.c	/^static PyObject *__pyx_n_s_cosmo;$/;"	v	file:
__pyx_n_s_cosmo_arguments	python/classy.c	/^static PyObject *__pyx_n_s_cosmo_arguments;$/;"	v	file:
__pyx_n_s_ctx	python/classy.c	/^static PyObject *__pyx_n_s_ctx;$/;"	v	file:
__pyx_n_s_current	python/classy.c	/^static PyObject *__pyx_n_s_current;$/;"	v	file:
__pyx_n_s_da_rec	python/classy.c	/^static PyObject *__pyx_n_s_da_rec;$/;"	v	file:
__pyx_n_s_da_rec_h	python/classy.c	/^static PyObject *__pyx_n_s_da_rec_h;$/;"	v	file:
__pyx_n_s_data	python/classy.c	/^static PyObject *__pyx_n_s_data;$/;"	v	file:
__pyx_n_s_dd	python/classy.c	/^static PyObject *__pyx_n_s_dd;$/;"	v	file:
__pyx_n_s_decode	python/classy.c	/^static PyObject *__pyx_n_s_decode;$/;"	v	file:
__pyx_n_s_default	python/classy.c	/^static PyObject *__pyx_n_s_default;$/;"	v	file:
__pyx_n_s_derived	python/classy.c	/^static PyObject *__pyx_n_s_derived;$/;"	v	file:
__pyx_n_s_dl	python/classy.c	/^static PyObject *__pyx_n_s_dl;$/;"	v	file:
__pyx_n_s_doc	python/classy.c	/^static PyObject *__pyx_n_s_doc;$/;"	v	file:
__pyx_n_s_double	python/classy.c	/^static PyObject *__pyx_n_s_double;$/;"	v	file:
__pyx_n_s_ds_d	python/classy.c	/^static PyObject *__pyx_n_s_ds_d;$/;"	v	file:
__pyx_n_s_ds_d_h	python/classy.c	/^static PyObject *__pyx_n_s_ds_d_h;$/;"	v	file:
__pyx_n_s_ds_rec	python/classy.c	/^static PyObject *__pyx_n_s_ds_rec;$/;"	v	file:
__pyx_n_s_ds_rec_h	python/classy.c	/^static PyObject *__pyx_n_s_ds_rec_h;$/;"	v	file:
__pyx_n_s_dtype	python/classy.c	/^static PyObject *__pyx_n_s_dtype;$/;"	v	file:
__pyx_n_s_ee	python/classy.c	/^static PyObject *__pyx_n_s_ee;$/;"	v	file:
__pyx_n_s_ell	python/classy.c	/^static PyObject *__pyx_n_s_ell;$/;"	v	file:
__pyx_n_s_encode	python/classy.c	/^static PyObject *__pyx_n_s_encode;$/;"	v	file:
__pyx_n_s_epsilon_V	python/classy.c	/^static PyObject *__pyx_n_s_epsilon_V;$/;"	v	file:
__pyx_n_s_eta_V	python/classy.c	/^static PyObject *__pyx_n_s_eta_V;$/;"	v	file:
__pyx_n_s_exp	python/classy.c	/^static PyObject *__pyx_n_s_exp;$/;"	v	file:
__pyx_n_s_exp_m_2_tau_As	python/classy.c	/^static PyObject *__pyx_n_s_exp_m_2_tau_As;$/;"	v	file:
__pyx_n_s_fillparfile	python/classy.c	/^static PyObject *__pyx_n_s_fillparfile;$/;"	v	file:
__pyx_n_s_float64	python/classy.c	/^static PyObject *__pyx_n_s_float64;$/;"	v	file:
__pyx_n_s_get	python/classy.c	/^static PyObject *__pyx_n_s_get;$/;"	v	file:
__pyx_n_s_getData	python/classy.c	/^static PyObject *__pyx_n_s_getData;$/;"	v	file:
__pyx_n_s_get_current_derived_parameters	python/classy.c	/^static PyObject *__pyx_n_s_get_current_derived_parameters;$/;"	v	file:
__pyx_n_s_get_mcmc_parameters	python/classy.c	/^static PyObject *__pyx_n_s_get_mcmc_parameters;$/;"	v	file:
__pyx_n_s_h	python/classy.c	/^static PyObject *__pyx_n_s_h;$/;"	v	file:
__pyx_n_s_import	python/classy.c	/^static PyObject *__pyx_n_s_import;$/;"	v	file:
__pyx_n_s_init	python/classy.c	/^static PyObject *__pyx_n_s_init;$/;"	v	file:
__pyx_n_s_input	python/classy.c	/^static PyObject *__pyx_n_s_input;$/;"	v	file:
__pyx_n_s_issuperset	python/classy.c	/^static PyObject *__pyx_n_s_issuperset;$/;"	v	file:
__pyx_n_s_join	python/classy.c	/^static PyObject *__pyx_n_s_join;$/;"	v	file:
__pyx_n_s_k	python/classy.c	/^static PyObject *__pyx_n_s_k;$/;"	v	file:
__pyx_n_s_k_size	python/classy.c	/^static PyObject *__pyx_n_s_k_size;$/;"	v	file:
__pyx_n_s_key	python/classy.c	/^static PyObject *__pyx_n_s_key;$/;"	v	file:
__pyx_n_s_l_max_lss	python/classy.c	/^static PyObject *__pyx_n_s_l_max_lss;$/;"	v	file:
__pyx_n_s_l_max_scalars	python/classy.c	/^static PyObject *__pyx_n_s_l_max_scalars;$/;"	v	file:
__pyx_n_s_lensing	python/classy.c	/^static PyObject *__pyx_n_s_lensing;$/;"	v	file:
__pyx_n_s_level	python/classy.c	/^static PyObject *__pyx_n_s_level;$/;"	v	file:
__pyx_n_s_ll	python/classy.c	/^static PyObject *__pyx_n_s_ll;$/;"	v	file:
__pyx_n_s_lmax	python/classy.c	/^static PyObject *__pyx_n_s_lmax;$/;"	v	file:
__pyx_n_s_log	python/classy.c	/^static PyObject *__pyx_n_s_log;$/;"	v	file:
__pyx_n_s_m_ncdm_in_eV	python/classy.c	/^static PyObject *__pyx_n_s_m_ncdm_in_eV;$/;"	v	file:
__pyx_n_s_m_ncdm_tot	python/classy.c	/^static PyObject *__pyx_n_s_m_ncdm_tot;$/;"	v	file:
__pyx_n_s_main	python/classy.c	/^static PyObject *__pyx_n_s_main;$/;"	v	file:
__pyx_n_s_math	python/classy.c	/^static PyObject *__pyx_n_s_math;$/;"	v	file:
__pyx_n_s_mcmc_parameters	python/classy.c	/^static PyObject *__pyx_n_s_mcmc_parameters;$/;"	v	file:
__pyx_n_s_message	python/classy.c	/^static PyObject *__pyx_n_s_message;$/;"	v	file:
__pyx_n_s_metaclass	python/classy.c	/^static PyObject *__pyx_n_s_metaclass;$/;"	v	file:
__pyx_n_s_module	python/classy.c	/^static PyObject *__pyx_n_s_module;$/;"	v	file:
__pyx_n_s_mu_size	python/classy.c	/^static PyObject *__pyx_n_s_mu_size;$/;"	v	file:
__pyx_n_s_nCl	python/classy.c	/^static PyObject *__pyx_n_s_nCl;$/;"	v	file:
__pyx_n_s_n_e	python/classy.c	/^static PyObject *__pyx_n_s_n_e;$/;"	v	file:
__pyx_n_s_n_s	python/classy.c	/^static PyObject *__pyx_n_s_n_s;$/;"	v	file:
__pyx_n_s_n_t	python/classy.c	/^static PyObject *__pyx_n_s_n_t;$/;"	v	file:
__pyx_n_s_nofail	python/classy.c	/^static PyObject *__pyx_n_s_nofail;$/;"	v	file:
__pyx_n_s_nonlinear	python/classy.c	/^static PyObject *__pyx_n_s_nonlinear;$/;"	v	file:
__pyx_n_s_np	python/classy.c	/^static PyObject *__pyx_n_s_np;$/;"	v	file:
__pyx_n_s_numpy	python/classy.c	/^static PyObject *__pyx_n_s_numpy;$/;"	v	file:
__pyx_n_s_omega_m	python/classy.c	/^static PyObject *__pyx_n_s_omega_m;$/;"	v	file:
__pyx_n_s_output	python/classy.c	/^static PyObject *__pyx_n_s_output;$/;"	v	file:
__pyx_n_s_output_format	python/classy.c	/^static PyObject *__pyx_n_s_output_format;$/;"	v	file:
__pyx_n_s_pars_check	python/classy.c	/^static PyObject *__pyx_n_s_pars_check;$/;"	v	file:
__pyx_n_s_perturb	python/classy.c	/^static PyObject *__pyx_n_s_perturb;$/;"	v	file:
__pyx_n_s_phi_max	python/classy.c	/^static PyObject *__pyx_n_s_phi_max;$/;"	v	file:
__pyx_n_s_phi_min	python/classy.c	/^static PyObject *__pyx_n_s_phi_min;$/;"	v	file:
__pyx_n_s_pk	python/classy.c	/^static PyObject *__pyx_n_s_pk;$/;"	v	file:
__pyx_n_s_pk_lin	python/classy.c	/^static PyObject *__pyx_n_s_pk_lin;$/;"	v	file:
__pyx_n_s_pp	python/classy.c	/^static PyObject *__pyx_n_s_pp;$/;"	v	file:
__pyx_n_s_prepare	python/classy.c	/^static PyObject *__pyx_n_s_prepare;$/;"	v	file:
__pyx_n_s_primordial	python/classy.c	/^static PyObject *__pyx_n_s_primordial;$/;"	v	file:
__pyx_n_s_qualname	python/classy.c	/^static PyObject *__pyx_n_s_qualname;$/;"	v	file:
__pyx_n_s_r	python/classy.c	/^static PyObject *__pyx_n_s_r;$/;"	v	file:
__pyx_n_s_r_0002	python/classy.c	/^static PyObject *__pyx_n_s_r_0002;$/;"	v	file:
__pyx_n_s_ra_rec	python/classy.c	/^static PyObject *__pyx_n_s_ra_rec;$/;"	v	file:
__pyx_n_s_ra_rec_h	python/classy.c	/^static PyObject *__pyx_n_s_ra_rec_h;$/;"	v	file:
__pyx_n_s_range	python/classy.c	/^static PyObject *__pyx_n_s_range;$/;"	v	file:
__pyx_n_s_rs_d	python/classy.c	/^static PyObject *__pyx_n_s_rs_d;$/;"	v	file:
__pyx_n_s_rs_d_h	python/classy.c	/^static PyObject *__pyx_n_s_rs_d_h;$/;"	v	file:
__pyx_n_s_rs_rec	python/classy.c	/^static PyObject *__pyx_n_s_rs_rec;$/;"	v	file:
__pyx_n_s_rs_rec_h	python/classy.c	/^static PyObject *__pyx_n_s_rs_rec_h;$/;"	v	file:
__pyx_n_s_scalar	python/classy.c	/^static PyObject *__pyx_n_s_scalar;$/;"	v	file:
__pyx_n_s_scale	python/classy.c	/^static PyObject *__pyx_n_s_scale;$/;"	v	file:
__pyx_n_s_self	python/classy.c	/^static PyObject *__pyx_n_s_self;$/;"	v	file:
__pyx_n_s_set	python/classy.c	/^static PyObject *__pyx_n_s_set;$/;"	v	file:
__pyx_n_s_set_default	python/classy.c	/^static PyObject *__pyx_n_s_set_default;$/;"	v	file:
__pyx_n_s_sigma8	python/classy.c	/^static PyObject *__pyx_n_s_sigma8;$/;"	v	file:
__pyx_n_s_spectra	python/classy.c	/^static PyObject *__pyx_n_s_spectra;$/;"	v	file:
__pyx_n_s_split	python/classy.c	/^static PyObject *__pyx_n_s_split;$/;"	v	file:
__pyx_n_s_state	python/classy.c	/^static PyObject *__pyx_n_s_state;$/;"	v	file:
__pyx_n_s_str	python/classy.c	/^static PyObject *__pyx_n_s_str;$/;"	v	file:
__pyx_n_s_struct_cleanup	python/classy.c	/^static PyObject *__pyx_n_s_struct_cleanup;$/;"	v	file:
__pyx_n_s_tau_d	python/classy.c	/^static PyObject *__pyx_n_s_tau_d;$/;"	v	file:
__pyx_n_s_tau_rec	python/classy.c	/^static PyObject *__pyx_n_s_tau_rec;$/;"	v	file:
__pyx_n_s_tau_reio	python/classy.c	/^static PyObject *__pyx_n_s_tau_reio;$/;"	v	file:
__pyx_n_s_td	python/classy.c	/^static PyObject *__pyx_n_s_td;$/;"	v	file:
__pyx_n_s_te	python/classy.c	/^static PyObject *__pyx_n_s_te;$/;"	v	file:
__pyx_n_s_tensor	python/classy.c	/^static PyObject *__pyx_n_s_tensor;$/;"	v	file:
__pyx_n_s_test	python/classy.c	/^static PyObject *__pyx_n_s_test;$/;"	v	file:
__pyx_n_s_thermodynamics	python/classy.c	/^static PyObject *__pyx_n_s_thermodynamics;$/;"	v	file:
__pyx_n_s_tl	python/classy.c	/^static PyObject *__pyx_n_s_tl;$/;"	v	file:
__pyx_n_s_tp	python/classy.c	/^static PyObject *__pyx_n_s_tp;$/;"	v	file:
__pyx_n_s_transfer	python/classy.c	/^static PyObject *__pyx_n_s_transfer;$/;"	v	file:
__pyx_n_s_tt	python/classy.c	/^static PyObject *__pyx_n_s_tt;$/;"	v	file:
__pyx_n_s_update	python/classy.c	/^static PyObject *__pyx_n_s_update;$/;"	v	file:
__pyx_n_s_upper	python/classy.c	/^static PyObject *__pyx_n_s_upper;$/;"	v	file:
__pyx_n_s_value	python/classy.c	/^static PyObject *__pyx_n_s_value;$/;"	v	file:
__pyx_n_s_vector	python/classy.c	/^static PyObject *__pyx_n_s_vector;$/;"	v	file:
__pyx_n_s_xrange	python/classy.c	/^static PyObject *__pyx_n_s_xrange;$/;"	v	file:
__pyx_n_s_z	python/classy.c	/^static PyObject *__pyx_n_s_z;$/;"	v	file:
__pyx_n_s_z_d	python/classy.c	/^static PyObject *__pyx_n_s_z_d;$/;"	v	file:
__pyx_n_s_z_rec	python/classy.c	/^static PyObject *__pyx_n_s_z_rec;$/;"	v	file:
__pyx_n_s_z_reio	python/classy.c	/^static PyObject *__pyx_n_s_z_reio;$/;"	v	file:
__pyx_n_s_z_size	python/classy.c	/^static PyObject *__pyx_n_s_z_size;$/;"	v	file:
__pyx_n_s_zeros	python/classy.c	/^static PyObject *__pyx_n_s_zeros;$/;"	v	file:
__pyx_obj_6classy_Class	python/classy.c	/^struct __pyx_obj_6classy_Class {$/;"	s	file:
__pyx_pf_5numpy_7ndarray_2__releasebuffer__	python/classy.c	/^static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {$/;"	f	file:
__pyx_pf_5numpy_7ndarray___getbuffer__	python/classy.c	/^static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {$/;"	f	file:
__pyx_pf_6classy_10CosmoError_2__str__	python/classy.c	/^static PyObject *__pyx_pf_6classy_10CosmoError_2__str__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_10CosmoError___init__	python/classy.c	/^static PyObject *__pyx_pf_6classy_10CosmoError___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_message) {$/;"	f	file:
__pyx_pf_6classy_5Class_10struct_cleanup	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_10struct_cleanup(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_12_check_task_dependency	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_12_check_task_dependency(CYTHON_UNUSED struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_level) {$/;"	f	file:
__pyx_pf_6classy_5Class_14_pars_check	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_14_pars_check(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_value, PyObject *__pyx_v_contains, PyObject *__pyx_v_add) {$/;"	f	file:
__pyx_pf_6classy_5Class_16compute	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_16compute(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_level) {$/;"	f	file:
__pyx_pf_6classy_5Class_16nonlinear_method___get__	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_16nonlinear_method___get__(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_18raw_cl	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_18raw_cl(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_lmax, PyObject *__pyx_v_nofail) {$/;"	f	file:
__pyx_pf_6classy_5Class_20lensed_cl	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_20lensed_cl(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_lmax, PyObject *__pyx_v_nofail) {$/;"	f	file:
__pyx_pf_6classy_5Class_22density_cl	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_22density_cl(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_lmax, PyObject *__pyx_v_nofail) {$/;"	f	file:
__pyx_pf_6classy_5Class_24z_of_r	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_24z_of_r(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z_array) {$/;"	f	file:
__pyx_pf_6classy_5Class_26luminosity_distance	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_26luminosity_distance(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_28pk	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_28pk(struct __pyx_obj_6classy_Class *__pyx_v_self, double __pyx_v_k, double __pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_2__cinit__	python/classy.c	/^static int __pyx_pf_6classy_5Class_2__cinit__(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_default) {$/;"	f	file:
__pyx_pf_6classy_5Class_30pk_lin	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_30pk_lin(struct __pyx_obj_6classy_Class *__pyx_v_self, double __pyx_v_k, double __pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_32get_pk	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_32get_pk(struct __pyx_obj_6classy_Class *__pyx_v_self, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_z, int __pyx_v_k_size, int __pyx_v_z_size, int __pyx_v_mu_size) {$/;"	f	file:
__pyx_pf_6classy_5Class_34get_pk_lin	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_34get_pk_lin(struct __pyx_obj_6classy_Class *__pyx_v_self, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_z, int __pyx_v_k_size, int __pyx_v_z_size, int __pyx_v_mu_size) {$/;"	f	file:
__pyx_pf_6classy_5Class_36sigma	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_36sigma(struct __pyx_obj_6classy_Class *__pyx_v_self, double __pyx_v_R, double __pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_38age	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_38age(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_40h	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_40h(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_42n_s	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_42n_s(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_44Omega_m	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_44Omega_m(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_46Omega_b	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_46Omega_b(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_48omega_b	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_48omega_b(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_4pars___get__	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_4pars___get__(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_4set	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_4set(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_pars, PyObject *__pyx_v_kars) {$/;"	f	file:
__pyx_pf_6classy_5Class_50Neff	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_50Neff(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_52sigma8	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_52sigma8(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_54rs_drag	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_54rs_drag(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_56angular_distance	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_56angular_distance(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_58scale_independent_growth_factor	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_58scale_independent_growth_factor(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_5state___get__	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_5state___get__(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_60scale_independent_growth_factor_f	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_60scale_independent_growth_factor_f(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_62Hubble	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_62Hubble(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_64ionization_fraction	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_64ionization_fraction(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_66baryon_temperature	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_66baryon_temperature(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pf_6classy_5Class_68T_cmb	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_68T_cmb(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_6empty	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_6empty(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_70Omega0_m	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_70Omega0_m(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_72get_background	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_72get_background(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_74get_thermodynamics	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_74get_thermodynamics(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_76get_primordial	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_76get_primordial(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_78get_perturbations	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_78get_perturbations(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_80get_transfer	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_80get_transfer(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_z, PyObject *__pyx_v_output_format) {$/;"	f	file:
__pyx_pf_6classy_5Class_82get_current_derived_parameters	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_82get_current_derived_parameters(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_names) {$/;"	f	file:
__pyx_pf_6classy_5Class_84nonlinear_scale	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_84nonlinear_scale(struct __pyx_obj_6classy_Class *__pyx_v_self, PyArrayObject *__pyx_v_z, int __pyx_v_z_size) {$/;"	f	file:
__pyx_pf_6classy_5Class_86__call__	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_86__call__(struct __pyx_obj_6classy_Class *__pyx_v_self, PyObject *__pyx_v_ctx) {$/;"	f	file:
__pyx_pf_6classy_5Class_8Omega_nu___get__	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_8Omega_nu___get__(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_8_fillparfile	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_8_fillparfile(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_pf_6classy_5Class_set_default	python/classy.c	/^static PyObject *__pyx_pf_6classy_5Class_set_default(struct __pyx_obj_6classy_Class *__pyx_v_self) {$/;"	f	file:
__pyx_ptype_5numpy_broadcast	python/classy.c	/^static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;$/;"	v	file:
__pyx_ptype_5numpy_dtype	python/classy.c	/^static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;$/;"	v	file:
__pyx_ptype_5numpy_flatiter	python/classy.c	/^static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;$/;"	v	file:
__pyx_ptype_5numpy_ndarray	python/classy.c	/^static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;$/;"	v	file:
__pyx_ptype_5numpy_ufunc	python/classy.c	/^static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;$/;"	v	file:
__pyx_ptype_6classy_Class	python/classy.c	/^static PyTypeObject *__pyx_ptype_6classy_Class = 0;$/;"	v	file:
__pyx_ptype_7cpython_4type_type	python/classy.c	/^static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;$/;"	v	file:
__pyx_pw_5numpy_7ndarray_1__getbuffer__	python/classy.c	/^static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {$/;"	f	file:
__pyx_pw_5numpy_7ndarray_3__releasebuffer__	python/classy.c	/^static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {$/;"	f	file:
__pyx_pw_6classy_10CosmoError_1__init__	python/classy.c	/^static PyObject *__pyx_pw_6classy_10CosmoError_1__init__(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_10CosmoError_3__str__	python/classy.c	/^static PyObject *__pyx_pw_6classy_10CosmoError_3__str__(PyObject *__pyx_self, PyObject *__pyx_v_self) {$/;"	f	file:
__pyx_pw_6classy_5Class_11struct_cleanup	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_11struct_cleanup(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_13_check_task_dependency	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_13_check_task_dependency(PyObject *__pyx_v_self, PyObject *__pyx_v_level) {$/;"	f	file:
__pyx_pw_6classy_5Class_15_pars_check	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_15_pars_check(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_16nonlinear_method_1__get__	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_16nonlinear_method_1__get__(PyObject *__pyx_v_self) {$/;"	f	file:
__pyx_pw_6classy_5Class_17compute	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_17compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_19raw_cl	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_19raw_cl(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_1set_default	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_1set_default(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_21lensed_cl	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_21lensed_cl(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_23density_cl	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_23density_cl(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_25z_of_r	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_25z_of_r(PyObject *__pyx_v_self, PyObject *__pyx_v_z_array) {$/;"	f	file:
__pyx_pw_6classy_5Class_27luminosity_distance	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_27luminosity_distance(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_29pk	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_29pk(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_31pk_lin	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_31pk_lin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_33get_pk	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_33get_pk(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_35get_pk_lin	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_35get_pk_lin(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_37sigma	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_37sigma(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_39age	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_39age(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_3__cinit__	python/classy.c	/^static int __pyx_pw_6classy_5Class_3__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_41h	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_41h(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_43n_s	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_43n_s(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_45Omega_m	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_45Omega_m(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_47Omega_b	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_47Omega_b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_49omega_b	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_49omega_b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_4pars_1__get__	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_4pars_1__get__(PyObject *__pyx_v_self) {$/;"	f	file:
__pyx_pw_6classy_5Class_51Neff	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_51Neff(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_53sigma8	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_53sigma8(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_55rs_drag	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_55rs_drag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_57angular_distance	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_57angular_distance(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_59scale_independent_growth_factor	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_59scale_independent_growth_factor(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_5set	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_5set(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_5state_1__get__	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_5state_1__get__(PyObject *__pyx_v_self) {$/;"	f	file:
__pyx_pw_6classy_5Class_61scale_independent_growth_factor_f	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_61scale_independent_growth_factor_f(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_63Hubble	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_63Hubble(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_65ionization_fraction	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_65ionization_fraction(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_67baryon_temperature	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_67baryon_temperature(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {$/;"	f	file:
__pyx_pw_6classy_5Class_69T_cmb	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_69T_cmb(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_71Omega0_m	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_71Omega0_m(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_73get_background	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_73get_background(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_75get_thermodynamics	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_75get_thermodynamics(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_77get_primordial	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_77get_primordial(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_79get_perturbations	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_79get_perturbations(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_7empty	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_7empty(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_pw_6classy_5Class_81get_transfer	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_81get_transfer(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_83get_current_derived_parameters	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_83get_current_derived_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_names) {$/;"	f	file:
__pyx_pw_6classy_5Class_85nonlinear_scale	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_85nonlinear_scale(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_87__call__	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_87__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {$/;"	f	file:
__pyx_pw_6classy_5Class_8Omega_nu_1__get__	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_8Omega_nu_1__get__(PyObject *__pyx_v_self) {$/;"	f	file:
__pyx_pw_6classy_5Class_9_fillparfile	python/classy.c	/^static PyObject *__pyx_pw_6classy_5Class_9_fillparfile(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {$/;"	f	file:
__pyx_slice__21	python/classy.c	/^static PyObject *__pyx_slice__21;$/;"	v	file:
__pyx_slice__22	python/classy.c	/^static PyObject *__pyx_slice__22;$/;"	v	file:
__pyx_slice__29	python/classy.c	/^static PyObject *__pyx_slice__29;$/;"	v	file:
__pyx_slice__31	python/classy.c	/^static PyObject *__pyx_slice__31;$/;"	v	file:
__pyx_slice__33	python/classy.c	/^static PyObject *__pyx_slice__33;$/;"	v	file:
__pyx_slice__35	python/classy.c	/^static PyObject *__pyx_slice__35;$/;"	v	file:
__pyx_slice__37	python/classy.c	/^static PyObject *__pyx_slice__37;$/;"	v	file:
__pyx_slice__39	python/classy.c	/^static PyObject *__pyx_slice__39;$/;"	v	file:
__pyx_slice__41	python/classy.c	/^static PyObject *__pyx_slice__41;$/;"	v	file:
__pyx_string_tab	python/classy.c	/^static __Pyx_StringTabEntry __pyx_string_tab[] = {$/;"	v	file:
__pyx_t_5numpy_cdouble_t	python/classy.c	/^typedef npy_cdouble __pyx_t_5numpy_cdouble_t;$/;"	t	file:
__pyx_t_5numpy_cfloat_t	python/classy.c	/^typedef npy_cfloat __pyx_t_5numpy_cfloat_t;$/;"	t	file:
__pyx_t_5numpy_clongdouble_t	python/classy.c	/^typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;$/;"	t	file:
__pyx_t_5numpy_complex_t	python/classy.c	/^typedef npy_cdouble __pyx_t_5numpy_complex_t;$/;"	t	file:
__pyx_t_5numpy_double_t	python/classy.c	/^typedef npy_double __pyx_t_5numpy_double_t;$/;"	t	file:
__pyx_t_5numpy_float32_t	python/classy.c	/^typedef npy_float32 __pyx_t_5numpy_float32_t;$/;"	t	file:
__pyx_t_5numpy_float64_t	python/classy.c	/^typedef npy_float64 __pyx_t_5numpy_float64_t;$/;"	t	file:
__pyx_t_5numpy_float_t	python/classy.c	/^typedef npy_double __pyx_t_5numpy_float_t;$/;"	t	file:
__pyx_t_5numpy_int16_t	python/classy.c	/^typedef npy_int16 __pyx_t_5numpy_int16_t;$/;"	t	file:
__pyx_t_5numpy_int32_t	python/classy.c	/^typedef npy_int32 __pyx_t_5numpy_int32_t;$/;"	t	file:
__pyx_t_5numpy_int64_t	python/classy.c	/^typedef npy_int64 __pyx_t_5numpy_int64_t;$/;"	t	file:
__pyx_t_5numpy_int8_t	python/classy.c	/^typedef npy_int8 __pyx_t_5numpy_int8_t;$/;"	t	file:
__pyx_t_5numpy_int_t	python/classy.c	/^typedef npy_long __pyx_t_5numpy_int_t;$/;"	t	file:
__pyx_t_5numpy_intp_t	python/classy.c	/^typedef npy_intp __pyx_t_5numpy_intp_t;$/;"	t	file:
__pyx_t_5numpy_long_t	python/classy.c	/^typedef npy_longlong __pyx_t_5numpy_long_t;$/;"	t	file:
__pyx_t_5numpy_longdouble_t	python/classy.c	/^typedef npy_longdouble __pyx_t_5numpy_longdouble_t;$/;"	t	file:
__pyx_t_5numpy_longlong_t	python/classy.c	/^typedef npy_longlong __pyx_t_5numpy_longlong_t;$/;"	t	file:
__pyx_t_5numpy_uint16_t	python/classy.c	/^typedef npy_uint16 __pyx_t_5numpy_uint16_t;$/;"	t	file:
__pyx_t_5numpy_uint32_t	python/classy.c	/^typedef npy_uint32 __pyx_t_5numpy_uint32_t;$/;"	t	file:
__pyx_t_5numpy_uint64_t	python/classy.c	/^typedef npy_uint64 __pyx_t_5numpy_uint64_t;$/;"	t	file:
__pyx_t_5numpy_uint8_t	python/classy.c	/^typedef npy_uint8 __pyx_t_5numpy_uint8_t;$/;"	t	file:
__pyx_t_5numpy_uint_t	python/classy.c	/^typedef npy_ulong __pyx_t_5numpy_uint_t;$/;"	t	file:
__pyx_t_5numpy_uintp_t	python/classy.c	/^typedef npy_uintp __pyx_t_5numpy_uintp_t;$/;"	t	file:
__pyx_t_5numpy_ulong_t	python/classy.c	/^typedef npy_ulonglong __pyx_t_5numpy_ulong_t;$/;"	t	file:
__pyx_t_5numpy_ulonglong_t	python/classy.c	/^typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;$/;"	t	file:
__pyx_t_6classy_DTYPE_i	python/classy.c	/^typedef __pyx_t_5numpy_int_t __pyx_t_6classy_DTYPE_i;$/;"	t	file:
__pyx_t_6classy_DTYPE_t	python/classy.c	/^typedef __pyx_t_5numpy_float_t __pyx_t_6classy_DTYPE_t;$/;"	t	file:
__pyx_t_double_complex	python/classy.c	/^    typedef ::std::complex< double > __pyx_t_double_complex;$/;"	t	class:std	file:
__pyx_t_double_complex	python/classy.c	/^    typedef double _Complex __pyx_t_double_complex;$/;"	t	file:
__pyx_t_double_complex	python/classy.c	/^    typedef struct { double real, imag; } __pyx_t_double_complex;$/;"	t	typeref:struct:__anon7	file:
__pyx_t_double_complex_from_parts	python/classy.c	/^    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {$/;"	f	file:
__pyx_t_float_complex	python/classy.c	/^    typedef ::std::complex< float > __pyx_t_float_complex;$/;"	t	class:std	file:
__pyx_t_float_complex	python/classy.c	/^    typedef float _Complex __pyx_t_float_complex;$/;"	t	file:
__pyx_t_float_complex	python/classy.c	/^    typedef struct { float real, imag; } __pyx_t_float_complex;$/;"	t	typeref:struct:__anon6	file:
__pyx_t_float_complex_from_parts	python/classy.c	/^    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {$/;"	f	file:
__pyx_tp_clear_6classy_Class	python/classy.c	/^static int __pyx_tp_clear_6classy_Class(PyObject *o) {$/;"	f	file:
__pyx_tp_dealloc_6classy_Class	python/classy.c	/^static void __pyx_tp_dealloc_6classy_Class(PyObject *o) {$/;"	f	file:
__pyx_tp_new_6classy_Class	python/classy.c	/^static PyObject *__pyx_tp_new_6classy_Class(PyTypeObject *t, PyObject *a, PyObject *k) {$/;"	f	file:
__pyx_tp_traverse_6classy_Class	python/classy.c	/^static int __pyx_tp_traverse_6classy_Class(PyObject *o, visitproc v, void *a) {$/;"	f	file:
__pyx_tuple__10	python/classy.c	/^static PyObject *__pyx_tuple__10;$/;"	v	file:
__pyx_tuple__11	python/classy.c	/^static PyObject *__pyx_tuple__11;$/;"	v	file:
__pyx_tuple__12	python/classy.c	/^static PyObject *__pyx_tuple__12;$/;"	v	file:
__pyx_tuple__13	python/classy.c	/^static PyObject *__pyx_tuple__13;$/;"	v	file:
__pyx_tuple__14	python/classy.c	/^static PyObject *__pyx_tuple__14;$/;"	v	file:
__pyx_tuple__15	python/classy.c	/^static PyObject *__pyx_tuple__15;$/;"	v	file:
__pyx_tuple__16	python/classy.c	/^static PyObject *__pyx_tuple__16;$/;"	v	file:
__pyx_tuple__17	python/classy.c	/^static PyObject *__pyx_tuple__17;$/;"	v	file:
__pyx_tuple__18	python/classy.c	/^static PyObject *__pyx_tuple__18;$/;"	v	file:
__pyx_tuple__19	python/classy.c	/^static PyObject *__pyx_tuple__19;$/;"	v	file:
__pyx_tuple__2	python/classy.c	/^static PyObject *__pyx_tuple__2;$/;"	v	file:
__pyx_tuple__20	python/classy.c	/^static PyObject *__pyx_tuple__20;$/;"	v	file:
__pyx_tuple__23	python/classy.c	/^static PyObject *__pyx_tuple__23;$/;"	v	file:
__pyx_tuple__24	python/classy.c	/^static PyObject *__pyx_tuple__24;$/;"	v	file:
__pyx_tuple__25	python/classy.c	/^static PyObject *__pyx_tuple__25;$/;"	v	file:
__pyx_tuple__26	python/classy.c	/^static PyObject *__pyx_tuple__26;$/;"	v	file:
__pyx_tuple__28	python/classy.c	/^static PyObject *__pyx_tuple__28;$/;"	v	file:
__pyx_tuple__30	python/classy.c	/^static PyObject *__pyx_tuple__30;$/;"	v	file:
__pyx_tuple__32	python/classy.c	/^static PyObject *__pyx_tuple__32;$/;"	v	file:
__pyx_tuple__34	python/classy.c	/^static PyObject *__pyx_tuple__34;$/;"	v	file:
__pyx_tuple__36	python/classy.c	/^static PyObject *__pyx_tuple__36;$/;"	v	file:
__pyx_tuple__38	python/classy.c	/^static PyObject *__pyx_tuple__38;$/;"	v	file:
__pyx_tuple__40	python/classy.c	/^static PyObject *__pyx_tuple__40;$/;"	v	file:
__pyx_tuple__42	python/classy.c	/^static PyObject *__pyx_tuple__42;$/;"	v	file:
__pyx_tuple__43	python/classy.c	/^static PyObject *__pyx_tuple__43;$/;"	v	file:
__pyx_tuple__44	python/classy.c	/^static PyObject *__pyx_tuple__44;$/;"	v	file:
__pyx_tuple__45	python/classy.c	/^static PyObject *__pyx_tuple__45;$/;"	v	file:
__pyx_tuple__46	python/classy.c	/^static PyObject *__pyx_tuple__46;$/;"	v	file:
__pyx_tuple__47	python/classy.c	/^static PyObject *__pyx_tuple__47;$/;"	v	file:
__pyx_tuple__48	python/classy.c	/^static PyObject *__pyx_tuple__48;$/;"	v	file:
__pyx_tuple__49	python/classy.c	/^static PyObject *__pyx_tuple__49;$/;"	v	file:
__pyx_tuple__5	python/classy.c	/^static PyObject *__pyx_tuple__5;$/;"	v	file:
__pyx_tuple__50	python/classy.c	/^static PyObject *__pyx_tuple__50;$/;"	v	file:
__pyx_tuple__51	python/classy.c	/^static PyObject *__pyx_tuple__51;$/;"	v	file:
__pyx_tuple__53	python/classy.c	/^static PyObject *__pyx_tuple__53;$/;"	v	file:
__pyx_tuple__54	python/classy.c	/^static PyObject *__pyx_tuple__54;$/;"	v	file:
__pyx_tuple__7	python/classy.c	/^static PyObject *__pyx_tuple__7;$/;"	v	file:
__pyx_tuple__8	python/classy.c	/^static PyObject *__pyx_tuple__8;$/;"	v	file:
__pyx_tuple__9	python/classy.c	/^static PyObject *__pyx_tuple__9;$/;"	v	file:
__pyx_type_6classy_Class	python/classy.c	/^static PyTypeObject __pyx_type_6classy_Class = {$/;"	v	file:
__pyx_wrapperbase_6classy_5Class_86__call__	python/classy.c	/^struct wrapperbase __pyx_wrapperbase_6classy_5Class_86__call__;$/;"	v	typeref:struct:wrapperbase
__stdcall	python/classy.c	17;"	d	file:
_aH_	include/primordial.h	/^  _aH_,$/;"	e	enum:target_quantity
_a_	include/primordial.h	/^  _a_$/;"	e	enum:target_quantity
_a_PPB_	include/thermodynamics.h	671;"	d
_a_VF_	include/thermodynamics.h	676;"	d
_a_trip_	include/thermodynamics.h	679;"	d
_b_PPB_	include/thermodynamics.h	672;"	d
_b_VF_	include/thermodynamics.h	677;"	d
_b_trip_	include/thermodynamics.h	680;"	d
_c_	include/background.h	524;"	d
_c_PPB_	include/thermodynamics.h	673;"	d
_d_PPB_	include/thermodynamics.h	674;"	d
_eV_	include/background.h	526;"	d
_end_inflation_	include/primordial.h	/^  _end_inflation_,$/;"	e	enum:target_quantity
_h_P_	include/background.h	530;"	d
_index_tt_in_range_	include/transfer.h	13;"	d
_k_B_	include/background.h	529;"	d
_m_H_	include/thermodynamics.h	633;"	d
_m_e_	include/thermodynamics.h	631;"	d
_m_p_	include/thermodynamics.h	632;"	d
_not4_	include/thermodynamics.h	634;"	d
_pars	python/classy.c	/^  PyObject *_pars;$/;"	m	struct:__pyx_obj_6classy_Class	file:
_phi_	include/primordial.h	/^  _phi_,$/;"	e	enum:target_quantity
_scalars_	include/perturbations.h	10;"	d
_set_source_	include/perturbations.h	14;"	d
_sigma_	include/thermodynamics.h	635;"	d
_sigma_He_2Ps_	include/thermodynamics.h	660;"	d
_sigma_He_2Pt_	include/thermodynamics.h	661;"	d
_tensors_	include/perturbations.h	12;"	d
_vectors_	include/perturbations.h	11;"	d
_zeta3_	include/background.h	566;"	d
_zeta5_	include/background.h	567;"	d
a	include/hermite3_interpolation_csource.h	/^double a[3]={0.,0.};$/;"	v
a	include/hermite4_interpolation_csource.h	/^double a[3]={0.,0.,0.};$/;"	v
a	tools/hermite3_interpolation_csource.h	/^double a[3]={0.,0.};$/;"	v
a	tools/hermite4_interpolation_csource.h	/^double a[3]={0.,0.,0.};$/;"	v
a1	include/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a1	tools/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a2	include/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a2	include/primordial.h	/^  double a2;$/;"	m	struct:primordial_inflation_parameters_and_workspace
a2	tools/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a3	include/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a3	tools/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a4	include/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a4	tools/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a5	include/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
a5	tools/hermite6_interpolation_csource.h	/^double a1=0, a2=0, a3=0, a4=0, a5=0;$/;"	v
aH	include/primordial.h	/^  double aH;$/;"	m	struct:primordial_inflation_parameters_and_workspace
a_ini_over_a_today_default	include/common.h	/^  double a_ini_over_a_today_default;$/;"	m	struct:precision
a_today	include/background.h	/^  double a_today; \/**< scale factor today (arbitrary and irrelevant for most purposes) *\/$/;"	m	struct:background
absFdelRm	include/evolver_ndf15.h	/^	double * absFdelRm;$/;"	m	struct:numjac_workspace
absFvalue	include/evolver_ndf15.h	/^	double * absFvalue;$/;"	m	struct:numjac_workspace
absFvalueRm	include/evolver_ndf15.h	/^	double * absFvalueRm;$/;"	m	struct:numjac_workspace
accurate_lensing	include/common.h	/^  int accurate_lensing; \/**< switch between Gauss-Legendre quadrature integration and simple quadrature on a subdomain of angles *\/$/;"	m	struct:precision
adaptive_integration_tree_node	include/quadrature.h	/^typedef struct adaptive_integration_tree_node{$/;"	s
adjust_stepsize	tools/evolver_ndf15.c	/^int adjust_stepsize(double **dif, double abshdivabshlast, int neq,int k){$/;"	f
age	include/background.h	/^  double age; \/**< age in Gyears *\/$/;"	m	struct:background
airy_cheb_approx	tools/hyperspherical.c	/^double airy_cheb_approx(double z){$/;"	f
ak2	include/dei_rkck.h	/^  double * ak2;$/;"	m	struct:generic_integrator_workspace
ak3	include/dei_rkck.h	/^  double * ak3;$/;"	m	struct:generic_integrator_workspace
ak4	include/dei_rkck.h	/^  double * ak4;$/;"	m	struct:generic_integrator_workspace
ak5	include/dei_rkck.h	/^  double * ak5;$/;"	m	struct:generic_integrator_workspace
ak6	include/dei_rkck.h	/^  double * ak6;$/;"	m	struct:generic_integrator_workspace
alphaB_PPB	hyrec/hydrogen.c	/^double alphaB_PPB(double TM) {$/;"	f
alpha_II_201_2500	include/spectra.h	/^  double alpha_II_201_2500; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [201,2500] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_II_21_200	include/spectra.h	/^  double alpha_II_21_200; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [21,200] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_II_2_20	include/spectra.h	/^  double alpha_II_2_20;	\/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [2,20] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_II_2_2500	include/spectra.h	/^  double alpha_II_2_2500; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [2,2500] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RI_201_2500	include/spectra.h	/^  double alpha_RI_201_2500; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [201,2500] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RI_21_200	include/spectra.h	/^  double alpha_RI_21_200; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [21,200] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RI_2_20	include/spectra.h	/^  double alpha_RI_2_20;	\/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [2,20] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RI_2_2500	include/spectra.h	/^  double alpha_RI_2_2500; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [2,2500] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RR_201_2500	include/spectra.h	/^  double alpha_RR_201_2500; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [201,2500] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RR_21_200	include/spectra.h	/^  double alpha_RR_21_200; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [21,200] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RR_2_20	include/spectra.h	/^  double alpha_RR_2_20;	\/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [2,20] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_RR_2_2500	include/spectra.h	/^  double alpha_RR_2_2500; \/**< parameter describing adiabatic versus isocurvature contribution in mutipole range [2,2500] (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_ad_bi	include/primordial.h	/^  double alpha_ad_bi; \/**< ADxBI cross-correlation running *\/$/;"	m	struct:primordial
alpha_ad_cdi	include/primordial.h	/^  double alpha_ad_cdi; \/**< ADxCDI cross-correlation running *\/$/;"	m	struct:primordial
alpha_ad_nid	include/primordial.h	/^  double alpha_ad_nid; \/**< ADxNID cross-correlation running *\/$/;"	m	struct:primordial
alpha_ad_niv	include/primordial.h	/^  double alpha_ad_niv; \/**< ADxNIV cross-correlation running *\/$/;"	m	struct:primordial
alpha_bi	include/primordial.h	/^  double alpha_bi; \/**< BI running *\/$/;"	m	struct:primordial
alpha_bi_cdi	include/primordial.h	/^  double alpha_bi_cdi; \/**< BIxCDI cross-correlation running *\/$/;"	m	struct:primordial
alpha_bi_nid	include/primordial.h	/^  double alpha_bi_nid; \/**< BIxNIV cross-correlation running *\/$/;"	m	struct:primordial
alpha_bi_niv	include/primordial.h	/^  double alpha_bi_niv; \/**< BIxNIV cross-correlation running *\/$/;"	m	struct:primordial
alpha_cdi	include/primordial.h	/^  double alpha_cdi; \/**< CDI running *\/$/;"	m	struct:primordial
alpha_cdi_nid	include/primordial.h	/^  double alpha_cdi_nid; \/**< CDIxNID cross-correlation running *\/$/;"	m	struct:primordial
alpha_cdi_niv	include/primordial.h	/^  double alpha_cdi_niv; \/**< CDIxNIV cross-correlation running *\/$/;"	m	struct:primordial
alpha_k1	include/spectra.h	/^  double alpha_k1; \/**< parameter describing adiabatic versus isocurvature contribution at scale k1 (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_k2	include/spectra.h	/^  double alpha_k2; \/**< parameter describing adiabatic versus isocurvature contribution at scale k2 (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_kp	include/spectra.h	/^  double alpha_kp; \/**< parameter describing adiabatic versus isocurvature contribution at pivot scale (see Planck parameter papers) *\/$/;"	m	struct:spectra
alpha_nid	include/primordial.h	/^  double alpha_nid; \/**< NID running *\/$/;"	m	struct:primordial
alpha_nid_niv	include/primordial.h	/^  double alpha_nid_niv; \/**< NIDxNIV cross-correlation running *\/$/;"	m	struct:primordial
alpha_niv	include/primordial.h	/^  double alpha_niv; \/**< NIV running *\/$/;"	m	struct:primordial
alpha_s	include/primordial.h	/^  double alpha_s; \/**< usual scalar running *\/$/;"	m	struct:primordial
alpha_t	include/primordial.h	/^  double alpha_t; \/**< usual tensor running *\/$/;"	m	struct:primordial
am_aiter	python/classy.c	/^    unaryfunc am_aiter;$/;"	m	struct:__anon1	file:
am_anext	python/classy.c	/^    unaryfunc am_anext;$/;"	m	struct:__anon1	file:
am_await	python/classy.c	/^    unaryfunc am_await;$/;"	m	struct:__anon1	file:
amoeba	test/test_degeneracy.c	/^void amoeba(double **p,double y[],int ndim,double ftol, double (*funk)(double [])){$/;"	f
amotry	test/test_degeneracy.c	/^double amotry(double **p, double y[], double psum[], int ndim, double (*funk)(double []), int ihi, double fac)$/;"	f
amplitude	include/primordial.h	/^  double ** amplitude; \/**< all amplitudes in matrix form: amplitude[index_md][index_ic1_ic2] *\/$/;"	m	struct:primordial
analytic_Pk	include/primordial.h	/^  analytic_Pk,$/;"	e	enum:primordial_spectrum_type
analytical	include/primordial.h	/^  analytical$/;"	e	enum:inflation_module_behavior
angular_rescaling	include/thermodynamics.h	/^  double angular_rescaling; \/**< [ratio ra_rec \/ (tau0-tau_rec)]: gives CMB rescaling in angular space relative to flat model (=1 for curvature K=0) *\/$/;"	m	struct:thermo
angular_rescaling	include/transfer.h	/^  double angular_rescaling; \/**< correction between l and k space due to curvature (= comoving angular diameter distance to recombination \/ comoving radius to recombination) *\/$/;"	m	struct:transfers
annihilation	hyrec/history.h	/^   double annihilation; \/** parameter describing CDM annihilation (f <sigma*v> \/ m_cdm, see e.g. 0905.0003) *\/$/;"	m	struct:__anon30
annihilation	include/thermodynamics.h	/^  double annihilation; \/** parameter describing CDM annihilation (f <sigma*v> \/ m_cdm, see e.g. 0905.0003) *\/$/;"	m	struct:thermo
annihilation	include/thermodynamics.h	/^  double annihilation; \/**< parameter describing CDM annihilation (f <sigma*v> \/ m_cdm, see e.g. 0905.0003) *\/$/;"	m	struct:recombination
annihilation_f_halo	hyrec/history.h	/^   double annihilation_f_halo; \/* takes the contribution of DM annihilation in halos into account*\/$/;"	m	struct:__anon30
annihilation_f_halo	include/thermodynamics.h	/^  double annihilation_f_halo; \/** takes the contribution of DM annihilation in halos into account*\/$/;"	m	struct:thermo
annihilation_f_halo	include/thermodynamics.h	/^  double annihilation_f_halo; \/**< takes the contribution of DM annihilation in halos into account*\/$/;"	m	struct:recombination
annihilation_variation	hyrec/history.h	/^   double annihilation_variation; \/** if this parameter is non-zero,$/;"	m	struct:__anon30
annihilation_variation	include/thermodynamics.h	/^  double annihilation_variation; \/** if this parameter is non-zero,$/;"	m	struct:thermo
annihilation_variation	include/thermodynamics.h	/^  double annihilation_variation; \/**< if this parameter is non-zero,$/;"	m	struct:recombination
annihilation_z	hyrec/history.h	/^   double annihilation_z; \/** if annihilation_variation is non-zero,$/;"	m	struct:__anon30
annihilation_z	include/thermodynamics.h	/^  double annihilation_z; \/** if annihilation_variation is non-zero,$/;"	m	struct:thermo
annihilation_z	include/thermodynamics.h	/^  double annihilation_z; \/**< if annihilation_variation is non-zero,$/;"	m	struct:recombination
annihilation_z_halo	hyrec/history.h	/^   double annihilation_z_halo; \/*characteristic redshift for DM annihilation in halos*\/$/;"	m	struct:__anon30
annihilation_z_halo	include/thermodynamics.h	/^  double annihilation_z_halo; \/** characteristic redshift for DM annihilation in halos*\/$/;"	m	struct:thermo
annihilation_z_halo	include/thermodynamics.h	/^  double annihilation_z_halo; \/**< characteristic redshift for DM annihilation in halos*\/$/;"	m	struct:recombination
annihilation_zmax	hyrec/history.h	/^   double annihilation_zmax; \/** if annihilation_variation is non-zero,$/;"	m	struct:__anon30
annihilation_zmax	include/thermodynamics.h	/^  double annihilation_zmax; \/** if annihilation_variation is non-zero,$/;"	m	struct:thermo
annihilation_zmax	include/thermodynamics.h	/^  double annihilation_zmax; \/**< if annihilation_variation is non-zero,$/;"	m	struct:recombination
annihilation_zmin	hyrec/history.h	/^   double annihilation_zmin; \/** if annihilation_variation is non-zero,$/;"	m	struct:__anon30
annihilation_zmin	include/thermodynamics.h	/^  double annihilation_zmin; \/** if annihilation_variation is non-zero,$/;"	m	struct:thermo
annihilation_zmin	include/thermodynamics.h	/^  double annihilation_zmin; \/**< if annihilation_variation is non-zero,$/;"	m	struct:recombination
ap_size	include/perturbations.h	/^  int ap_size;      \/**< number of relevant approximations for a given mode *\/$/;"	m	struct:perturb_workspace
app_over_a	include/primordial.h	/^  double app_over_a;$/;"	m	struct:primordial_inflation_parameters_and_workspace
approx	include/perturbations.h	/^  int * approx;     \/**< array of approximation flags holding at a given time: approx[index_ap] *\/$/;"	m	struct:perturb_workspace
array_derive	tools/arrays.c	/^int array_derive($/;"	f
array_derive1_order2_table_line_to_line	tools/arrays.c	/^int array_derive1_order2_table_line_to_line($/;"	f
array_derive2_order2_table_line_to_line	tools/arrays.c	/^int array_derive2_order2_table_line_to_line($/;"	f
array_derive_spline	tools/arrays.c	/^int array_derive_spline($/;"	f
array_derive_spline_table_line_to_line	tools/arrays.c	/^int array_derive_spline_table_line_to_line($/;"	f
array_derive_two	tools/arrays.c	/^int array_derive_two($/;"	f
array_integrate	tools/arrays.c	/^int array_integrate($/;"	f
array_integrate_all	tools/arrays.c	/^int array_integrate_all($/;"	f
array_integrate_all_spline	tools/arrays.c	/^int array_integrate_all_spline($/;"	f
array_integrate_all_trapzd_or_spline	tools/arrays.c	/^int array_integrate_all_trapzd_or_spline($/;"	f
array_integrate_ratio	tools/arrays.c	/^int array_integrate_ratio($/;"	f
array_integrate_spline_table_line_to_line	tools/arrays.c	/^int array_integrate_spline_table_line_to_line($/;"	f
array_interpolate	tools/arrays.c	/^int array_interpolate($/;"	f
array_interpolate_cubic_equal	tools/arrays.c	/^int array_interpolate_cubic_equal($/;"	f
array_interpolate_equal	tools/arrays.c	/^int array_interpolate_equal($/;"	f
array_interpolate_extrapolate_logspline_loglinear_one_column	tools/arrays.c	/^int array_interpolate_extrapolate_logspline_loglinear_one_column($/;"	f
array_interpolate_extrapolate_spline_one_column	tools/arrays.c	/^int array_interpolate_extrapolate_spline_one_column($/;"	f
array_interpolate_growing_closeby	tools/arrays.c	/^int array_interpolate_growing_closeby($/;"	f
array_interpolate_linear	tools/arrays.c	/^int array_interpolate_linear($/;"	f
array_interpolate_logspline	tools/arrays.c	/^int array_interpolate_logspline($/;"	f
array_interpolate_one_growing_closeby	tools/arrays.c	/^int array_interpolate_one_growing_closeby($/;"	f
array_interpolate_parabola	tools/arrays.c	/^int array_interpolate_parabola(double x1,$/;"	f
array_interpolate_spline	tools/arrays.c	/^int array_interpolate_spline($/;"	f
array_interpolate_spline_growing_closeby	tools/arrays.c	/^int array_interpolate_spline_growing_closeby($/;"	f
array_interpolate_spline_growing_hunt	tools/arrays.c	/^int array_interpolate_spline_growing_hunt($/;"	f
array_interpolate_spline_one_column	tools/arrays.c	/^int array_interpolate_spline_one_column($/;"	f
array_interpolate_two	tools/arrays.c	/^int array_interpolate_two($/;"	f
array_interpolate_two_arrays_one_column	tools/arrays.c	/^int array_interpolate_two_arrays_one_column($/;"	f
array_interpolate_two_bis	tools/arrays.c	/^int array_interpolate_two_bis($/;"	f
array_logspline_table_lines	tools/arrays.c	/^int array_logspline_table_lines($/;"	f
array_logspline_table_one_column	tools/arrays.c	/^int array_logspline_table_one_column($/;"	f
array_smooth	tools/arrays.c	/^int array_smooth(double * array,$/;"	f
array_smooth_trg	tools/arrays.c	/^int array_smooth_trg(double * array,$/;"	f
array_spline	tools/arrays.c	/^int array_spline($/;"	f
array_spline_table_columns	tools/arrays.c	/^int array_spline_table_columns($/;"	f
array_spline_table_columns2	tools/arrays.c	/^int array_spline_table_columns2($/;"	f
array_spline_table_line_to_line	tools/arrays.c	/^int array_spline_table_line_to_line($/;"	f
array_spline_table_lines	tools/arrays.c	/^int array_spline_table_lines($/;"	f
array_spline_table_one_column	tools/arrays.c	/^int array_spline_table_one_column($/;"	f
array_trapezoidal_convolution	tools/arrays.c	/^int array_trapezoidal_convolution($/;"	f
array_trapezoidal_integral	tools/arrays.c	/^int array_trapezoidal_integral($/;"	f
array_trapezoidal_mweights	tools/arrays.c	/^int array_trapezoidal_mweights($/;"	f
array_trapezoidal_weights	tools/arrays.c	/^int array_trapezoidal_weights($/;"	f
arraysize	python/classy.c	/^  size_t arraysize[8];$/;"	m	struct:__anon3	file:
attractor_ic_scf	include/background.h	/^  short attractor_ic_scf;   \/**< whether the scalar field has attractor initial conditions *\/$/;"	m	struct:background
b	include/hermite3_interpolation_csource.h	/^double b[3]={0.,0.};$/;"	v
b	include/hermite4_interpolation_csource.h	/^double b[3]={0.,0.,0.};$/;"	v
b	tools/hermite3_interpolation_csource.h	/^double b[3]={0.,0.};$/;"	v
b	tools/hermite4_interpolation_csource.h	/^double b[3]={0.,0.,0.};$/;"	v
b1	include/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b1	tools/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b2	include/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b2	tools/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b3	include/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b3	tools/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b4	include/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b4	tools/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b5	include/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
b5	tools/hermite6_interpolation_csource.h	/^double b1=0, b2=0, b3=0, b4=0, b5=0;$/;"	v
ba	python/classy.c	/^  struct background ba;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::background	file:
ba	test/test_degeneracy.c	/^struct background ba;       \/* for cosmological background *\/$/;"	v	typeref:struct:background
back_integration_stepsize	include/common.h	/^  double back_integration_stepsize;$/;"	m	struct:precision
background	include/background.h	/^struct background$/;"	s
background_at_tau	source/background.c	/^int background_at_tau($/;"	f
background_derivs	source/background.c	/^int background_derivs($/;"	f
background_free	source/background.c	/^int background_free($/;"	f
background_free_input	source/background.c	/^int background_free_input($/;"	f
background_functions	source/background.c	/^int background_functions($/;"	f
background_indices	source/background.c	/^int background_indices($/;"	f
background_init	source/background.c	/^int background_init($/;"	f
background_initial_conditions	source/background.c	/^int background_initial_conditions($/;"	f
background_ncdm_M_from_Omega	source/background.c	/^int background_ncdm_M_from_Omega($/;"	f
background_ncdm_distribution	source/background.c	/^int background_ncdm_distribution($/;"	f
background_ncdm_init	source/background.c	/^int background_ncdm_init($/;"	f
background_ncdm_momenta	source/background.c	/^int background_ncdm_momenta($/;"	f
background_ncdm_test_function	source/background.c	/^int background_ncdm_test_function($/;"	f
background_output_data	source/background.c	/^int background_output_data($/;"	f
background_output_titles	source/background.c	/^int background_output_titles(struct background * pba,$/;"	f
background_parameters_and_workspace	include/background.h	/^struct background_parameters_and_workspace {$/;"	s
background_parameters_for_distributions	include/background.h	/^struct background_parameters_for_distributions {$/;"	s
background_solve	source/background.c	/^int background_solve($/;"	f
background_table	include/background.h	/^  double * background_table; \/**< table background_table[index_tau*pba->bg_size+pba->index_bg] with all other quantities (array of size bg_size*bt_size) **\/$/;"	m	struct:background
background_tau_of_z	source/background.c	/^int background_tau_of_z($/;"	f
background_verbose	include/background.h	/^  short background_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:background
background_w_fld	source/background.c	/^int background_w_fld($/;"	f
backward	include/primordial.h	/^  backward,$/;"	e	enum:integration_direction
behavior	include/primordial.h	/^  enum inflation_module_behavior behavior; \/**< Specifies if the inflation module computes the primordial spectrum numerically (default) or analytically*\/$/;"	m	struct:primordial	typeref:enum:primordial::inflation_module_behavior
beta	include/hermite3_interpolation_csource.h	/^double beta = pHIS->beta;$/;"	v
beta	include/hermite4_interpolation_csource.h	/^double beta = pHIS->beta;$/;"	v
beta	include/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
beta	include/hyperspherical.h	/^   double beta;$/;"	m	struct:WKB_parameters
beta	include/hyperspherical.h	/^  double beta;$/;"	m	struct:HypersphericalInterpolationStructure
beta	tools/hermite3_interpolation_csource.h	/^double beta = pHIS->beta;$/;"	v
beta	tools/hermite4_interpolation_csource.h	/^double beta = pHIS->beta;$/;"	v
beta	tools/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
beta2	include/hermite3_interpolation_csource.h	/^double beta2 = beta*beta;$/;"	v
beta2	include/hermite4_interpolation_csource.h	/^double beta2 = beta*beta;$/;"	v
beta2	include/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
beta2	tools/hermite3_interpolation_csource.h	/^double beta2 = beta*beta;$/;"	v
beta2	tools/hermite4_interpolation_csource.h	/^double beta2 = beta*beta;$/;"	v
beta2	tools/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
beta_s	include/primordial.h	/^  double beta_s;  \/**< running of running *\/$/;"	m	struct:primordial
bg_size	include/background.h	/^  int bg_size;        \/**< size of background vector in the "long format" *\/$/;"	m	struct:background
bg_size_normal	include/background.h	/^  int bg_size_normal; \/**< size of background vector in the "normal format" *\/$/;"	m	struct:background
bg_size_short	include/background.h	/^  int bg_size_short;  \/**< size of background vector in the "short format" *\/$/;"	m	struct:background
bi_B_size	include/background.h	/^  int bi_B_size;        \/**< Number of {B} parameters *\/$/;"	m	struct:background
bi_size	include/background.h	/^  int bi_size;          \/**< Number of {B}+{C} parameters *\/$/;"	m	struct:background
binned_reio_num	include/thermodynamics.h	/^  int binned_reio_num; \/**< with how many bins do we want to describe reionization? *\/$/;"	m	struct:thermo
binned_reio_step_sharpness	include/thermodynamics.h	/^  double binned_reio_step_sharpness; \/**< sharpness of tanh() step interpolating between binned values *\/$/;"	m	struct:thermo
binned_reio_xe	include/thermodynamics.h	/^  double * binned_reio_xe; \/**< imposed \\f$ X_e(z)\\f$ value at center of each bin *\/$/;"	m	struct:thermo
binned_reio_z	include/thermodynamics.h	/^  double * binned_reio_z; \/**< central z value for each bin *\/$/;"	m	struct:thermo
bs	test/test_degeneracy.c	/^struct bessels bs;          \/* for bessel functions *\/$/;"	v	typeref:struct:bessels
bt_size	include/background.h	/^  int bt_size;               \/**< number of lines (i.e. time-steps) in the array *\/$/;"	m	struct:background
buffer	include/growTable.h	/^  void* buffer; \/**< stack of data *\/$/;"	m	struct:__anon33
burn_tree	tools/quadrature.c	/^int burn_tree(qss_node *node){$/;"	f
c	include/hermite3_interpolation_csource.h	/^double c[3]={0.,0.};$/;"	v
c	include/hermite4_interpolation_csource.h	/^double c[3]={0.,0.,0.};$/;"	v
c	python/classy.c	/^typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;$/;"	m	struct:__anon29	file:
c	python/classy.c	/^typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;$/;"	m	struct:__anon21	file:
c	python/classy.c	/^typedef struct { char c; double x; } __Pyx_st_double;$/;"	m	struct:__anon18	file:
c	python/classy.c	/^typedef struct { char c; float x; } __Pyx_st_float;$/;"	m	struct:__anon17	file:
c	python/classy.c	/^typedef struct { char c; int x; } __Pyx_st_int;$/;"	m	struct:__anon15	file:
c	python/classy.c	/^typedef struct { char c; long double x; } __Pyx_st_longdouble;$/;"	m	struct:__anon19	file:
c	python/classy.c	/^typedef struct { char c; long x; } __Pyx_st_long;$/;"	m	struct:__anon16	file:
c	python/classy.c	/^typedef struct { char c; short x; } __Pyx_st_short;$/;"	m	struct:__anon14	file:
c	python/classy.c	/^typedef struct { char c; void *x; } __Pyx_st_void_p;$/;"	m	struct:__anon20	file:
c	python/classy.c	/^typedef struct { double x; char c; } __Pyx_pad_double;$/;"	m	struct:__anon26	file:
c	python/classy.c	/^typedef struct { float x; char c; } __Pyx_pad_float;$/;"	m	struct:__anon25	file:
c	python/classy.c	/^typedef struct { int x; char c; } __Pyx_pad_int;$/;"	m	struct:__anon23	file:
c	python/classy.c	/^typedef struct { long double x; char c; } __Pyx_pad_longdouble;$/;"	m	struct:__anon27	file:
c	python/classy.c	/^typedef struct { long x; char c; } __Pyx_pad_long;$/;"	m	struct:__anon24	file:
c	python/classy.c	/^typedef struct { short x; char c; } __Pyx_pad_short;$/;"	m	struct:__anon22	file:
c	python/classy.c	/^typedef struct { void *x; char c; } __Pyx_pad_void_p;$/;"	m	struct:__anon28	file:
c	tools/hermite3_interpolation_csource.h	/^double c[3]={0.,0.};$/;"	v
c	tools/hermite4_interpolation_csource.h	/^double c[3]={0.,0.,0.};$/;"	v
c1	include/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c1	tools/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c2	include/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c2	tools/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c3	include/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c3	tools/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c4	include/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c4	tools/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c5	include/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c5	tools/hermite6_interpolation_csource.h	/^double c1=0, c2=0, c3=0, c4=0, c5=0;$/;"	v
c_ad_bi	include/primordial.h	/^  double c_ad_bi; \/**< ADxBI cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_ad_cdi	include/primordial.h	/^  double c_ad_cdi; \/**< ADxCDI cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_ad_nid	include/primordial.h	/^  double c_ad_nid; \/**< ADxNID cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_ad_niv	include/primordial.h	/^  double c_ad_niv; \/**< ADxNIV cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_bi_cdi	include/primordial.h	/^  double c_bi_cdi; \/**< BIxCDI cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_bi_nid	include/primordial.h	/^  double c_bi_nid; \/**< BIxNIV cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_bi_niv	include/primordial.h	/^  double c_bi_niv; \/**< BIxNIV cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_cdi_nid	include/primordial.h	/^  double c_cdi_nid; \/**< CDIxNID cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_cdi_niv	include/primordial.h	/^  double c_cdi_niv; \/**< CDIxNIV cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
c_gamma_over_c_fld	include/background.h	/^  double c_gamma_over_c_fld; \/**< ppf parameter defined in eq. (16) of 0808.3125 [astro-ph] *\/$/;"	m	struct:background
c_nid_niv	include/primordial.h	/^  double c_nid_niv; \/**< NIDxNIV cross-correlation at pivot scale, from -1 to 1 *\/$/;"	m	struct:primordial
calc_C	tools/evolver_ndf15.c	/^int calc_C(struct jacobian *jac){$/;"	f
camb_format	include/common.h	/^enum file_format {class_format,camb_format};$/;"	e	enum:file_format
cheb	tools/hyperspherical.c	/^double cheb(double x, int n, const double A[]){$/;"	f
chi	include/transfer.h	/^  double * chi;                  \/**< chi[index_tau]: value of argument of bessel$/;"	m	struct:transfer_workspace
chi2_planck	test/chi2.c	/^int chi2_planck($/;"	f
chi2_planck	test/test_degeneracy.c	/^int chi2_planck($/;"	f
chi2_planck	test/test_optimize.c	/^int chi2_planck($/;"	f
chi2_planck	test/test_optimize_1D.c	/^int chi2_planck($/;"	f
chi2_simple	test/chi2.c	/^int chi2_simple($/;"	f
chi2_simple	test/test_degeneracy.c	/^int chi2_simple($/;"	f
chi2_simple	test/test_optimize.c	/^int chi2_simple($/;"	f
chi2_simple	test/test_optimize_1D.c	/^int chi2_simple($/;"	f
chi_at_phimin	include/hyperspherical.h	/^  double * chi_at_phimin;     \/\/ vector x_min[index-l] below which neglect Bessels$/;"	m	struct:HypersphericalInterpolationStructure
cl	include/spectra.h	/^  double ** cl;   \/**< table of anisotropy spectra for each mode, multipole, pair of initial conditions and types, cl[index_md][(index_l * psp->ic_ic_size[index_md] + index_ic1_ic2) * psp->ct_size + index_ct] *\/$/;"	m	struct:spectra
cl_lens	include/lensing.h	/^  double * cl_lens; \/**< table of anisotropy spectra for each$/;"	m	struct:lensing
cl_ref	test/test_degeneracy.c	/^double ** cl_ref;$/;"	v
class	test/test_loops.c	/^int class($/;"	f
class	test/test_loops_omp.c	/^int class($/;"	f
class	test/test_optimize.c	/^int class($/;"	f
class	test/test_optimize_1D.c	/^int class($/;"	f
class_alloc	include/common.h	133;"	d
class_alloc_message	include/common.h	129;"	d
class_alloc_parallel	include/common.h	144;"	d
class_assuming_bessels_computed	test/test_degeneracy.c	/^int class_assuming_bessels_computed($/;"	f
class_assuming_bessels_computed	test/test_optimize.c	/^int class_assuming_bessels_computed($/;"	f
class_assuming_bessels_computed	test/test_optimize_1D.c	/^int class_assuming_bessels_computed($/;"	f
class_at_least_two_of_three	include/input.h	66;"	d
class_build_error_string	include/common.h	82;"	d
class_call	include/common.h	112;"	d
class_call_except	include/common.h	95;"	d
class_call_message	include/common.h	91;"	d
class_call_parallel	include/common.h	116;"	d
class_call_try	include/common.h	104;"	d
class_calloc	include/common.h	158;"	d
class_define_index	include/common.h	235;"	d
class_format	include/common.h	/^enum file_format {class_format,camb_format};$/;"	e	enum:file_format
class_fprintf_columntitle	include/common.h	272;"	d
class_fprintf_double	include/common.h	246;"	d
class_fprintf_double_or_default	include/common.h	253;"	d
class_fprintf_int	include/common.h	263;"	d
class_fzero_ridder	source/input.c	/^int class_fzero_ridder(int (*func)(double x, void *param, double *y, ErrorMsg error_message),$/;"	f
class_none_of_three	include/input.h	71;"	d
class_open	include/common.h	226;"	d
class_protect_fprintf	tools/common.c	/^void class_protect_fprintf(FILE* stream, char* tpl,...) {$/;"	f
class_protect_memcpy	tools/common.c	/^void* class_protect_memcpy(void* dest, void* from, size_t sz) {$/;"	f
class_protect_sprintf	tools/common.c	/^void class_protect_sprintf(char* dest, char* tpl,...) {$/;"	f
class_read_double	include/input.h	20;"	d
class_read_double_one_of_two	include/input.h	48;"	d
class_read_int	include/input.h	30;"	d
class_read_list_of_doubles	include/input.h	107;"	d
class_read_list_of_doubles_or_default	include/input.h	75;"	d
class_read_list_of_integers	include/input.h	120;"	d
class_read_list_of_integers_or_default	include/input.h	91;"	d
class_read_string	include/input.h	39;"	d
class_realloc	include/common.h	169;"	d
class_stop	include/common.h	217;"	d
class_store_columntitle	include/common.h	282;"	d
class_store_double	include/common.h	292;"	d
class_store_double_or_default	include/common.h	300;"	d
class_test	include/common.h	198;"	d
class_test_except	include/common.h	190;"	d
class_test_message	include/common.h	181;"	d
class_test_parallel	include/common.h	205;"	d
class_version	source/input.c	/^int class_version($/;"	f
cleanup_generic_integrator	tools/dei_rkck.c	/^int cleanup_generic_integrator(struct generic_integrator_workspace * pgi){$/;"	f
closed	include/background.h	/^enum spatial_curvature {flat,open,closed};$/;"	e	enum:spatial_curvature
cnzmax	include/evolver_ndf15.h	/^	int cnzmax;$/;"	m	struct:jacobian
code_line	python/classy.c	/^    int code_line;$/;"	m	struct:__anon10	file:
code_object	python/classy.c	/^    PyCodeObject* code_object;$/;"	m	struct:__anon10	file:
coef1	tools/hyperspherical.c	/^double coef1(double z){$/;"	f
coef2	tools/hyperspherical.c	/^double coef2(double z){$/;"	f
coef3	tools/hyperspherical.c	/^double coef3(double z){$/;"	f
coef4	tools/hyperspherical.c	/^double coef4(double z){$/;"	f
col_group	include/evolver_ndf15.h	/^	int *col_group; \/* Column grouping. Groups go from 0 to max_group*\/$/;"	m	struct:jacobian
col_wi	include/evolver_ndf15.h	/^	int *col_wi; \/* Workarray for column grouping*\/$/;"	m	struct:jacobian
column_grouping	tools/sparse.c	/^int column_grouping(sp_mat *G, int *col_g, int *filled){$/;"	f
command	include/primordial.h	/^  char*  command;  \/**< string with the command for calling 'external_Pk' *\/$/;"	m	struct:primordial
compare_doubles	source/input.c	/^int compare_doubles(const void *a,const void *b) {$/;"	f
compare_integers	source/input.c	/^int compare_integers (const void * elem1, const void * elem2) {$/;"	f
compromise_CLASS	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	e	enum:tca_method
computation_stage	include/input.h	/^enum computation_stage {cs_background, cs_thermodynamics, cs_perturbations,$/;"	g
compute_Hermite	tools/quadrature.c	/^int compute_Hermite(double *x, double *w, int N, int alpha, double *b, double *c){$/;"	f
compute_Laguerre	tools/quadrature.c	/^int compute_Laguerre(double *x, double *w, int N, double alpha, double *b, double *c,int totalweight){$/;"	f
compute_cb2_derivatives	include/thermodynamics.h	/^  short compute_cb2_derivatives; \/**< do we want to include in computation derivatives of baryon sound speed? *\/$/;"	m	struct:thermo
compute_damping_scale	include/thermodynamics.h	/^  short compute_damping_scale; \/**< do we want to compute the simplest analytic approximation to the photon damping (or diffusion) scale? *\/$/;"	m	struct:thermo
conformal	include/primordial.h	/^  conformal,$/;"	e	enum:time_definition
conformal_age	include/background.h	/^  double conformal_age; \/**< conformal age in Mpc *\/$/;"	m	struct:background
cotK	include/hermite3_interpolation_csource.h	/^double *cotK = pHIS->cotK;$/;"	v
cotK	include/hermite4_interpolation_csource.h	/^double *cotK = pHIS->cotK;$/;"	v
cotK	include/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
cotK	include/hyperspherical.h	/^  double *cotK;          \/\/Vector of cot_K(xvec)$/;"	m	struct:HypersphericalInterpolationStructure
cotK	tools/hermite3_interpolation_csource.h	/^double *cotK = pHIS->cotK;$/;"	v
cotK	tools/hermite4_interpolation_csource.h	/^double *cotK = pHIS->cotK;$/;"	v
cotK	tools/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
cotKgen	include/transfer.h	/^  double * cotKgen;              \/**< cotKgen[index_tau]: useful trigonometric function *\/$/;"	m	struct:transfer_workspace
cotKm	include/hermite3_interpolation_csource.h	/^double cotKm=0,sinKm=0;$/;"	v
cotKm	include/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
cotKm	include/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
cotKm	tools/hermite3_interpolation_csource.h	/^double cotKm=0,sinKm=0;$/;"	v
cotKm	tools/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
cotKm	tools/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
cotKp	include/hermite3_interpolation_csource.h	/^double cotKp=0,sinKp=0;$/;"	v
cotKp	include/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
cotKp	include/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
cotKp	tools/hermite3_interpolation_csource.h	/^double cotKp=0,sinKp=0;$/;"	v
cotKp	tools/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
cotKp	tools/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
count	python/classy.c	/^    int count;$/;"	m	struct:__Pyx_CodeObjectCache	file:
create_1D_array	hyrec/hyrectools.c	/^double *create_1D_array(unsigned n1){$/;"	f
create_2D_array	hyrec/hyrectools.c	/^double **create_2D_array(unsigned n1, unsigned n2){$/;"	f
create_3D_array	hyrec/hyrectools.c	/^double ***create_3D_array(unsigned n1, unsigned n2, unsigned n3){$/;"	f
cs2_fld	include/background.h	/^  double cs2_fld; \/**< \\f$ c^2_{s~DE} \\f$: sound speed of the fluid$/;"	m	struct:background
cs_background	include/input.h	/^enum computation_stage {cs_background, cs_thermodynamics, cs_perturbations,$/;"	e	enum:computation_stage
cs_nonlinear	include/input.h	/^                        cs_primordial, cs_nonlinear, cs_transfer, cs_spectra};$/;"	e	enum:computation_stage
cs_perturbations	include/input.h	/^enum computation_stage {cs_background, cs_thermodynamics, cs_perturbations,$/;"	e	enum:computation_stage
cs_primordial	include/input.h	/^                        cs_primordial, cs_nonlinear, cs_transfer, cs_spectra};$/;"	e	enum:computation_stage
cs_spectra	include/input.h	/^                        cs_primordial, cs_nonlinear, cs_transfer, cs_spectra};$/;"	e	enum:computation_stage
cs_thermodynamics	include/input.h	/^enum computation_stage {cs_background, cs_thermodynamics, cs_perturbations,$/;"	e	enum:computation_stage
cs_transfer	include/input.h	/^                        cs_primordial, cs_nonlinear, cs_transfer, cs_spectra};$/;"	e	enum:computation_stage
cscKgen	include/transfer.h	/^  double * cscKgen;              \/**< cscKgen[index_tau]: useful trigonometric function *\/$/;"	m	struct:transfer_workspace
csz	include/growTable.h	/^  long csz;     \/**< real size *\/$/;"	m	struct:__anon33
ct_size	include/spectra.h	/^  int ct_size; \/**< number of \\f$ C_l \\f$ types requested *\/$/;"	m	struct:spectra
cubature_order_eleven	tools/quadrature.c	/^int cubature_order_eleven($/;"	f
cube	hyrec/hydrogen.c	/^double cube(double x) {$/;"	f
current_border_idx	include/hermite3_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
current_border_idx	include/hermite4_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
current_border_idx	include/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
current_border_idx	tools/hermite3_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
current_border_idx	tools/hermite4_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
current_border_idx	tools/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
curvature_ini	include/common.h	/^  double curvature_ini;     \/**< initial condition for curvature for adiabatic *\/$/;"	m	struct:precision
custom1	include/primordial.h	/^  double custom1;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom10	include/primordial.h	/^  double custom10; \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom2	include/primordial.h	/^  double custom2;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom3	include/primordial.h	/^  double custom3;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom4	include/primordial.h	/^  double custom4;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom5	include/primordial.h	/^  double custom5;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom6	include/primordial.h	/^  double custom6;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom7	include/primordial.h	/^  double custom7;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom8	include/primordial.h	/^  double custom8;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
custom9	include/primordial.h	/^  double custom9;  \/**< one parameter of the primordial computed in 'external_Pk' *\/$/;"	m	struct:primordial
d2background_dtau2_table	include/background.h	/^  double * d2background_dtau2_table; \/**< table d2background_dtau2_table[index_tau*pba->bg_size+pba->index_bg] with values of \\f$ d^2 b_i \/ d\\tau^2 \\f$ (conformal time) *\/$/;"	m	struct:background
d2f0	include/background.h	/^  double *d2f0;$/;"	m	struct:background_parameters_for_distributions
d2tau_dz2_table	include/background.h	/^  double * d2tau_dz2_table; \/**< vector d2tau_dz2_table[index_tau] with values of \\f$ d^2 \\tau \/ dz^2 \\f$ (conformal time) *\/$/;"	m	struct:background
d2thermodynamics_dz2_table	include/thermodynamics.h	/^  double * d2thermodynamics_dz2_table; \/**< table d2thermodynamics_dz2_table[index_z*pth->tt_size+pba->index_th] with values of \\f$ d^2 t_i \/ dz^2 \\f$ (array of size th_size*tt_size) *\/$/;"	m	struct:thermo
d2ym	include/hermite3_interpolation_csource.h	/^double d2ym = 0, d3yp=0;$/;"	v
d2ym	include/hermite4_interpolation_csource.h	/^double d2ym = 0, d2yp=0;$/;"	v
d2ym	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
d2ym	tools/hermite3_interpolation_csource.h	/^double d2ym = 0, d3yp=0;$/;"	v
d2ym	tools/hermite4_interpolation_csource.h	/^double d2ym = 0, d2yp=0;$/;"	v
d2ym	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
d2yp	include/hermite3_interpolation_csource.h	/^double d2yp=0;$/;"	v
d2yp	include/hermite4_interpolation_csource.h	/^double d2ym = 0, d2yp=0;$/;"	v
d2yp	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
d2yp	tools/hermite3_interpolation_csource.h	/^double d2yp=0;$/;"	v
d2yp	tools/hermite4_interpolation_csource.h	/^double d2ym = 0, d2yp=0;$/;"	v
d2yp	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
d3ym	include/hermite4_interpolation_csource.h	/^double d3ym=0, d3yp=0;$/;"	v
d3ym	include/hermite6_interpolation_csource.h	/^double d3ym = 0, d3yp=0;$/;"	v
d3ym	tools/hermite4_interpolation_csource.h	/^double d3ym=0, d3yp=0;$/;"	v
d3ym	tools/hermite6_interpolation_csource.h	/^double d3ym = 0, d3yp=0;$/;"	v
d3yp	include/hermite3_interpolation_csource.h	/^double d2ym = 0, d3yp=0;$/;"	v
d3yp	include/hermite4_interpolation_csource.h	/^double d3ym=0, d3yp=0;$/;"	v
d3yp	include/hermite6_interpolation_csource.h	/^double d3ym = 0, d3yp=0;$/;"	v
d3yp	tools/hermite3_interpolation_csource.h	/^double d2ym = 0, d3yp=0;$/;"	v
d3yp	tools/hermite4_interpolation_csource.h	/^double d3ym=0, d3yp=0;$/;"	v
d3yp	tools/hermite6_interpolation_csource.h	/^double d3ym = 0, d3yp=0;$/;"	v
d4ym	include/hermite6_interpolation_csource.h	/^double d4ym=0, d4yp=0;$/;"	v
d4ym	tools/hermite6_interpolation_csource.h	/^double d4ym=0, d4yp=0;$/;"	v
d4yp	include/hermite6_interpolation_csource.h	/^double d4ym=0, d4yp=0;$/;"	v
d4yp	tools/hermite6_interpolation_csource.h	/^double d4ym=0, d4yp=0;$/;"	v
dH	include/primordial.h	/^  double dH;$/;"	m	struct:primordial_inflation_parameters_and_workspace
dPhi_l	include/hermite3_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
dPhi_l	include/hermite4_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
dPhi_l	include/hermite6_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
dPhi_l	tools/hermite3_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
dPhi_l	tools/hermite4_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
dPhi_l	tools/hermite6_interpolation_csource.h	/^double *Phi_l, *dPhi_l;$/;"	v
dV	include/primordial.h	/^  double dV;$/;"	m	struct:primordial_inflation_parameters_and_workspace
dV_e_scf	source/background.c	/^double dV_e_scf(struct background *pba,$/;"	f
dV_p_scf	source/background.c	/^double dV_p_scf($/;"	f
dV_scf	source/background.c	/^double dV_scf($/;"	f
d_size	include/spectra.h	/^  int d_size;      \/**< number of bins for which density Cl's are computed *\/$/;"	m	struct:spectra
da_rec	include/thermodynamics.h	/^  double da_rec;  \/**< physical angular diameter distance to recombination *\/$/;"	m	struct:thermo
data	python/classy.c	/^  char *data;$/;"	m	struct:__anon13	file:
ddH	include/primordial.h	/^  double ddH;$/;"	m	struct:primordial_inflation_parameters_and_workspace
ddV	include/primordial.h	/^  double ddV;$/;"	m	struct:primordial_inflation_parameters_and_workspace
ddV_e_scf	source/background.c	/^double ddV_e_scf(struct background *pba,$/;"	f
ddV_p_scf	source/background.c	/^double ddV_p_scf($/;"	f
ddV_scf	source/background.c	/^double ddV_scf($/;"	f
ddcl	include/spectra.h	/^  double ** ddcl; \/**< second derivatives of previous table with respect to l, in view of spline interpolation *\/$/;"	m	struct:spectra
ddcl_lens	include/lensing.h	/^  double * ddcl_lens; \/**< second derivatives for interpolation *\/$/;"	m	struct:lensing
dddH	include/primordial.h	/^  double dddH;$/;"	m	struct:primordial_inflation_parameters_and_workspace
ddln_pk	include/spectra.h	/^  double * ddln_pk; \/**< second derivative of above array with respect to log(tau), for spline interpolation. So:$/;"	m	struct:spectra
ddln_pk_nl	include/spectra.h	/^  double * ddln_pk_nl; \/**< second derivative of above array with respect to log(tau), for spline interpolation. *\/$/;"	m	struct:spectra
ddlnpk	include/primordial.h	/^  double ** ddlnpk; \/**< second derivative of above array, for spline interpolation. So:$/;"	m	struct:primordial
ddmatter_transfer	include/spectra.h	/^  double * ddmatter_transfer; \/**< second derivative of above array with respect to log(tau), for spline interpolation. *\/$/;"	m	struct:spectra
decay	hyrec/history.h	/^   double decay; \/** parameter descibing CDM decay (f\/tau, see e.g. 1109.6322)*\/$/;"	m	struct:__anon30
decay	include/thermodynamics.h	/^  double decay; \/** parameter describing CDM decay (f\/tau, see e.g. 1109.6322)*\/$/;"	m	struct:thermo
decay	include/thermodynamics.h	/^  double decay; \/**< parameter describing CDM decay (f\/tau, see e.g. 1109.6322)*\/$/;"	m	struct:recombination
defaults	python/classy.c	/^    void *defaults;$/;"	m	struct:__anon9	file:
defaults_getter	python/classy.c	/^    PyObject *(*defaults_getter)(PyObject *);$/;"	m	struct:__anon9	file:
defaults_kwdict	python/classy.c	/^    PyObject *defaults_kwdict;$/;"	m	struct:__anon9	file:
defaults_pyobjects	python/classy.c	/^    int defaults_pyobjects;$/;"	m	struct:__anon9	file:
defaults_tuple	python/classy.c	/^    PyObject *defaults_tuple;$/;"	m	struct:__anon9	file:
deg_ncdm	include/background.h	/^  double * deg_ncdm, deg_ncdm_default;   \/**< vector of degeneracy parameters in factor$/;"	m	struct:background
deg_ncdm_default	include/background.h	/^  double * deg_ncdm, deg_ncdm_default;   \/**< vector of degeneracy parameters in factor$/;"	m	struct:background
del	include/evolver_ndf15.h	/^	double *del;$/;"	m	struct:numjac_workspace
delta_bc_squared	include/common.h	/^  delta_bc_squared, \/**< delta_bc includes contribution of baryons and cdm only to (delta rho) and to rho *\/$/;"	e	enum:pk_def
delta_l_max	include/common.h	/^  int delta_l_max; \/**< difference between l_max in unlensed and lensed spectra *\/$/;"	m	struct:precision
delta_m	include/perturbations.h	/^  double delta_m;	\/**< relative density perturbation of all non-relativistic species *\/$/;"	m	struct:perturb_workspace
delta_m_squared	include/common.h	/^  delta_m_squared, \/**< normal definition (delta_m includes all non-relativistic species at late times) *\/$/;"	e	enum:pk_def
delta_ncdm	include/perturbations.h	/^  double * delta_ncdm;	\/**< relative density perturbation of each ncdm species *\/$/;"	m	struct:perturb_workspace
delta_p	include/perturbations.h	/^  double delta_p;		    \/**< total pressure perturbation (gives Tii) *\/$/;"	m	struct:perturb_workspace
delta_rho	include/perturbations.h	/^  double delta_rho;		    \/**< total density perturbation (gives delta Too) *\/$/;"	m	struct:perturb_workspace
delta_rho_fld	include/perturbations.h	/^  double delta_rho_fld;        \/**< density perturbation of fluid, not so trivial in PPF scheme *\/$/;"	m	struct:perturb_workspace
delta_tot_from_poisson_squared	include/common.h	/^  delta_tot_from_poisson_squared \/**< use delta_tot inferred from gravitational potential through Poisson equation *\/$/;"	e	enum:pk_def
delta_tot_squared	include/common.h	/^  delta_tot_squared, \/**< delta_tot includes all species contributions to (delta rho), and only non-relativistic contributions to rho *\/$/;"	e	enum:pk_def
delta_x	include/hyperspherical.h	/^  double delta_x;         \/\/x-spacing. (xvec is uniformly spaced)$/;"	m	struct:HypersphericalInterpolationStructure
deltax	include/hermite3_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
deltax	include/hermite4_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
deltax	include/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
deltax	tools/hermite3_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
deltax	tools/hermite4_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
deltax	tools/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
deltax2	include/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
deltax2	tools/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
dfdy	include/evolver_ndf15.h	/^	double **dfdy;$/;"	m	struct:jacobian
dfsr	tools/sparse.c	/^void dfsr(int j, sp_mat *G, int *top, int *xik, int *pinv){$/;"	f
diminfo	python/classy.c	/^  __Pyx_Buf_DimInfo diminfo[8];$/;"	m	struct:__anon13	file:
dirac	include/perturbations.h	/^enum selection_type {gaussian,tophat,dirac};$/;"	e	enum:selection_type
dlna	hyrec/history.h	/^   double zstart, zend, dlna;   \/* initial and final redshift and step size in log a *\/$/;"	m	struct:__anon30
dlnf0_dlnq_ncdm	include/background.h	/^  double ** dlnf0_dlnq_ncdm; \/**< Pointers to vectors of logarithmic derivatives of p-s-d *\/$/;"	m	struct:background
dphi	include/hyperspherical.h	/^  double *dphi;       \/\/Same as phivec, but containing derivatives.$/;"	m	struct:HypersphericalInterpolationStructure
dphisign	include/hermite3_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
dphisign	include/hermite4_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
dphisign	include/hermite6_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
dphisign	tools/hermite3_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
dphisign	tools/hermite4_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
dphisign	tools/hermite6_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
ds_d	include/thermodynamics.h	/^  double ds_d;    \/**< physical sound horizon at baryon drag *\/$/;"	m	struct:thermo
ds_rec	include/thermodynamics.h	/^  double ds_rec;  \/**< physical sound horizon at recombination *\/$/;"	m	struct:thermo
dsign	include/dei_rkck.h	84;"	d
dy	include/perturbations.h	/^  double * dy;            \/**< time-derivative of the same vector *\/$/;"	m	struct:perturb_vector
dydx	include/dei_rkck.h	/^  double * dydx;$/;"	m	struct:generic_integrator_workspace
dym	include/hermite3_interpolation_csource.h	/^double dym=0;$/;"	v
dym	include/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
dym	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
dym	tools/hermite3_interpolation_csource.h	/^double dym=0;$/;"	v
dym	tools/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
dym	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
dyp	include/hermite3_interpolation_csource.h	/^double yp=0, dyp=0, x;$/;"	v
dyp	include/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
dyp	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
dyp	tools/hermite3_interpolation_csource.h	/^double yp=0, dyp=0, x;$/;"	v
dyp	tools/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
dyp	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
eisw_lisw_split_z	include/perturbations.h	/^  double eisw_lisw_split_z; \/**< at which redshift do we define the cut between eisw and lisw ?*\/$/;"	m	struct:perturbs
enc_count	python/classy.c	/^  size_t new_count, enc_count;$/;"	m	struct:__anon5	file:
enc_packmode	python/classy.c	/^  char enc_packmode;$/;"	m	struct:__anon5	file:
enc_type	python/classy.c	/^  char enc_type;$/;"	m	struct:__anon5	file:
encoding	python/classy.c	/^typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;$/;"	m	struct:__anon2	file:
energy_injection_rate	hyrec/history.c	/^double energy_injection_rate(REC_COSMOPARAMS *param,$/;"	f
entries	python/classy.c	/^    __Pyx_CodeObjectCacheEntry* entries;$/;"	m	struct:__Pyx_CodeObjectCache	file:
entropy_ini	include/common.h	/^  double entropy_ini; \/**< initial condition for entropy perturbation for isocurvature *\/$/;"	m	struct:precision
eqvec	tools/evolver_ndf15.c	/^void eqvec(double *datavec,double *emptyvec, int n){$/;"	f
err	include/quadrature.h	/^  double err;		\/* Estimated error *\/$/;"	m	struct:adaptive_integration_tree_node
errmsg	test/test_degeneracy.c	/^ErrorMsg errmsg;$/;"	v
error_message	include/background.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:background
error_message	include/common.h	/^  ErrorMsg error_message;  \/**< zone for writing error messages *\/$/;"	m	struct:precision
error_message	include/dei_rkck.h	/^  ErrorMsg error_message;$/;"	m	struct:generic_integrator_workspace
error_message	include/growTable.h	/^  ErrorMsg error_message; \/**< error message slot *\/$/;"	m	struct:__anon33
error_message	include/lensing.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:lensing
error_message	include/nonlinear.h	/^  ErrorMsg error_message; 	\/**< zone for writing error messages *\/$/;"	m	struct:nonlinear
error_message	include/output.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:output
error_message	include/perturbations.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:perturbs
error_message	include/primordial.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:primordial
error_message	include/spectra.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:spectra
error_message	include/thermodynamics.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:thermo
error_message	include/transfer.h	/^  ErrorMsg error_message; \/**< zone for writing error messages *\/$/;"	m	struct:transfers
evolve_tensor_ncdm	include/perturbations.h	/^  short evolve_tensor_ncdm;             \/**< will we evolve ncdm tensor perturbations (if we have ncdm species and we use the exact method) ? *\/$/;"	m	struct:perturbs
evolve_tensor_ur	include/perturbations.h	/^  short evolve_tensor_ur;             \/**< will we evolve ur tensor perturbations (either because we have ur species, or we have ncdm species with massless approximation) ? *\/$/;"	m	struct:perturbs
evolver	include/common.h	/^  enum evolver_type evolver; \/**< which type of evolver for integrating perturbations (Runge-Kutta? Stiff?...) *\/$/;"	m	struct:precision	typeref:enum:precision::evolver_type
evolver_ndf15	tools/evolver_ndf15.c	/^int evolver_ndf15($/;"	f
evolver_rk	tools/evolver_rkck.c	/^int evolver_rk(int (*derivs)(double x,$/;"	f
evolver_type	include/common.h	/^enum evolver_type {$/;"	g
external_Pk	include/primordial.h	/^  external_Pk$/;"	e	enum:primordial_spectrum_type
f0	include/background.h	/^  double *f0;$/;"	m	struct:background_parameters_for_distributions
f1	include/thermodynamics.h	46;"	d
f2	include/thermodynamics.h	47;"	d
fHe	hyrec/history.h	/^   double fHe;                  \/* Helium fraction by number *\/$/;"	m	struct:__anon30
fHe	include/thermodynamics.h	/^  double fHe; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
f_bi	include/primordial.h	/^  double f_bi;  \/**< baryon isocurvature (BI) entropy-to-curvature ratio \\f$ S_{bi}\/R \\f$*\/$/;"	m	struct:primordial
f_cdi	include/primordial.h	/^  double f_cdi;  \/**< CDM isocurvature (CDI) entropy-to-curvature ratio \\f$ S_{cdi}\/R \\f$*\/$/;"	m	struct:primordial
f_nid	include/primordial.h	/^  double f_nid;  \/**< neutrino density isocurvature (NID) entropy-to-curvature ratio \\f$ S_{nid}\/R \\f$*\/$/;"	m	struct:primordial
f_niv	include/primordial.h	/^  double f_niv;  \/**< neutrino velocity isocurvature (NIV) entropy-to-curvature ratio \\f$ S_{niv}\/R \\f$*\/$/;"	m	struct:primordial
factor_ncdm	include/background.h	/^  double * factor_ncdm; \/**< List of normalization factors for calculating energy density etc.*\/$/;"	m	struct:background
fc	include/input.h	/^  struct file_content fc;$/;"	m	struct:fzerofun_workspace	typeref:struct:fzerofun_workspace::file_content
fc	python/classy.c	/^  struct file_content fc;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::file_content	file:
fc	test/test_degeneracy.c	/^struct file_content fc;$/;"	v	typeref:struct:file_content
ffdel	include/evolver_ndf15.h	/^	double * ffdel;$/;"	m	struct:numjac_workspace
field	python/classy.c	/^  __Pyx_StructField* field;$/;"	m	struct:__anon4	file:
fields	python/classy.c	/^  struct __Pyx_StructField_* fields;$/;"	m	struct:__anon3	typeref:struct:__anon3::__Pyx_StructField_	file:
file_content	include/parser.h	/^struct file_content {$/;"	s
file_exists	source/input.c	/^int file_exists(const char *fname){$/;"	f
file_format	include/common.h	/^enum file_format {class_format,camb_format};$/;"	g
filename	include/parser.h	/^  char * filename;$/;"	m	struct:file_content
first_order_CAMB	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	e	enum:tca_method
first_order_CLASS	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	e	enum:tca_method
first_order_MB	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	e	enum:tca_method
flags	python/classy.c	/^    int flags;$/;"	m	struct:__anon9	file:
flags	python/classy.c	/^  int flags;$/;"	m	struct:__anon3	file:
flat	include/background.h	/^enum spatial_curvature {flat,open,closed};$/;"	e	enum:spatial_curvature
fmt_offset	python/classy.c	/^  size_t fmt_offset;$/;"	m	struct:__anon5	file:
forward	include/primordial.h	/^  forward$/;"	e	enum:integration_direction
fplus_from_fminus	hyrec/hydrogen.c	/^void fplus_from_fminus(double fplus[NVIRT], double fplus_Ly[], double **logfminus_hist, double *logfminus_Ly_hist[],$/;"	f
free_2D_array	hyrec/hyrectools.c	/^void free_2D_array(double **matrix, unsigned n1){$/;"	f
free_3D_array	hyrec/hyrectools.c	/^void free_3D_array(double ***matrix, unsigned n1, unsigned n2) {$/;"	f
freeze	include/growTable.h	/^  int freeze;   \/**< if set to _TRUE_ no data can be added *\/$/;"	m	struct:__anon33
fu	include/thermodynamics.h	/^  double fu; \/**< defined as in RECFAST *\/$/;"	m	struct:recombination
func	python/classy.c	/^    PyCFunctionObject func;$/;"	m	struct:__anon9	file:
func_annotations	python/classy.c	/^    PyObject *func_annotations;$/;"	m	struct:__anon9	file:
func_classobj	python/classy.c	/^    PyObject *func_classobj;$/;"	m	struct:__anon9	file:
func_closure	python/classy.c	/^    PyObject *func_closure;$/;"	m	struct:__anon9	file:
func_code	python/classy.c	/^    PyObject *func_code;$/;"	m	struct:__anon9	file:
func_dict	python/classy.c	/^    PyObject *func_dict;$/;"	m	struct:__anon9	file:
func_doc	python/classy.c	/^    PyObject *func_doc;$/;"	m	struct:__anon9	file:
func_globals	python/classy.c	/^    PyObject *func_globals;$/;"	m	struct:__anon9	file:
func_name	python/classy.c	/^    PyObject *func_name;$/;"	m	struct:__anon9	file:
func_qualname	python/classy.c	/^    PyObject *func_qualname;$/;"	m	struct:__anon9	file:
func_weakreflist	python/classy.c	/^    PyObject *func_weakreflist;$/;"	m	struct:__anon9	file:
fzero_Newton	tools/evolver_ndf15.c	/^int fzero_Newton(int (*func)(double *x,$/;"	f
fzero_ridder	tools/hyperspherical.c	/^int fzero_ridder(double (*func)(double, void *),$/;"	f
fzerofun_workspace	include/input.h	/^struct fzerofun_workspace {$/;"	s
gamma_var	source/perturbations.c	4211;"	d	file:
gauge	include/perturbations.h	/^  enum possible_gauges gauge; \/**< gauge in which to perform this calculation *\/$/;"	m	struct:perturbs	typeref:enum:perturbs::possible_gauges
gaussian	include/perturbations.h	/^enum selection_type {gaussian,tophat,dirac};$/;"	e	enum:selection_type
generic_integrator	tools/dei_rkck.c	/^int generic_integrator(int (*derivs)(double x, double y[], double yprime[], void * parameters_and_workspace, ErrorMsg error_message),$/;"	f
generic_integrator_workspace	include/dei_rkck.h	/^struct generic_integrator_workspace$/;"	s
get_CF1	tools/hyperspherical.c	/^int get_CF1(int K,int l,double beta, double cotK, double *CF, int *isign){$/;"	f
get_chi2	test/test_degeneracy.c	/^double get_chi2( double * param){$/;"	f
get_integral	tools/quadrature.c	/^double get_integral(qss_node *node, int level){$/;"	f
get_leaf_x_and_w	tools/quadrature.c	/^int get_leaf_x_and_w(qss_node *node, int *ind, double *x, double *w,int isindefinite){$/;"	f
get_machine_precision	source/input.c	/^int get_machine_precision(double * smallest_allowed_variation) {$/;"	f
get_number_of_titles	tools/common.c	/^int get_number_of_titles(char * titlestring){$/;"	f
get_qsampling	tools/quadrature.c	/^int get_qsampling(double *x,$/;"	f
get_value_at_small_phi	tools/hyperspherical.c	/^double get_value_at_small_phi(int K,int l,double beta,double Phi){$/;"	f
gk_adapt	tools/quadrature.c	/^int gk_adapt($/;"	f
gk_quad	tools/quadrature.c	/^int gk_quad(int (*test)(void * params_for_function, double q, double *psi),$/;"	f
got_files	include/background.h	/^  int * got_files;                      \/**< list of flags for each species, set to true if$/;"	m	struct:background
growTable	include/growTable.h	/^} growTable;$/;"	t	typeref:struct:__anon33
gt_add	tools/growTable.c	/^int gt_add($/;"	f
gt_free	tools/growTable.c	/^int gt_free(growTable* self) {$/;"	f
gt_getPtr	tools/growTable.c	/^int gt_getPtr($/;"	f
gt_getSize	tools/growTable.c	/^int gt_getSize($/;"	f
gt_init	tools/growTable.c	/^int gt_init($/;"	f
gt_retrieve	tools/growTable.c	/^int gt_retrieve($/;"	f
gt_retrieveAll	tools/growTable.c	/^int gt_retrieveAll($/;"	f
gw_ini	include/common.h	/^  double gw_ini;      \/**< initial condition for tensor metric perturbation h *\/$/;"	m	struct:precision
gw_source	include/perturbations.h	/^  double gw_source;		    \/**< stress-energy source term in Einstein's tensor equations (gives Tij[tensor]) *\/$/;"	m	struct:perturb_workspace
h	include/background.h	/^  double h; \/**< reduced Hubble parameter *\/$/;"	m	struct:background
hPc	hyrec/hydrogen.h	23;"	d
halofit_dz	include/common.h	/^  double halofit_dz; \/**< spacing in redshift space defining values of z$/;"	m	struct:precision
halofit_k_per_decade	include/common.h	/^  double halofit_k_per_decade; \/**< halofit needs to evalute integrals$/;"	m	struct:precision
halofit_min_k_max	include/common.h	/^  double halofit_min_k_max; \/**< when halofit is used, k_max must be at$/;"	m	struct:precision
halofit_min_k_nonlinear	include/common.h	/^  double halofit_min_k_nonlinear; \/**< value of k in 1\/Mpc above$/;"	m	struct:precision
halofit_sigma_precision	include/common.h	/^  double halofit_sigma_precision; \/**< a smaller value will lead to a$/;"	m	struct:precision
has_ad	include/perturbations.h	/^  short has_ad;      \/**< do we need adiabatic mode? *\/$/;"	m	struct:perturbs
has_bb	include/lensing.h	/^  int has_bb; \/**< do we want \\f$ C_l^{BB}\\f$? (B = B-polarization) *\/$/;"	m	struct:lensing
has_bb	include/spectra.h	/^  int has_bb; \/**< do we want \\f$ C_l^{BB}\\f$? (B = B-polarization) *\/$/;"	m	struct:spectra
has_bi	include/perturbations.h	/^  short has_bi;      \/**< do we need isocurvature bi mode? *\/$/;"	m	struct:perturbs
has_cdi	include/perturbations.h	/^  short has_cdi;     \/**< do we need isocurvature cdi mode? *\/$/;"	m	struct:perturbs
has_cdm	include/background.h	/^  short has_cdm;       \/**< presence of cold dark matter? *\/$/;"	m	struct:background
has_cl_cmb_lensing_potential	include/perturbations.h	/^  short has_cl_cmb_lensing_potential; \/**< do we need \\f$ C_l \\f$'s for CMB lensing potential? *\/$/;"	m	struct:perturbs
has_cl_cmb_polarization	include/perturbations.h	/^  short has_cl_cmb_polarization;      \/**< do we need \\f$ C_l \\f$'s for CMB polarization? *\/$/;"	m	struct:perturbs
has_cl_cmb_temperature	include/perturbations.h	/^  short has_cl_cmb_temperature;       \/**< do we need \\f$ C_l \\f$'s for CMB temperature? *\/$/;"	m	struct:perturbs
has_cl_lensing_potential	include/perturbations.h	/^  short has_cl_lensing_potential;     \/**< do we need \\f$ C_l \\f$'s for galaxy lensing potential? *\/$/;"	m	struct:perturbs
has_cl_number_count	include/perturbations.h	/^  short has_cl_number_count;          \/**< do we need \\f$ C_l \\f$'s for density number count? *\/$/;"	m	struct:perturbs
has_cls	include/perturbations.h	/^  short has_cls; \/**< do we need any harmonic space spectrum \\f$ C_l \\f$ (and hence Bessel functions, transfer functions, ...)? *\/$/;"	m	struct:perturbs
has_cls	include/transfer.h	/^  short has_cls; \/**< copy of same flag in perturbation structure *\/$/;"	m	struct:transfers
has_cmb	include/perturbations.h	/^  short has_cmb; \/**< do we need CMB-related sources (temperature, polarization) ? *\/$/;"	m	struct:perturbs
has_curvature	include/background.h	/^  short has_curvature; \/**< presence of global spatial curvature? *\/$/;"	m	struct:background
has_dcdm	include/background.h	/^  short has_dcdm;      \/**< presence of decaying cold dark matter? *\/$/;"	m	struct:background
has_dd	include/lensing.h	/^  int has_dd; \/**< do we want \\f$ C_l^{dd}\\f$? (d = matter density) *\/$/;"	m	struct:lensing
has_dd	include/spectra.h	/^  int has_dd; \/**< do we want \\f$ C_l^{dd}\\f$? (d = density) *\/$/;"	m	struct:spectra
has_density_transfers	include/perturbations.h	/^  short has_density_transfers;        \/**< do we need to output individual matter density transfer functions? *\/$/;"	m	struct:perturbs
has_dl	include/spectra.h	/^  int has_dl; \/**< do we want \\f$ C_l^{dl}\\f$? *\/$/;"	m	struct:spectra
has_dr	include/background.h	/^  short has_dr;        \/**< presence of relativistic decay radiation? *\/$/;"	m	struct:background
has_ee	include/lensing.h	/^  int has_ee; \/**< do we want lensed \\f$ C_l^{EE}\\f$? (E = E-polarization) *\/$/;"	m	struct:lensing
has_ee	include/spectra.h	/^  int has_ee; \/**< do we want \\f$ C_l^{EE}\\f$? (E = E-polarization) *\/$/;"	m	struct:spectra
has_ep	include/spectra.h	/^  int has_ep; \/**< do we want \\f$ C_l^{E\\phi}\\f$? *\/$/;"	m	struct:spectra
has_fld	include/background.h	/^  short has_fld;       \/**< presence of fluid with constant w and cs2? *\/$/;"	m	struct:background
has_grouping	include/evolver_ndf15.h	/^	int has_grouping;$/;"	m	struct:jacobian
has_lambda	include/background.h	/^  short has_lambda;    \/**< presence of cosmological constant? *\/$/;"	m	struct:background
has_lensed_cls	include/lensing.h	/^  short has_lensed_cls; \/**< do we need to compute lensed \\f$ C_l\\f$'s at all ? *\/$/;"	m	struct:lensing
has_ll	include/lensing.h	/^  int has_ll; \/**< do we want \\f$ C_l^{ll}\\f$? (l = lensing potential) *\/$/;"	m	struct:lensing
has_ll	include/spectra.h	/^  int has_ll; \/**< do we want \\f$ C_l^{ll}\\f$? (l = galaxy lensing potential) *\/$/;"	m	struct:spectra
has_lss	include/perturbations.h	/^  short has_lss; \/**< do we need LSS-related sources (lensing potential, ...) ? *\/$/;"	m	struct:perturbs
has_metricpotential_transfers	include/perturbations.h	/^  short has_metricpotential_transfers;\/**< do we need to output individual transfer functions for scalar metric perturbations? *\/$/;"	m	struct:perturbs
has_nc_density	include/perturbations.h	/^  short has_nc_density;  \/**< in dCl, do we want density terms ? *\/$/;"	m	struct:perturbs
has_nc_gr	include/perturbations.h	/^  short has_nc_gr;       \/**< in dCl, do we want gravity terms ? *\/$/;"	m	struct:perturbs
has_nc_lens	include/perturbations.h	/^  short has_nc_lens;     \/**< in dCl, do we want lensing terms ? *\/$/;"	m	struct:perturbs
has_nc_rsd	include/perturbations.h	/^  short has_nc_rsd;      \/**< in dCl, do we want redshift space distortion terms ? *\/$/;"	m	struct:perturbs
has_ncdm	include/background.h	/^  short has_ncdm;      \/**< presence of non-cold dark matter? *\/$/;"	m	struct:background
has_nid	include/perturbations.h	/^  short has_nid;     \/**< do we need isocurvature nid mode? *\/$/;"	m	struct:perturbs
has_niv	include/perturbations.h	/^  short has_niv;     \/**< do we need isocurvature niv mode? *\/$/;"	m	struct:perturbs
has_nl_corrections_based_on_delta_m	include/perturbations.h	/^  short has_nl_corrections_based_on_delta_m;  \/**< do we want to compute non-linear corrections with an algorithm relying on delta_m (like halofit)? *\/$/;"	m	struct:perturbs
has_nz_analytic	include/transfer.h	/^  short has_nz_analytic; \/**< Use analytic form for dN\/dz (selection function) distribution? *\/$/;"	m	struct:transfers
has_nz_evo_analytic	include/transfer.h	/^  short has_nz_evo_analytic;  \/**< Use analytic form for dN\/dz (evolution function) distribution? *\/$/;"	m	struct:transfers
has_nz_evo_file	include/transfer.h	/^  short has_nz_evo_file;      \/**< Has dN\/dz (evolution function) input file? *\/$/;"	m	struct:transfers
has_nz_file	include/transfer.h	/^  short has_nz_file;     \/**< Has dN\/dz (selection function) input file? *\/$/;"	m	struct:transfers
has_on_the_spot	hyrec/history.h	/^   short has_on_the_spot; \/** do we want to use the on-the-spot approximation? *\/$/;"	m	struct:__anon30
has_on_the_spot	include/thermodynamics.h	/^  short has_on_the_spot; \/** flag to specify if we want to use the on-the-spot approximation **\/$/;"	m	struct:thermo
has_on_the_spot	include/thermodynamics.h	/^  short has_on_the_spot; \/**< flag to specify if we want to use the on-the-spot approximation **\/$/;"	m	struct:recombination
has_pattern	include/evolver_ndf15.h	/^	int has_pattern;$/;"	m	struct:jacobian
has_pd	include/spectra.h	/^  int has_pd; \/**< do we want \\f$ C_l^{\\phi d}\\f$? *\/$/;"	m	struct:spectra
has_perturbations	include/perturbations.h	/^  short has_perturbations; \/**< do we need to compute perturbations at all ? *\/$/;"	m	struct:perturbs
has_perturbed_recombination	include/perturbations.h	/^  short has_perturbed_recombination;$/;"	m	struct:perturbs
has_pk_matter	include/perturbations.h	/^  short has_pk_matter;                \/**< do we need matter Fourier spectrum? *\/$/;"	m	struct:perturbs
has_pp	include/lensing.h	/^  int has_pp; \/**< do we want \\f$ C_l^{\\phi\\phi}\\f$? (\\f$ \\phi \\f$ = CMB lensing potential) *\/$/;"	m	struct:lensing
has_pp	include/spectra.h	/^  int has_pp; \/**< do we want \\f$ C_l^{\\phi\\phi}\\f$? (\\f$ \\phi \\f$ = CMB lensing potential) *\/$/;"	m	struct:spectra
has_scalars	include/perturbations.h	/^  short has_scalars; \/**< do we need scalars? *\/$/;"	m	struct:perturbs
has_scf	include/background.h	/^  short has_scf;       \/**< presence of a scalar field? *\/$/;"	m	struct:background
has_source_delta_b	include/perturbations.h	/^  short has_source_delta_b;    \/**< do we need source for delta of baryons? *\/$/;"	m	struct:perturbs
has_source_delta_cdm	include/perturbations.h	/^  short has_source_delta_cdm;  \/**< do we need source for delta of cold dark matter? *\/$/;"	m	struct:perturbs
has_source_delta_dcdm	include/perturbations.h	/^  short has_source_delta_dcdm; \/**< do we need source for delta of DCDM? *\/$/;"	m	struct:perturbs
has_source_delta_dr	include/perturbations.h	/^  short has_source_delta_dr; \/**< do we need source for delta of decay radiation? *\/$/;"	m	struct:perturbs
has_source_delta_fld	include/perturbations.h	/^  short has_source_delta_fld;  \/**< do we need source for delta of dark energy? *\/$/;"	m	struct:perturbs
has_source_delta_g	include/perturbations.h	/^  short has_source_delta_g;    \/**< do we need source for delta of gammas? *\/$/;"	m	struct:perturbs
has_source_delta_m	include/perturbations.h	/^  short has_source_delta_m;   \/**< do we need source for delta of total matter? *\/$/;"	m	struct:perturbs
has_source_delta_ncdm	include/perturbations.h	/^  short has_source_delta_ncdm; \/**< do we need source for delta of all non-cold dark matter species (e.g. massive neutrinos)? *\/$/;"	m	struct:perturbs
has_source_delta_scf	include/perturbations.h	/^  short has_source_delta_scf;  \/**< do we need source for delta from scalar field? *\/$/;"	m	struct:perturbs
has_source_delta_ur	include/perturbations.h	/^  short has_source_delta_ur; \/**< do we need source for delta of ultra-relativistic neutrinos\/relics? *\/$/;"	m	struct:perturbs
has_source_eta	include/perturbations.h	/^  short has_source_eta;          \/**< do we need source for metric fluctuation eta? *\/$/;"	m	struct:perturbs
has_source_eta_prime	include/perturbations.h	/^  short has_source_eta_prime;    \/**< do we need source for metric fluctuation eta'? *\/$/;"	m	struct:perturbs
has_source_h	include/perturbations.h	/^  short has_source_h;            \/**< do we need source for metric fluctuation h? *\/$/;"	m	struct:perturbs
has_source_h_prime	include/perturbations.h	/^  short has_source_h_prime;      \/**< do we need source for metric fluctuation h'? *\/$/;"	m	struct:perturbs
has_source_p	include/perturbations.h	/^  short has_source_p;  \/**< do we need source for CMB polarization? *\/$/;"	m	struct:perturbs
has_source_phi	include/perturbations.h	/^  short has_source_phi;          \/**< do we need source for metric fluctuation phi? *\/$/;"	m	struct:perturbs
has_source_phi_plus_psi	include/perturbations.h	/^  short has_source_phi_plus_psi; \/**< do we need source for metric fluctuation (phi+psi)? *\/$/;"	m	struct:perturbs
has_source_phi_prime	include/perturbations.h	/^  short has_source_phi_prime;    \/**< do we need source for metric fluctuation phi'? *\/$/;"	m	struct:perturbs
has_source_psi	include/perturbations.h	/^  short has_source_psi;          \/**< do we need source for metric fluctuation psi? *\/$/;"	m	struct:perturbs
has_source_t	include/perturbations.h	/^  short has_source_t;  \/**< do we need source for CMB temperature? *\/$/;"	m	struct:perturbs
has_source_theta_b	include/perturbations.h	/^  short has_source_theta_b;    \/**< do we need source for theta of baryons? *\/$/;"	m	struct:perturbs
has_source_theta_cdm	include/perturbations.h	/^  short has_source_theta_cdm;  \/**< do we need source for theta of cold dark matter? *\/$/;"	m	struct:perturbs
has_source_theta_dcdm	include/perturbations.h	/^  short has_source_theta_dcdm; \/**< do we need source for theta of DCDM? *\/$/;"	m	struct:perturbs
has_source_theta_dr	include/perturbations.h	/^  short has_source_theta_dr; \/**< do we need source for theta of ultra-relativistic neutrinos\/relics? *\/$/;"	m	struct:perturbs
has_source_theta_fld	include/perturbations.h	/^  short has_source_theta_fld;  \/**< do we need source for theta of dark energy? *\/$/;"	m	struct:perturbs
has_source_theta_g	include/perturbations.h	/^  short has_source_theta_g;    \/**< do we need source for theta of gammas? *\/$/;"	m	struct:perturbs
has_source_theta_m	include/perturbations.h	/^  short has_source_theta_m;    \/**< do we need source for theta of total matter? *\/$/;"	m	struct:perturbs
has_source_theta_ncdm	include/perturbations.h	/^  short has_source_theta_ncdm; \/**< do we need source for theta of all non-cold dark matter species (e.g. massive neutrinos)? *\/$/;"	m	struct:perturbs
has_source_theta_scf	include/perturbations.h	/^  short has_source_theta_scf;  \/**< do we need source for theta of scalar field? *\/$/;"	m	struct:perturbs
has_source_theta_ur	include/perturbations.h	/^  short has_source_theta_ur; \/**< do we need source for theta of ultra-relativistic neutrinos\/relics? *\/$/;"	m	struct:perturbs
has_td	include/lensing.h	/^  int has_td; \/**< do we want \\f$ C_l^{Td}\\f$? *\/$/;"	m	struct:lensing
has_td	include/spectra.h	/^  int has_td; \/**< do we want \\f$ C_l^{Td}\\f$? *\/$/;"	m	struct:spectra
has_te	include/lensing.h	/^  int has_te; \/**< do we want lensed \\f$ C_l^{TE}\\f$? *\/$/;"	m	struct:lensing
has_te	include/spectra.h	/^  int has_te; \/**< do we want \\f$ C_l^{TE}\\f$? *\/$/;"	m	struct:spectra
has_tensors	include/perturbations.h	/^  short has_tensors; \/**< do we need tensors? *\/$/;"	m	struct:perturbs
has_tl	include/lensing.h	/^  int has_tl; \/**< do we want \\f$ C_l^{Tl}\\f$? *\/$/;"	m	struct:lensing
has_tl	include/spectra.h	/^  int has_tl; \/**< do we want \\f$ C_l^{Tl}\\f$? *\/$/;"	m	struct:spectra
has_tp	include/lensing.h	/^  int has_tp; \/**< do we want \\f$ C_l^{T\\phi}\\f$? *\/$/;"	m	struct:lensing
has_tp	include/spectra.h	/^  int has_tp; \/**< do we want \\f$ C_l^{T\\phi}\\f$? *\/$/;"	m	struct:spectra
has_tt	include/lensing.h	/^  int has_tt; \/**< do we want lensed \\f$ C_l^{TT}\\f$? (T = temperature) *\/$/;"	m	struct:lensing
has_tt	include/spectra.h	/^  int has_tt; \/**< do we want \\f$ C_l^{TT}\\f$? (T = temperature) *\/$/;"	m	struct:spectra
has_ur	include/background.h	/^  short has_ur;        \/**< presence of ultra-relativistic neutrinos\/relics? *\/$/;"	m	struct:background
has_vectors	include/perturbations.h	/^  short has_vectors; \/**< do we need vectors? *\/$/;"	m	struct:perturbs
has_velocity_transfers	include/perturbations.h	/^  short has_velocity_transfers;       \/**< do we need to output individual matter velocity transfer functions? *\/$/;"	m	struct:perturbs
head	python/classy.c	/^  __Pyx_BufFmt_StackElem* head;$/;"	m	struct:__anon5	file:
helium_fullreio_redshift	include/thermodynamics.h	/^  double helium_fullreio_redshift; \/**< redshift for of helium reionization *\/$/;"	m	struct:thermo
helium_fullreio_width	include/thermodynamics.h	/^  double helium_fullreio_width; \/**< width of helium reionization *\/$/;"	m	struct:thermo
higgs_inflation	include/primordial.h	/^  higgs_inflation$/;"	e	enum:potential_shape
hyper_flat_approximation_nu	include/common.h	/^  double hyper_flat_approximation_nu;  \/**< value of nu below which the flat approximation is used to compute Bessel function *\/$/;"	m	struct:precision
hyper_nu_sampling_step	include/common.h	/^  double hyper_nu_sampling_step;  \/**< open\/closed cases: value of nu at which sampling changes  *\/$/;"	m	struct:precision
hyper_phi_min_abs	include/common.h	/^  double hyper_phi_min_abs;  \/**< small value of Bessel function used in calculation of first point x (\\f$ \\Phi_l^{\\nu}(x) \\f$ equals hyper_phi_min_abs) *\/$/;"	m	struct:precision
hyper_sampling_curved_high_nu	include/common.h	/^  double hyper_sampling_curved_high_nu; \/**< open\/closed cases: number of sampled points x per approximate wavelength \\f$ 2\\pi\/\\nu\\f$, when \\f$ \\nu \\f$ greater than hyper_nu_sampling_step *\/$/;"	m	struct:precision
hyper_sampling_curved_low_nu	include/common.h	/^  double hyper_sampling_curved_low_nu;  \/**< open\/closed cases: number of sampled points x per approximate wavelength \\f$ 2\\pi\/\\nu\\f$, when \\f$ \\nu \\f$ smaller than hyper_nu_sampling_step *\/$/;"	m	struct:precision
hyper_sampling_flat	include/common.h	/^  double hyper_sampling_flat;  \/**< flat case: number of sampled points x per approximate wavelength \\f$ 2\\pi \\f$*\/$/;"	m	struct:precision
hyper_x_min	include/common.h	/^  double hyper_x_min;  \/**< flat case: lower bound on the smallest value of x at which we sample \\f$ \\Phi_l^{\\nu}(x)\\f$ or \\f$ j_l(x)\\f$ *\/$/;"	m	struct:precision
hyper_x_tol	include/common.h	/^  double hyper_x_tol;  \/**< tolerance parameter used to determine first value of x *\/$/;"	m	struct:precision
hyperspherical_HIS_create	tools/hyperspherical.c	/^int hyperspherical_HIS_create(int K,$/;"	f
hyperspherical_HIS_free	tools/hyperspherical.c	/^int hyperspherical_HIS_free(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_HIS_size	tools/hyperspherical.c	/^size_t hyperspherical_HIS_size(int nl, int nx){$/;"	f
hyperspherical_Hermite3_interpolation_vector_Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite3_interpolation_vector_Phid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_Phid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite3_interpolation_vector_PhidPhi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_PhidPhi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite3_interpolation_vector_PhidPhid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_PhidPhid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite3_interpolation_vector_d2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_d2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite3_interpolation_vector_dPhi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_dPhi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite3_interpolation_vector_dPhid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite3_interpolation_vector_dPhid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_Phid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_Phid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_PhidPhi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_PhidPhi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_PhidPhid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_PhidPhid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_d2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_d2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_dPhi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_dPhi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite4_interpolation_vector_dPhid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite4_interpolation_vector_dPhid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_Phid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_Phid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_PhidPhi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_PhidPhi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_PhidPhid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_PhidPhid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_d2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_d2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_dPhi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_dPhi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite6_interpolation_vector_dPhid2Phi	tools/hyperspherical.c	/^int hyperspherical_Hermite6_interpolation_vector_dPhid2Phi(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_Hermite_interpolation_vector	tools/hyperspherical.c	/^int hyperspherical_Hermite_interpolation_vector(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_WKB	tools/hyperspherical.c	/^int hyperspherical_WKB(int K,int l,double beta,double y, double *Phi){$/;"	f
hyperspherical_WKB_vec	tools/hyperspherical.c	/^ int hyperspherical_WKB_vec(int l,$/;"	f
hyperspherical_backwards_recurrence	tools/hyperspherical.c	/^int hyperspherical_backwards_recurrence(int K,$/;"	f
hyperspherical_backwards_recurrence_chunk	tools/hyperspherical.c	/^int hyperspherical_backwards_recurrence_chunk(int K,$/;"	f
hyperspherical_forwards_recurrence	tools/hyperspherical.c	/^int hyperspherical_forwards_recurrence(int K,$/;"	f
hyperspherical_forwards_recurrence_chunk	tools/hyperspherical.c	/^int hyperspherical_forwards_recurrence_chunk(int K,$/;"	f
hyperspherical_get_xmin	tools/hyperspherical.c	/^int hyperspherical_get_xmin(HyperInterpStruct *pHIS,$/;"	f
hyperspherical_get_xmin_from_Airy	tools/hyperspherical.c	/^int hyperspherical_get_xmin_from_Airy(int K,$/;"	f
hyperspherical_get_xmin_from_approx	tools/hyperspherical.c	/^int hyperspherical_get_xmin_from_approx(int K,$/;"	f
hyperspherical_update_pointers	tools/hyperspherical.c	/^int hyperspherical_update_pointers(HyperInterpStruct *pHIS_local,$/;"	f
hyrec	include/thermodynamics.h	/^  hyrec$/;"	e	enum:recombination_algorithm
hyrec_Alpha_inf_file	include/common.h	/^  FileName hyrec_Alpha_inf_file;$/;"	m	struct:precision
hyrec_R_inf_file	include/common.h	/^  FileName hyrec_R_inf_file;$/;"	m	struct:precision
hyrec_two_photon_tables_file	include/common.h	/^  FileName hyrec_two_photon_tables_file;$/;"	m	struct:precision
ic_ic_size	include/primordial.h	/^  int * ic_ic_size; \/**< number of ordered pairs of (index_ic1, index_ic2); this number is just N(N+1)\/2  where N = ic_size[index_md] *\/$/;"	m	struct:primordial
ic_ic_size	include/spectra.h	/^  int * ic_ic_size;      \/**< for a given mode, ic_ic_size[index_md] = number of pairs of (index_ic1, index_ic2) with index_ic2 >= index_ic1; this number is just N(N+1)\/2  where N = ic_size[index_md] *\/$/;"	m	struct:spectra
ic_size	include/perturbations.h	/^  int * ic_size;       \/**< for a given mode, ic_size[index_md] = number of initial conditions included in computation *\/$/;"	m	struct:perturbs
ic_size	include/primordial.h	/^  int * ic_size;    \/**< for a given mode, ic_size[index_md] = number of initial conditions included in computation *\/$/;"	m	struct:primordial
ic_size	include/spectra.h	/^  int * ic_size;         \/**< for a given mode, ic_size[index_md] = number of initial conditions included in computation *\/$/;"	m	struct:spectra
imag	python/classy.c	/^    typedef struct { double real, imag; } __pyx_t_double_complex;$/;"	m	struct:__anon7	file:
imag	python/classy.c	/^    typedef struct { float real, imag; } __pyx_t_float_complex;$/;"	m	struct:__anon6	file:
in_bg_size	include/primordial.h	/^  int in_bg_size;       \/**< size of vector of background quantities only *\/$/;"	m	struct:primordial
in_size	include/primordial.h	/^  int in_size;          \/**< full size of vector *\/$/;"	m	struct:primordial
index_ap_ncdmfa	include/perturbations.h	/^  int index_ap_ncdmfa; \/**< index for ncdm fluid approximation *\/$/;"	m	struct:perturb_workspace
index_ap_rsa	include/perturbations.h	/^  int index_ap_rsa; \/**< index for radiation streaming approximation *\/$/;"	m	struct:perturb_workspace
index_ap_tca	include/perturbations.h	/^  int index_ap_tca; \/**< index for tight-coupling approximation *\/$/;"	m	struct:perturb_workspace
index_ap_ufa	include/perturbations.h	/^  int index_ap_ufa; \/**< index for ur fluid approximation *\/$/;"	m	struct:perturb_workspace
index_bg_D	include/background.h	/^  int index_bg_D;             \/**< scale independent growth factor D(a) for CDM perturbations *\/$/;"	m	struct:background
index_bg_H	include/background.h	/^  int index_bg_H;             \/**< Hubble parameter in \\f$Mpc^{-1}\\f$ *\/$/;"	m	struct:background
index_bg_H_prime	include/background.h	/^  int index_bg_H_prime;       \/**< its derivative w.r.t. conformal time *\/$/;"	m	struct:background
index_bg_Omega_m	include/background.h	/^  int index_bg_Omega_m;       \/**< non-relativistic density fraction (\\f$ \\Omega_b + \\Omega_cdm + \\Omega_{\\nu nr} \\f$) *\/$/;"	m	struct:background
index_bg_Omega_r	include/background.h	/^  int index_bg_Omega_r;       \/**< relativistic density fraction (\\f$ \\Omega_{\\gamma} + \\Omega_{\\nu r} \\f$) *\/$/;"	m	struct:background
index_bg_V_scf	include/background.h	/^  int index_bg_V_scf;         \/**< scalar field potential V *\/$/;"	m	struct:background
index_bg_a	include/background.h	/^  int index_bg_a;             \/**< scale factor *\/$/;"	m	struct:background
index_bg_ang_distance	include/background.h	/^  int index_bg_ang_distance;  \/**< angular diameter distance in Mpc *\/$/;"	m	struct:background
index_bg_conf_distance	include/background.h	/^  int index_bg_conf_distance; \/**< conformal distance (from us) in Mpc *\/$/;"	m	struct:background
index_bg_dV_scf	include/background.h	/^  int index_bg_dV_scf;        \/**< scalar field potential derivative V' *\/$/;"	m	struct:background
index_bg_ddV_scf	include/background.h	/^  int index_bg_ddV_scf;       \/**< scalar field potential second derivative V'' *\/$/;"	m	struct:background
index_bg_f	include/background.h	/^  int index_bg_f;             \/**< corresponding velocity growth factor [dlnD]\/[dln a] *\/$/;"	m	struct:background
index_bg_lum_distance	include/background.h	/^  int index_bg_lum_distance;  \/**< luminosity distance in Mpc *\/$/;"	m	struct:background
index_bg_p_ncdm1	include/background.h	/^  int index_bg_p_ncdm1;       \/**< pressure of first ncdm species (others contiguous) *\/$/;"	m	struct:background
index_bg_p_scf	include/background.h	/^  int index_bg_p_scf;         \/**< scalar field pressure *\/$/;"	m	struct:background
index_bg_phi_prime_scf	include/background.h	/^  int index_bg_phi_prime_scf; \/**< scalar field derivative wrt conformal time *\/$/;"	m	struct:background
index_bg_phi_scf	include/background.h	/^  int index_bg_phi_scf;       \/**< scalar field value *\/$/;"	m	struct:background
index_bg_pseudo_p_ncdm1	include/background.h	/^  int index_bg_pseudo_p_ncdm1;\/**< another statistical momentum useful in ncdma approximation *\/$/;"	m	struct:background
index_bg_rho_b	include/background.h	/^  int index_bg_rho_b;         \/**< baryon density *\/$/;"	m	struct:background
index_bg_rho_cdm	include/background.h	/^  int index_bg_rho_cdm;       \/**< cdm density *\/$/;"	m	struct:background
index_bg_rho_crit	include/background.h	/^  int index_bg_rho_crit;      \/**< critical density *\/$/;"	m	struct:background
index_bg_rho_dcdm	include/background.h	/^  int index_bg_rho_dcdm;      \/**< dcdm density *\/$/;"	m	struct:background
index_bg_rho_dr	include/background.h	/^  int index_bg_rho_dr;        \/**< dr density *\/$/;"	m	struct:background
index_bg_rho_fld	include/background.h	/^  int index_bg_rho_fld;       \/**< fluid density *\/$/;"	m	struct:background
index_bg_rho_g	include/background.h	/^  int index_bg_rho_g;         \/**< photon density *\/$/;"	m	struct:background
index_bg_rho_lambda	include/background.h	/^  int index_bg_rho_lambda;    \/**< cosmological constant density *\/$/;"	m	struct:background
index_bg_rho_ncdm1	include/background.h	/^  int index_bg_rho_ncdm1;     \/**< density of first ncdm species (others contiguous) *\/$/;"	m	struct:background
index_bg_rho_scf	include/background.h	/^  int index_bg_rho_scf;       \/**< scalar field energy density *\/$/;"	m	struct:background
index_bg_rho_ur	include/background.h	/^  int index_bg_rho_ur;        \/**< relativistic neutrinos\/relics density *\/$/;"	m	struct:background
index_bg_rs	include/background.h	/^  int index_bg_rs;            \/**< comoving sound horizon in Mpc *\/$/;"	m	struct:background
index_bg_time	include/background.h	/^  int index_bg_time;          \/**< proper (cosmological) time in Mpc *\/$/;"	m	struct:background
index_bg_w_fld	include/background.h	/^  int index_bg_w_fld;         \/**< fluid equation of state *\/$/;"	m	struct:background
index_bi_D	include/background.h	/^  int index_bi_D;       \/**< {C} scale independent growth factor D(a) for CDM perturbations. *\/$/;"	m	struct:background
index_bi_D_prime	include/background.h	/^  int index_bi_D_prime; \/**< {C} D satisfies \\f$ [D''(\\tau)=-aHD'(\\tau)+3\/2 a^2 \\rho_M D(\\tau) \\f$ *\/$/;"	m	struct:background
index_bi_a	include/background.h	/^  int index_bi_a;       \/**< {B} scale factor *\/$/;"	m	struct:background
index_bi_phi_prime_scf	include/background.h	/^  int index_bi_phi_prime_scf; \/**< {B} scalar field derivative wrt conformal time *\/$/;"	m	struct:background
index_bi_phi_scf	include/background.h	/^  int index_bi_phi_scf;       \/**< {B} scalar field value *\/$/;"	m	struct:background
index_bi_rho_dcdm	include/background.h	/^  int index_bi_rho_dcdm;\/**< {B} dcdm density *\/$/;"	m	struct:background
index_bi_rho_dr	include/background.h	/^  int index_bi_rho_dr;  \/**< {B} dr density *\/$/;"	m	struct:background
index_bi_rho_fld	include/background.h	/^  int index_bi_rho_fld; \/**< {B} fluid density *\/$/;"	m	struct:background
index_bi_rs	include/background.h	/^  int index_bi_rs;      \/**< {C} sound horizon *\/$/;"	m	struct:background
index_bi_tau	include/background.h	/^  int index_bi_tau;     \/**< {C} conformal time in Mpc *\/$/;"	m	struct:background
index_bi_time	include/background.h	/^  int index_bi_time;    \/**< {C} proper (cosmological) time in Mpc *\/$/;"	m	struct:background
index_ct_bb	include/spectra.h	/^  int index_ct_bb; \/**< index for type \\f$ C_l^{BB} \\f$*\/$/;"	m	struct:spectra
index_ct_dd	include/spectra.h	/^  int index_ct_dd; \/**< first index for type \\f$ C_l^{dd} \\f$((d_size*d_size-(d_size-non_diag)*(d_size-non_diag-1)\/2) values) *\/$/;"	m	struct:spectra
index_ct_dl	include/spectra.h	/^  int index_ct_dl; \/**< first index for type \\f$ C_l^{dl} \\f$(d_size values) *\/$/;"	m	struct:spectra
index_ct_ee	include/spectra.h	/^  int index_ct_ee; \/**< index for type \\f$ C_l^{EE} \\f$*\/$/;"	m	struct:spectra
index_ct_ep	include/spectra.h	/^  int index_ct_ep; \/**< index for type \\f$ C_l^{E\\phi} \\f$*\/$/;"	m	struct:spectra
index_ct_ll	include/spectra.h	/^  int index_ct_ll; \/**< first index for type \\f$ C_l^{ll} \\f$((d_size*d_size-(d_size-non_diag)*(d_size-non_diag-1)\/2) values) *\/$/;"	m	struct:spectra
index_ct_pd	include/spectra.h	/^  int index_ct_pd; \/**< first index for type \\f$ C_l^{pd} \\f$(d_size values) *\/$/;"	m	struct:spectra
index_ct_pp	include/spectra.h	/^  int index_ct_pp; \/**< index for type \\f$ C_l^{\\phi\\phi} \\f$*\/$/;"	m	struct:spectra
index_ct_td	include/spectra.h	/^  int index_ct_td; \/**< first index for type \\f$ C_l^{Td} \\f$(d_size values) *\/$/;"	m	struct:spectra
index_ct_te	include/spectra.h	/^  int index_ct_te; \/**< index for type \\f$ C_l^{TE} \\f$*\/$/;"	m	struct:spectra
index_ct_tl	include/spectra.h	/^  int index_ct_tl; \/**< first index for type \\f$ C_l^{Tl} \\f$(d_size values) *\/$/;"	m	struct:spectra
index_ct_tp	include/spectra.h	/^  int index_ct_tp; \/**< index for type \\f$ C_l^{T\\phi} \\f$*\/$/;"	m	struct:spectra
index_ct_tt	include/spectra.h	/^  int index_ct_tt; \/**< index for type \\f$ C_l^{TT} \\f$*\/$/;"	m	struct:spectra
index_helium_fullreio_fraction	include/thermodynamics.h	/^  int index_helium_fullreio_fraction; \/**< helium full reionization fraction inferred from primordial helium fraction *\/$/;"	m	struct:reionization
index_helium_fullreio_redshift	include/thermodynamics.h	/^  int index_helium_fullreio_redshift; \/**< helium full reionization redshift *\/$/;"	m	struct:reionization
index_helium_fullreio_width	include/thermodynamics.h	/^  int index_helium_fullreio_width;    \/**< a width defining the duration of helium full reionization in the reio_camb scheme *\/$/;"	m	struct:reionization
index_ic	include/perturbations.h	/^  int index_ic;			          \/**< index of initial condition (adiabatic\/isocurvature(s)\/...) *\/$/;"	m	struct:perturb_parameters_and_workspace
index_ic_ad	include/perturbations.h	/^  int index_ic_ad; \/**< index value for adiabatic *\/$/;"	m	struct:perturbs
index_ic_bi	include/perturbations.h	/^  int index_ic_bi; \/**< index value for baryon isocurvature *\/$/;"	m	struct:perturbs
index_ic_cdi	include/perturbations.h	/^  int index_ic_cdi; \/**< index value for CDM isocurvature *\/$/;"	m	struct:perturbs
index_ic_nid	include/perturbations.h	/^  int index_ic_nid; \/**< index value for neutrino density isocurvature *\/$/;"	m	struct:perturbs
index_ic_niv	include/perturbations.h	/^  int index_ic_niv; \/**< index value for neutrino velocity isocurvature *\/$/;"	m	struct:perturbs
index_ic_ten	include/perturbations.h	/^  int index_ic_ten; \/**< index value for unique possibility for tensors *\/$/;"	m	struct:perturbs
index_ikout	include/perturbations.h	/^  int index_ikout;            \/**< index for output k value (when k_output_values is set) *\/$/;"	m	struct:perturb_workspace
index_in_a	include/primordial.h	/^  int index_in_a;       \/**< scale factor *\/$/;"	m	struct:primordial
index_in_ah_im	include/primordial.h	/^  int index_in_ah_im;   \/**< tensor perturbation (imaginary part) *\/$/;"	m	struct:primordial
index_in_ah_re	include/primordial.h	/^  int index_in_ah_re;   \/**< tensor perturbation (real part) *\/$/;"	m	struct:primordial
index_in_dah_im	include/primordial.h	/^  int index_in_dah_im;  \/**< tensor perturbation (imaginary part, time derivative) *\/$/;"	m	struct:primordial
index_in_dah_re	include/primordial.h	/^  int index_in_dah_re;  \/**< tensor perturbation (real part, time derivative) *\/$/;"	m	struct:primordial
index_in_dksi_im	include/primordial.h	/^  int index_in_dksi_im; \/**< Mukhanov variable (imaginary part, time derivative) *\/$/;"	m	struct:primordial
index_in_dksi_re	include/primordial.h	/^  int index_in_dksi_re; \/**< Mukhanov variable (real part, time derivative) *\/$/;"	m	struct:primordial
index_in_dphi	include/primordial.h	/^  int index_in_dphi;    \/**< its time derivative *\/$/;"	m	struct:primordial
index_in_ksi_im	include/primordial.h	/^  int index_in_ksi_im;  \/**< Mukhanov variable (imaginary part) *\/$/;"	m	struct:primordial
index_in_ksi_re	include/primordial.h	/^  int index_in_ksi_re;  \/**< Mukhanov variable (real part) *\/$/;"	m	struct:primordial
index_in_phi	include/primordial.h	/^  int index_in_phi;     \/**< inflaton vev *\/$/;"	m	struct:primordial
index_k	include/perturbations.h	/^  int index_k;			          \/**< index of wavenumber *\/$/;"	m	struct:perturb_parameters_and_workspace
index_k_output_values	include/perturbations.h	/^  int *index_k_output_values; \/**< List of indices corresponding to k-values close to k_output_values for each mode. [index_md*k_output_values_num+ik]*\/$/;"	m	struct:perturbs
index_lt_bb	include/lensing.h	/^  int index_lt_bb; \/**< index for type \\f$ C_l^{BB} \\f$*\/$/;"	m	struct:lensing
index_lt_dd	include/lensing.h	/^  int index_lt_dd; \/**< index for type \\f$ C_l^{dd} \\f$*\/$/;"	m	struct:lensing
index_lt_ee	include/lensing.h	/^  int index_lt_ee; \/**< index for type \\f$ C_l^{EE} \\f$*\/$/;"	m	struct:lensing
index_lt_ll	include/lensing.h	/^  int index_lt_ll; \/**< index for type \\f$ C_l^{dd} \\f$*\/$/;"	m	struct:lensing
index_lt_pp	include/lensing.h	/^  int index_lt_pp; \/**< index for type \\f$ C_l^{\\phi\\phi} \\f$*\/$/;"	m	struct:lensing
index_lt_td	include/lensing.h	/^  int index_lt_td; \/**< index for type \\f$ C_l^{Td} \\f$*\/$/;"	m	struct:lensing
index_lt_te	include/lensing.h	/^  int index_lt_te; \/**< index for type \\f$ C_l^{TE} \\f$*\/$/;"	m	struct:lensing
index_lt_tl	include/lensing.h	/^  int index_lt_tl; \/**< index for type \\f$ C_l^{Td} \\f$*\/$/;"	m	struct:lensing
index_lt_tp	include/lensing.h	/^  int index_lt_tp; \/**< index for type \\f$ C_l^{T\\phi} \\f$*\/$/;"	m	struct:lensing
index_lt_tt	include/lensing.h	/^  int index_lt_tt; \/**< index for type \\f$ C_l^{TT} \\f$*\/$/;"	m	struct:lensing
index_md	include/perturbations.h	/^  int index_md;                   \/**< index of mode (scalar\/...\/vector\/tensor) *\/$/;"	m	struct:perturb_parameters_and_workspace
index_md_scalars	include/perturbations.h	/^  int index_md_scalars; \/**< index value for scalars *\/$/;"	m	struct:perturbs
index_md_scalars	include/spectra.h	/^  int index_md_scalars; \/**< index for scalar modes *\/$/;"	m	struct:spectra
index_md_tensors	include/perturbations.h	/^  int index_md_tensors; \/**< index value for tensors *\/$/;"	m	struct:perturbs
index_md_vectors	include/perturbations.h	/^  int index_md_vectors; \/**< index value for vectors *\/$/;"	m	struct:perturbs
index_mt_V_prime	include/perturbations.h	/^  int index_mt_V_prime;       \/**< derivative of Newtonian gauge vector metric perturbation V *\/$/;"	m	struct:perturb_workspace
index_mt_alpha	include/perturbations.h	/^  int index_mt_alpha;         \/**< \\f$ \\alpha = (h' + 6 \\eta') \/ (2 k^2) \\f$ in synchronous gauge *\/$/;"	m	struct:perturb_workspace
index_mt_alpha_prime	include/perturbations.h	/^  int index_mt_alpha_prime;   \/**< \\f$ \\alpha'\\f$ wrt conf. time) in synchronous gauge *\/$/;"	m	struct:perturb_workspace
index_mt_eta_prime	include/perturbations.h	/^  int index_mt_eta_prime;     \/**< eta' (wrt conf. time) in synchronous gauge *\/$/;"	m	struct:perturb_workspace
index_mt_gw_prime_prime	include/perturbations.h	/^  int index_mt_gw_prime_prime;\/**< second derivative wrt conformal time of gravitational wave field, often called h *\/$/;"	m	struct:perturb_workspace
index_mt_h_prime	include/perturbations.h	/^  int index_mt_h_prime;       \/**< h' (wrt conf. time) in synchronous gauge *\/$/;"	m	struct:perturb_workspace
index_mt_h_prime_prime	include/perturbations.h	/^  int index_mt_h_prime_prime; \/**< h'' (wrt conf. time) in synchronous gauge *\/$/;"	m	struct:perturb_workspace
index_mt_hv_prime_prime	include/perturbations.h	/^  int index_mt_hv_prime_prime;\/**< Second derivative of Synchronous gauge vector metric perturbation \\f$ h_v\\f$ *\/$/;"	m	struct:perturb_workspace
index_mt_phi_prime	include/perturbations.h	/^  int index_mt_phi_prime;     \/**< (d phi\/d conf.time) in longitudinal gauge *\/$/;"	m	struct:perturb_workspace
index_mt_psi	include/perturbations.h	/^  int index_mt_psi;           \/**< psi in longitudinal gauge *\/$/;"	m	struct:perturb_workspace
index_pt_F0_dr	include/perturbations.h	/^  int index_pt_F0_dr;$/;"	m	struct:perturb_vector
index_pt_Gamma_fld	include/perturbations.h	/^  int index_pt_Gamma_fld;  \/**< unique dark energy dynamical variable in PPF case *\/$/;"	m	struct:perturb_vector
index_pt_V	include/perturbations.h	/^  int index_pt_V;         \/**< vector metric perturbation V in Newtonian gauge *\/$/;"	m	struct:perturb_vector
index_pt_delta_b	include/perturbations.h	/^  int index_pt_delta_b;   \/**< baryon density *\/$/;"	m	struct:perturb_vector
index_pt_delta_cdm	include/perturbations.h	/^  int index_pt_delta_cdm; \/**< cdm density *\/$/;"	m	struct:perturb_vector
index_pt_delta_dcdm	include/perturbations.h	/^  int index_pt_delta_dcdm; \/**< dcdm density *\/$/;"	m	struct:perturb_vector
index_pt_delta_fld	include/perturbations.h	/^  int index_pt_delta_fld;  \/**< dark energy density in true fluid case *\/$/;"	m	struct:perturb_vector
index_pt_delta_g	include/perturbations.h	/^  int index_pt_delta_g;   \/**< photon density *\/$/;"	m	struct:perturb_vector
index_pt_delta_ur	include/perturbations.h	/^  int index_pt_delta_ur; \/**< density of ultra-relativistic neutrinos\/relics *\/$/;"	m	struct:perturb_vector
index_pt_eta	include/perturbations.h	/^  int index_pt_eta;       \/**< synchronous gauge metric perturbation eta*\/$/;"	m	struct:perturb_vector
index_pt_gw	include/perturbations.h	/^  int index_pt_gw;        \/**< tensor metric perturbation h (gravitational waves) *\/$/;"	m	struct:perturb_vector
index_pt_gwdot	include/perturbations.h	/^  int index_pt_gwdot;     \/**< its time-derivative *\/$/;"	m	struct:perturb_vector
index_pt_hv_prime	include/perturbations.h	/^  int index_pt_hv_prime;  \/**< vector metric perturbation h_v' in synchronous gauge *\/$/;"	m	struct:perturb_vector
index_pt_l3_g	include/perturbations.h	/^  int index_pt_l3_g;      \/**< photon l=3 *\/$/;"	m	struct:perturb_vector
index_pt_l3_ur	include/perturbations.h	/^  int index_pt_l3_ur;    \/**< l=3 of ultra-relativistic neutrinos\/relics *\/$/;"	m	struct:perturb_vector
index_pt_perturbed_recombination_delta_chi	include/perturbations.h	/^  int index_pt_perturbed_recombination_delta_chi;		\/**< Inionization fraction perturbation *\/$/;"	m	struct:perturb_vector
index_pt_perturbed_recombination_delta_temp	include/perturbations.h	/^  int index_pt_perturbed_recombination_delta_temp;		\/**< Gas temperature perturbation *\/$/;"	m	struct:perturb_vector
index_pt_phi	include/perturbations.h	/^  int index_pt_phi;	      \/**< newtonian gauge metric perturbation phi *\/$/;"	m	struct:perturb_vector
index_pt_phi_prime_scf	include/perturbations.h	/^  int index_pt_phi_prime_scf;  \/**< scalar field velocity *\/$/;"	m	struct:perturb_vector
index_pt_phi_scf	include/perturbations.h	/^  int index_pt_phi_scf;  \/**< scalar field density *\/$/;"	m	struct:perturb_vector
index_pt_pol0_g	include/perturbations.h	/^  int index_pt_pol0_g;    \/**< photon polarization, l=0 *\/$/;"	m	struct:perturb_vector
index_pt_pol1_g	include/perturbations.h	/^  int index_pt_pol1_g;    \/**< photon polarization, l=1 *\/$/;"	m	struct:perturb_vector
index_pt_pol2_g	include/perturbations.h	/^  int index_pt_pol2_g;    \/**< photon polarization, l=2 *\/$/;"	m	struct:perturb_vector
index_pt_pol3_g	include/perturbations.h	/^  int index_pt_pol3_g;    \/**< photon polarization, l=3 *\/$/;"	m	struct:perturb_vector
index_pt_psi0_ncdm1	include/perturbations.h	/^  int index_pt_psi0_ncdm1; \/**< first multipole of perturbation of first ncdm species, Psi_0 *\/$/;"	m	struct:perturb_vector
index_pt_shear_g	include/perturbations.h	/^  int index_pt_shear_g;   \/**< photon shear *\/$/;"	m	struct:perturb_vector
index_pt_shear_ur	include/perturbations.h	/^  int index_pt_shear_ur; \/**< shear of ultra-relativistic neutrinos\/relics *\/$/;"	m	struct:perturb_vector
index_pt_theta_b	include/perturbations.h	/^  int index_pt_theta_b;   \/**< baryon velocity *\/$/;"	m	struct:perturb_vector
index_pt_theta_cdm	include/perturbations.h	/^  int index_pt_theta_cdm; \/**< cdm velocity *\/$/;"	m	struct:perturb_vector
index_pt_theta_dcdm	include/perturbations.h	/^  int index_pt_theta_dcdm; \/**< dcdm velocity *\/$/;"	m	struct:perturb_vector
index_pt_theta_fld	include/perturbations.h	/^  int index_pt_theta_fld;  \/**< dark energy velocity in true fluid case *\/$/;"	m	struct:perturb_vector
index_pt_theta_g	include/perturbations.h	/^  int index_pt_theta_g;   \/**< photon velocity *\/$/;"	m	struct:perturb_vector
index_pt_theta_ur	include/perturbations.h	/^  int index_pt_theta_ur; \/**< velocity of ultra-relativistic neutrinos\/relics *\/$/;"	m	struct:perturb_vector
index_q_flat_approximation	include/transfer.h	/^  int index_q_flat_approximation; \/**< index of the first q value using the flat rescaling approximation *\/$/;"	m	struct:transfers
index_re_Tb	include/thermodynamics.h	/^  int index_re_Tb;         \/**< baryon temperature \\f$ T_b \\f$ *\/$/;"	m	struct:recombination
index_re_Tb	include/thermodynamics.h	/^  int index_re_Tb;         \/**< baryon temperature \\f$ T_b \\f$ *\/$/;"	m	struct:reionization
index_re_cb2	include/thermodynamics.h	/^  int index_re_cb2;        \/**< squared baryon sound speed \\f$ c_b^2 \\f$ *\/$/;"	m	struct:recombination
index_re_cb2	include/thermodynamics.h	/^  int index_re_cb2;        \/**< squared baryon sound speed \\f$ c_b^2 \\f$ *\/$/;"	m	struct:reionization
index_re_d3kappadz3	include/thermodynamics.h	/^  int index_re_d3kappadz3; \/**< second derivative of previous quantity with respect to redshift *\/$/;"	m	struct:reionization
index_re_dkappadtau	include/thermodynamics.h	/^  int index_re_dkappadtau; \/**< Thomson scattering rate \\f$ d \\kappa \/ d \\tau \\f$ (units 1\/Mpc) *\/$/;"	m	struct:recombination
index_re_dkappadtau	include/thermodynamics.h	/^  int index_re_dkappadtau; \/**< Thomson scattering rate \\f$ d \\kappa \/ d \\tau\\f$ (units 1\/Mpc) *\/$/;"	m	struct:reionization
index_re_dkappadz	include/thermodynamics.h	/^  int index_re_dkappadz;   \/**< Thomson scattering rate with respect to redshift \\f$ d \\kappa \/ d z\\f$ (units 1\/Mpc) *\/$/;"	m	struct:reionization
index_re_xe	include/thermodynamics.h	/^  int index_re_xe;         \/**< ionization fraction \\f$ x_e \\f$ *\/$/;"	m	struct:recombination
index_re_xe	include/thermodynamics.h	/^  int index_re_xe;         \/**< ionization fraction \\f$ x_e \\f$ *\/$/;"	m	struct:reionization
index_re_z	include/thermodynamics.h	/^  int index_re_z;          \/**< redshift \\f$ z \\f$ *\/$/;"	m	struct:recombination
index_re_z	include/thermodynamics.h	/^  int index_re_z;          \/**< redshift \\f$ z \\f$ *\/$/;"	m	struct:reionization
index_reco_when_reio_start	include/thermodynamics.h	/^  int index_reco_when_reio_start; \/**< index of line in recombination table corresponding to first line of reionization table*\/$/;"	m	struct:reionization
index_reio_exponent	include/thermodynamics.h	/^  int index_reio_exponent;  \/**< an exponent used in the function x_e(z) in the reio_camb scheme *\/$/;"	m	struct:reionization
index_reio_first_xe	include/thermodynamics.h	/^  int index_reio_first_xe; \/**< ionization fraction at redshift first_z (inferred from recombination code) *\/$/;"	m	struct:reionization
index_reio_first_z	include/thermodynamics.h	/^  int index_reio_first_z; \/**< redshift at which we start to impose reionization function *\/$/;"	m	struct:reionization
index_reio_redshift	include/thermodynamics.h	/^  int index_reio_redshift;  \/**< hydrogen reionization redshift *\/$/;"	m	struct:reionization
index_reio_start	include/thermodynamics.h	/^  int index_reio_start;     \/**< redshift above which hydrogen reionization neglected *\/$/;"	m	struct:reionization
index_reio_step_sharpness	include/thermodynamics.h	/^  int index_reio_step_sharpness; \/**< sharpness of tanh jump *\/$/;"	m	struct:reionization
index_reio_width	include/thermodynamics.h	/^  int index_reio_width;     \/**< a width defining the duration of hydrogen reionization in the reio_camb scheme *\/$/;"	m	struct:reionization
index_reio_xe_after	include/thermodynamics.h	/^  int index_reio_xe_after;  \/**< ionization fraction after full reionization *\/$/;"	m	struct:reionization
index_reio_xe_before	include/thermodynamics.h	/^  int index_reio_xe_before; \/**< ionization fraction at redshift 'reio_start' *\/$/;"	m	struct:reionization
index_symmetric_matrix	include/common.h	73;"	d
index_th_Tb	include/thermodynamics.h	/^  int index_th_Tb;            \/**< baryon temperature \\f$ T_b \\f$ *\/$/;"	m	struct:thermo
index_th_cb2	include/thermodynamics.h	/^  int index_th_cb2;           \/**< squared baryon sound speed \\f$ c_b^2 \\f$ *\/$/;"	m	struct:thermo
index_th_dcb2	include/thermodynamics.h	/^  int index_th_dcb2;          \/**< derivative wrt conformal time of squared baryon sound speed \\f$ d [c_b^2] \/ d \\tau \\f$ (only computed if some non-minimal tight-coupling schemes is requested) *\/$/;"	m	struct:thermo
index_th_ddcb2	include/thermodynamics.h	/^  int index_th_ddcb2;         \/**< second derivative wrt conformal time of squared baryon sound speed  \\f$ d^2 [c_b^2] \/ d \\tau^2 \\f$ (only computed if some non0-minimal tight-coupling schemes is requested) *\/$/;"	m	struct:thermo
index_th_dddkappa	include/thermodynamics.h	/^  int index_th_dddkappa;      \/**< scattering rate second derivative \\f$ d^3 \\kappa \/ d \\tau^3 \\f$ *\/$/;"	m	struct:thermo
index_th_ddg	include/thermodynamics.h	/^  int index_th_ddg;           \/**< visibility function second derivative \\f$ (d^2 g \/ d \\tau^2) \\f$ *\/$/;"	m	struct:thermo
index_th_ddkappa	include/thermodynamics.h	/^  int index_th_ddkappa;       \/**< scattering rate derivative \\f$ d^2 \\kappa \/ d \\tau^2 \\f$ *\/$/;"	m	struct:thermo
index_th_dg	include/thermodynamics.h	/^  int index_th_dg;            \/**< visibility function derivative \\f$ (d g \/ d \\tau) \\f$ *\/$/;"	m	struct:thermo
index_th_dkappa	include/thermodynamics.h	/^  int index_th_dkappa;        \/**< Thomson scattering rate \\f$ d \\kappa \/ d \\tau\\f$ (units 1\/Mpc) *\/$/;"	m	struct:thermo
index_th_exp_m_kappa	include/thermodynamics.h	/^  int index_th_exp_m_kappa;  \/**< \\f$ exp^{-\\kappa} \\f$ *\/$/;"	m	struct:thermo
index_th_g	include/thermodynamics.h	/^  int index_th_g;             \/**< visibility function \\f$ g = (d \\kappa \/ d \\tau) * exp^{-\\kappa} \\f$ *\/$/;"	m	struct:thermo
index_th_r_d	include/thermodynamics.h	/^  int index_th_r_d;           \/**< simple analytic approximation to the photon comoving damping scale *\/$/;"	m	struct:thermo
index_th_rate	include/thermodynamics.h	/^  int index_th_rate;          \/**< maximum variation rate of \\f$ exp^{-\\kappa}\\f$, g and \\f$ (d g \/ d \\tau) \\f$, used for computing integration step in perturbation module *\/$/;"	m	struct:thermo
index_th_tau_d	include/thermodynamics.h	/^  int index_th_tau_d;         \/**< Baryon drag optical depth *\/$/;"	m	struct:thermo
index_th_xe	include/thermodynamics.h	/^  int index_th_xe;            \/**< ionization fraction \\f$ x_e \\f$ *\/$/;"	m	struct:thermo
index_tp_delta_b	include/perturbations.h	/^  int index_tp_delta_b;   \/**< index value for delta of baryons *\/$/;"	m	struct:perturbs
index_tp_delta_cdm	include/perturbations.h	/^  int index_tp_delta_cdm; \/**< index value for delta of cold dark matter *\/$/;"	m	struct:perturbs
index_tp_delta_dcdm	include/perturbations.h	/^  int index_tp_delta_dcdm;\/**< index value for delta of DCDM *\/$/;"	m	struct:perturbs
index_tp_delta_dr	include/perturbations.h	/^  int index_tp_delta_dr; \/**< index value for delta of decay radiation *\/$/;"	m	struct:perturbs
index_tp_delta_fld	include/perturbations.h	/^  int index_tp_delta_fld;  \/**< index value for delta of dark energy *\/$/;"	m	struct:perturbs
index_tp_delta_g	include/perturbations.h	/^  int index_tp_delta_g;   \/**< index value for delta of gammas *\/$/;"	m	struct:perturbs
index_tp_delta_m	include/perturbations.h	/^  int index_tp_delta_m; \/**< index value for delta tot *\/$/;"	m	struct:perturbs
index_tp_delta_ncdm1	include/perturbations.h	/^  int index_tp_delta_ncdm1; \/**< index value for delta of first non-cold dark matter species (e.g. massive neutrinos) *\/$/;"	m	struct:perturbs
index_tp_delta_scf	include/perturbations.h	/^  int index_tp_delta_scf;  \/**< index value for delta of scalar field *\/$/;"	m	struct:perturbs
index_tp_delta_ur	include/perturbations.h	/^  int index_tp_delta_ur; \/**< index value for delta of ultra-relativistic neutrinos\/relics *\/$/;"	m	struct:perturbs
index_tp_eta	include/perturbations.h	/^  int index_tp_eta;          \/**< index value for metric fluctuation eta *\/$/;"	m	struct:perturbs
index_tp_eta_prime	include/perturbations.h	/^  int index_tp_eta_prime;    \/**< index value for metric fluctuation eta' *\/$/;"	m	struct:perturbs
index_tp_h	include/perturbations.h	/^  int index_tp_h;            \/**< index value for metric fluctuation h *\/$/;"	m	struct:perturbs
index_tp_h_prime	include/perturbations.h	/^  int index_tp_h_prime;      \/**< index value for metric fluctuation h' *\/$/;"	m	struct:perturbs
index_tp_p	include/perturbations.h	/^  int index_tp_p; \/**< index value for polarization *\/$/;"	m	struct:perturbs
index_tp_perturbed_recombination_delta_chi	include/perturbations.h	/^  int index_tp_perturbed_recombination_delta_chi;		\/**< Inionization fraction perturbation *\/$/;"	m	struct:perturbs
index_tp_perturbed_recombination_delta_temp	include/perturbations.h	/^  int index_tp_perturbed_recombination_delta_temp;		\/**< Gas temperature perturbation *\/$/;"	m	struct:perturbs
index_tp_phi	include/perturbations.h	/^  int index_tp_phi;          \/**< index value for metric fluctuation phi *\/$/;"	m	struct:perturbs
index_tp_phi_plus_psi	include/perturbations.h	/^  int index_tp_phi_plus_psi; \/**< index value for metric fluctuation phi+psi *\/$/;"	m	struct:perturbs
index_tp_phi_prime	include/perturbations.h	/^  int index_tp_phi_prime;    \/**< index value for metric fluctuation phi' *\/$/;"	m	struct:perturbs
index_tp_psi	include/perturbations.h	/^  int index_tp_psi;          \/**< index value for metric fluctuation psi *\/$/;"	m	struct:perturbs
index_tp_t0	include/perturbations.h	/^  int index_tp_t0; \/**< index value for temperature (j=0 term) *\/$/;"	m	struct:perturbs
index_tp_t1	include/perturbations.h	/^  int index_tp_t1; \/**< index value for temperature (j=1 term) *\/$/;"	m	struct:perturbs
index_tp_t2	include/perturbations.h	/^  int index_tp_t2; \/**< index value for temperature (j=2 term) *\/$/;"	m	struct:perturbs
index_tp_theta_b	include/perturbations.h	/^  int index_tp_theta_b;    \/**< index value for theta of baryons *\/$/;"	m	struct:perturbs
index_tp_theta_cdm	include/perturbations.h	/^  int index_tp_theta_cdm;  \/**< index value for theta of cold dark matter *\/$/;"	m	struct:perturbs
index_tp_theta_dcdm	include/perturbations.h	/^  int index_tp_theta_dcdm; \/**< index value for theta of DCDM *\/$/;"	m	struct:perturbs
index_tp_theta_dr	include/perturbations.h	/^  int index_tp_theta_dr;   \/**< index value for F1 of decay radiation *\/$/;"	m	struct:perturbs
index_tp_theta_fld	include/perturbations.h	/^  int index_tp_theta_fld;  \/**< index value for theta of dark energy *\/$/;"	m	struct:perturbs
index_tp_theta_g	include/perturbations.h	/^  int index_tp_theta_g;    \/**< index value for theta of gammas *\/$/;"	m	struct:perturbs
index_tp_theta_m	include/perturbations.h	/^  int index_tp_theta_m;    \/**< index value for theta tot *\/$/;"	m	struct:perturbs
index_tp_theta_ncdm1	include/perturbations.h	/^  int index_tp_theta_ncdm1;\/**< index value for theta of first non-cold dark matter species (e.g. massive neutrinos) *\/$/;"	m	struct:perturbs
index_tp_theta_scf	include/perturbations.h	/^  int index_tp_theta_scf;  \/**< index value for theta of scalar field *\/$/;"	m	struct:perturbs
index_tp_theta_ur	include/perturbations.h	/^  int index_tp_theta_ur;   \/**< index value for theta of ultra-relativistic neutrinos\/relics *\/$/;"	m	struct:perturbs
index_tr_delta_b	include/spectra.h	/^  int index_tr_delta_b;        \/**< index of baryon density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_cdm	include/spectra.h	/^  int index_tr_delta_cdm;      \/**< index of cold dark matter density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_dcdm	include/spectra.h	/^  int index_tr_delta_dcdm;     \/**< index of decaying cold dark matter density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_dr	include/spectra.h	/^  int index_tr_delta_dr;       \/**< index of decay radiation density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_fld	include/spectra.h	/^  int index_tr_delta_fld;      \/**< index of dark energy fluid density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_g	include/spectra.h	/^  int index_tr_delta_g;        \/**< index of gamma density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_ncdm1	include/spectra.h	/^  int index_tr_delta_ncdm1;    \/**< index of first species of non-cold dark matter (massive neutrinos, ...) density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_scf	include/spectra.h	/^  int index_tr_delta_scf;      \/**< index of scalar field phi transfer function *\/$/;"	m	struct:spectra
index_tr_delta_tot	include/spectra.h	/^  int index_tr_delta_tot;      \/**< index of total matter density transfer function *\/$/;"	m	struct:spectra
index_tr_delta_ur	include/spectra.h	/^  int index_tr_delta_ur;       \/**< index of ultra-relativistic neutrinos\/relics density transfer function *\/$/;"	m	struct:spectra
index_tr_eta	include/spectra.h	/^  int index_tr_eta;            \/**< index of synchronous gauge metric perturbation eta *\/$/;"	m	struct:spectra
index_tr_eta_prime	include/spectra.h	/^  int index_tr_eta_prime;      \/**< index of synchronous gauge metric perturbation eta' *\/$/;"	m	struct:spectra
index_tr_h	include/spectra.h	/^  int index_tr_h;              \/**< index of synchronous gauge metric perturbation h *\/$/;"	m	struct:spectra
index_tr_h_prime	include/spectra.h	/^  int index_tr_h_prime;        \/**< index of synchronous gauge metric perturbation h' *\/$/;"	m	struct:spectra
index_tr_phi	include/spectra.h	/^  int index_tr_phi;            \/**< index of Bardeen potential phi *\/$/;"	m	struct:spectra
index_tr_phi_prime	include/spectra.h	/^  int index_tr_phi_prime;      \/**< index of derivative of Bardeen potential phi *\/$/;"	m	struct:spectra
index_tr_psi	include/spectra.h	/^  int index_tr_psi;            \/**< index of Bardeen potential psi *\/$/;"	m	struct:spectra
index_tr_theta_b	include/spectra.h	/^  int index_tr_theta_b;        \/**< index of baryon velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_cdm	include/spectra.h	/^  int index_tr_theta_cdm;      \/**< index of cold dark matter velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_dcdm	include/spectra.h	/^  int index_tr_theta_dcdm;     \/**< index of decaying cold dark matter velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_dr	include/spectra.h	/^  int index_tr_theta_dr;       \/**< index of decay radiation velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_fld	include/spectra.h	/^  int index_tr_theta_fld;      \/**< index of dark energy fluid velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_g	include/spectra.h	/^  int index_tr_theta_g;        \/**< index of gamma velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_ncdm1	include/spectra.h	/^  int index_tr_theta_ncdm1;    \/**< index of first species of non-cold dark matter (massive neutrinos, ...) velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_scf	include/spectra.h	/^  int index_tr_theta_scf;      \/**< index of derivative of scalar field phi transfer function *\/$/;"	m	struct:spectra
index_tr_theta_tot	include/spectra.h	/^  int index_tr_theta_tot;      \/**< index of total matter velocity transfer function *\/$/;"	m	struct:spectra
index_tr_theta_ur	include/spectra.h	/^  int index_tr_theta_ur;       \/**< index of ultra-relativistic neutrinos\/relics velocity transfer function *\/$/;"	m	struct:spectra
index_tt_b	include/transfer.h	/^  int index_tt_b;       \/**< index for transfer type = B-polarization *\/$/;"	m	struct:transfers
index_tt_d0	include/transfer.h	/^  int index_tt_d0;      \/**< index for first bin of transfer type = doppler effect for of number count (j=0 term) *\/$/;"	m	struct:transfers
index_tt_d1	include/transfer.h	/^  int index_tt_d1;      \/**< index for first bin of transfer type = doppler effect for of number count (j=1 term) *\/$/;"	m	struct:transfers
index_tt_density	include/transfer.h	/^  int index_tt_density; \/**< index for first bin of transfer type = matter density *\/$/;"	m	struct:transfers
index_tt_e	include/transfer.h	/^  int index_tt_e;       \/**< index for transfer type = E-polarization *\/$/;"	m	struct:transfers
index_tt_lcmb	include/transfer.h	/^  int index_tt_lcmb;    \/**< index for transfer type = CMB lensing *\/$/;"	m	struct:transfers
index_tt_lensing	include/transfer.h	/^  int index_tt_lensing; \/**< index for first bin of transfer type = galaxy lensing *\/$/;"	m	struct:transfers
index_tt_nc_g1	include/transfer.h	/^  int index_tt_nc_g1;   \/**< index for first bin of transfer type = gravity term G1 for of number count *\/$/;"	m	struct:transfers
index_tt_nc_g2	include/transfer.h	/^  int index_tt_nc_g2;   \/**< index for first bin of transfer type = gravity term G2 for of number count *\/$/;"	m	struct:transfers
index_tt_nc_g3	include/transfer.h	/^  int index_tt_nc_g3;   \/**< index for first bin of transfer type = gravity term G3 for of number count *\/$/;"	m	struct:transfers
index_tt_nc_g4	include/transfer.h	/^  int index_tt_nc_g4;   \/**< index for first bin of transfer type = gravity term G3 for of number count *\/$/;"	m	struct:transfers
index_tt_nc_g5	include/transfer.h	/^  int index_tt_nc_g5;   \/**< index for first bin of transfer type = gravity term G3 for of number count *\/$/;"	m	struct:transfers
index_tt_nc_lens	include/transfer.h	/^  int index_tt_nc_lens; \/**< index for first bin of transfer type = lensing for of number count *\/$/;"	m	struct:transfers
index_tt_rsd	include/transfer.h	/^  int index_tt_rsd;     \/**< index for first bin of transfer type = redshift space distortion of number count *\/$/;"	m	struct:transfers
index_tt_t0	include/transfer.h	/^  int index_tt_t0;      \/**< index for transfer type = temperature (j=0 term) *\/$/;"	m	struct:transfers
index_tt_t1	include/transfer.h	/^  int index_tt_t1;      \/**< index for transfer type = temperature (j=1 term) *\/$/;"	m	struct:transfers
index_tt_t2	include/transfer.h	/^  int index_tt_t2;      \/**< index for transfer type = temperature (j=2 term) *\/$/;"	m	struct:transfers
inflation_H	include/primordial.h	/^  inflation_H,$/;"	e	enum:primordial_spectrum_type
inflation_V	include/primordial.h	/^  inflation_V,$/;"	e	enum:primordial_spectrum_type
inflation_V_end	include/primordial.h	/^  inflation_V_end,$/;"	e	enum:primordial_spectrum_type
inflation_module_behavior	include/primordial.h	/^enum inflation_module_behavior {$/;"	g
initclassy	python/classy.c	/^PyMODINIT_FUNC initclassy(void)$/;"	f
initialise_HIS_cache	include/transfer.h	/^  short initialise_HIS_cache; \/**< only true if we are using CLASS for setting up a cache of HIS structures *\/$/;"	m	struct:transfers
initialize_generic_integrator	tools/dei_rkck.c	/^int initialize_generic_integrator($/;"	f
initialize_jacobian	tools/evolver_ndf15.c	/^int initialize_jacobian(struct jacobian *jac, int neq, ErrorMsg error_message){$/;"	f
initialize_numjac_workspace	tools/evolver_ndf15.c	/^int initialize_numjac_workspace(struct numjac_workspace * nj_ws,int neq, ErrorMsg error_message){$/;"	f
input_auxillary_target_conditions	source/input.c	/^int input_auxillary_target_conditions(struct file_content * pfc,$/;"	f
input_default_params	source/input.c	/^int input_default_params($/;"	f
input_default_precision	source/input.c	/^int input_default_precision ( struct precision * ppr ) {$/;"	f
input_find_root	source/input.c	/^int input_find_root(double *xzero,$/;"	f
input_fzerofun_1d	source/input.c	/^int input_fzerofun_1d(double input,$/;"	f
input_get_guess	source/input.c	/^int input_get_guess(double *xguess,$/;"	f
input_init	source/input.c	/^int input_init($/;"	f
input_init_from_arguments	source/input.c	/^int input_init_from_arguments($/;"	f
input_pprpba	include/input.h	/^struct input_pprpba {$/;"	s
input_read_parameters	source/input.c	/^int input_read_parameters($/;"	f
input_try_unknown_parameters	source/input.c	/^int input_try_unknown_parameters(double * unknown_parameter,$/;"	f
integrate	include/primordial.h	/^  enum integration_direction integrate;$/;"	m	struct:primordial_inflation_parameters_and_workspace	typeref:enum:primordial_inflation_parameters_and_workspace::integration_direction
integration_direction	include/primordial.h	/^enum integration_direction {$/;"	g
inter_closeby	include/background.h	/^  short inter_closeby; \/**< flag for calling background_at_eta and find position in interpolation table starting from previous position in previous call *\/$/;"	m	struct:background
inter_closeby	include/thermodynamics.h	/^  short inter_closeby; \/**< flag for calling thermodynamics_at_z and find position in interpolation table starting from previous position in previous call *\/$/;"	m	struct:thermo
inter_mode	include/perturbations.h	/^  short inter_mode;	\/**< flag defining the method used for interpolation background\/thermo quantities tables *\/$/;"	m	struct:perturb_workspace
inter_normal	include/background.h	/^  short inter_normal;  \/**< flag for calling background_at_eta and find position in interpolation table normally *\/$/;"	m	struct:background
inter_normal	include/thermodynamics.h	/^  short inter_normal;  \/**< flag for calling thermodynamics_at_z and find position in interpolation table normally *\/$/;"	m	struct:thermo
intern	python/classy.c	/^                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;$/;"	m	struct:__anon2	file:
interp_from_dif	tools/evolver_ndf15.c	/^int interp_from_dif(double tinterp,$/;"	f
interp_from_difold	tools/evolver_ndf15.c	/^int interp_from_difold(double tinterp,double tnew,double *ynew,double h,double **dif,int k, double *yinterp,$/;"	f
interpolate_rates	hyrec/hydrogen.c	/^void interpolate_rates(double Alpha[2], double Beta[2], double *R2p2s, double TR, double TM_TR, HRATEEFF *rate_table) {$/;"	f
interpolated_sources	include/transfer.h	/^  double * interpolated_sources; \/**< interpolated_sources[index_tau]: $/;"	m	struct:transfer_workspace
is_complex	python/classy.c	/^  int is_complex;$/;"	m	struct:__anon5	file:
is_non_zero	include/primordial.h	/^  short ** is_non_zero; \/**< is_non_zero[index_md][index_ic1_ic2] set to false if pair$/;"	m	struct:primordial
is_non_zero	include/spectra.h	/^  short ** is_non_zero; \/**< for a given mode, is_non_zero[index_md][index_ic1_ic2] is set to true if the pair of initial conditions (index_ic1, index_ic2) are statistically correlated, or to false if they are uncorrelated *\/$/;"	m	struct:spectra
is_str	python/classy.c	/^                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;$/;"	m	struct:__anon2	file:
is_unicode	python/classy.c	/^                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;$/;"	m	struct:__anon2	file:
is_unsigned	python/classy.c	/^  char is_unsigned;$/;"	m	struct:__anon3	file:
is_valid_array	python/classy.c	/^  char is_valid_array;$/;"	m	struct:__anon5	file:
j	include/hermite3_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
j	include/hermite4_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
j	include/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
j	tools/hermite3_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
j	tools/hermite4_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
j	tools/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
jacobian	include/evolver_ndf15.h	/^struct jacobian{$/;"	s
jacvec	include/evolver_ndf15.h	/^	double *jacvec; \/*Stores experience gained from subsequent calls *\/$/;"	m	struct:jacobian
k	include/nonlinear.h	/^  double * k;      \/**< k[index_k] = list of k values *\/$/;"	m	struct:nonlinear
k	include/perturbations.h	/^  double ** k;      \/**< k[index_md][index_k] = list of values *\/$/;"	m	struct:perturbs
k	include/perturbations.h	/^  double k;			              \/**< current value of wavenumber in 1\/Mpc *\/$/;"	m	struct:perturb_parameters_and_workspace
k	include/primordial.h	/^  double k;$/;"	m	struct:primordial_inflation_parameters_and_workspace
k	include/transfer.h	/^  double ** k; \/**< list of wavenumber values for each requested mode, k[index_md][index_q]. In flat universes k=q. In non-flat universes q and k differ through q2 = k2 + K(1+m), where m=0,1,2 for scalar, vector, tensor. q should be used throughout the transfer module, excepted when interpolating or manipulating the source functions S(k,tau): for a given value of q this should be done in k(q). *\/$/;"	m	struct:transfers
kBoltz	hyrec/hydrogen.h	25;"	d
k_bao_center	include/common.h	/^  double k_bao_center; \/**< in ln(k) space, the central value of the BAO region where sampling is finer is defined as k_rec times this number (recommended: 3, i.e. finest sampling near 3rd BAO peak) *\/$/;"	m	struct:precision
k_bao_width	include/common.h	/^  double k_bao_width; \/**< in ln(k) space, width of the BAO region where sampling is finer: this number gives roughly the number of BAO oscillations well resolved on both sides of the central value (recommended: 4, i.e. finest sampling from before first up to 3+4=7th peak) *\/$/;"	m	struct:precision
k_max	include/perturbations.h	/^  double k_max;     \/**< maximum value (over all modes) *\/$/;"	m	struct:perturbs
k_max_for_pk	include/perturbations.h	/^  double k_max_for_pk; \/**< maximum value of k in 1\/Mpc in P(k) (if \\f$ C_l \\f$'s also requested, overseeded by value kmax inferred from l_scalar_max if it is bigger) *\/$/;"	m	struct:perturbs
k_max_tau0_over_l_max	include/common.h	/^  double k_max_tau0_over_l_max; \/**< number defining k_max for the computation of Cl's (dimensionless): (k_max tau_0)\/l_max, usually chosen around two *\/$/;"	m	struct:precision
k_min	include/perturbations.h	/^  double k_min;     \/**< minimum value (over all modes) *\/$/;"	m	struct:perturbs
k_min_tau0	include/common.h	/^  double k_min_tau0; \/**< number defining k_min for the computation of Cl's and P(k)'s (dimensionless): (k_min tau_0), usually chosen much smaller than one *\/$/;"	m	struct:precision
k_nl	include/nonlinear.h	/^  double * k_nl;  \/**< wavenumber at which non-linear corrections become important, defined differently by different non_linear_method's *\/$/;"	m	struct:nonlinear
k_output_values	include/perturbations.h	/^  double k_output_values[_MAX_NUMBER_OF_K_FILES_];    \/**< List of k values where perturbation output is requested. *\/$/;"	m	struct:perturbs
k_output_values_num	include/perturbations.h	/^  int k_output_values_num;       \/**< Number of perturbation outputs (default=0) *\/$/;"	m	struct:perturbs
k_per_decade_for_bao	include/common.h	/^  double k_per_decade_for_bao; \/**< if values needed between kmax inferred from k_oscillations and k_kmax_for_pk, this gives the number of k per decade inside the BAO region (for finer sampling)*\/$/;"	m	struct:precision
k_per_decade_for_pk	include/common.h	/^  double k_per_decade_for_pk; \/**< if values needed between kmax inferred from k_oscillations and k_kmax_for_pk, this gives the number of k per decade outside the BAO region*\/$/;"	m	struct:precision
k_per_decade_primordial	include/common.h	/^  double k_per_decade_primordial; \/**< logarithmic sampling for primordial spectra (number of points per decade in k space) *\/$/;"	m	struct:precision
k_pivot	include/primordial.h	/^  double k_pivot; \/**< pivot scale in \\f$ Mpc^{-1} \\f$ *\/$/;"	m	struct:primordial
k_size	include/nonlinear.h	/^  int k_size;      \/**< k_size = total number of k values *\/$/;"	m	struct:nonlinear
k_size	include/perturbations.h	/^  int * k_size;     \/**< k_size[index_md] = total number of k$/;"	m	struct:perturbs
k_size_cl	include/perturbations.h	/^  int * k_size_cl;  \/**< k_size_cl[index_md] number of k values used$/;"	m	struct:perturbs
k_size_cmb	include/perturbations.h	/^  int * k_size_cmb;  \/**< k_size_cmb[index_md] number of k values used$/;"	m	struct:perturbs
k_step_sub	include/common.h	/^  double k_step_sub; \/**< step in k space, in units of one period of acoustic oscillation at decoupling, for scales inside sound horizon at decoupling *\/$/;"	m	struct:precision
k_step_super	include/common.h	/^  double k_step_super; \/**< step in k space, in units of one period of acoustic oscillation at decoupling, for scales above sound horizon at decoupling *\/$/;"	m	struct:precision
k_step_super_reduction	include/common.h	/^  double k_step_super_reduction; \/**< the step k_step_super is reduced by this amount in the k-->0 limit (below scale of Hubble and\/or curvature radius) *\/$/;"	m	struct:precision
k_step_transition	include/common.h	/^  double k_step_transition; \/**< dimensionless number regulating the transition from 'sub' steps to 'super' steps. Decrease for more precision. *\/$/;"	m	struct:precision
ksi_ncdm	include/background.h	/^  double * ksi_ncdm, ksi_ncdm_default;  \/**< list of 2nd parameters in$/;"	m	struct:background
ksi_ncdm_default	include/background.h	/^  double * ksi_ncdm, ksi_ncdm_default;  \/**< list of 2nd parameters in$/;"	m	struct:background
kstar	source/perturbations.c	4204;"	d	file:
l	include/hermite3_interpolation_csource.h	/^int l = pHIS->l[lnum];$/;"	v
l	include/hermite4_interpolation_csource.h	/^int l = pHIS->l[lnum];$/;"	v
l	include/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
l	include/hyperspherical.h	/^   int l;$/;"	m	struct:WKB_parameters
l	include/hyperspherical.h	/^  int *l;             \/\/Vector of l values stored$/;"	m	struct:HypersphericalInterpolationStructure
l	include/lensing.h	/^  double * l;       \/**< table of multipole values l[index_l] *\/$/;"	m	struct:lensing
l	include/spectra.h	/^  double * l;    \/**< list of multipole values l[index_l] *\/$/;"	m	struct:spectra
l	include/transfer.h	/^  int * l;        \/**< list of multipole values l[index_l] *\/$/;"	m	struct:transfers
l	tools/hermite3_interpolation_csource.h	/^int l = pHIS->l[lnum];$/;"	v
l	tools/hermite4_interpolation_csource.h	/^int l = pHIS->l[lnum];$/;"	v
l	tools/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
l_lensed_max	include/lensing.h	/^  int l_lensed_max;    \/**< last multipole at which lensed spectra are computed *\/$/;"	m	struct:lensing
l_linstep	include/common.h	/^  int l_linstep; \/**< factor for logarithmic spacing of values of l over which bessel and transfer functions are sampled *\/$/;"	m	struct:precision
l_logstep	include/common.h	/^  double l_logstep; \/**< maximum spacing of values of l over which Bessel and transfer functions are sampled (so, spacing becomes linear instead of logarithmic at some point) *\/$/;"	m	struct:precision
l_lss_max	include/perturbations.h	/^  int l_lss_max; \/**< maximum l value for LSS \\f$ C_l \\f$'s (density and lensing potential in  bins) *\/$/;"	m	struct:perturbs
l_max	include/spectra.h	/^  int * l_max;    \/**< last multipole (given as an input) at which$/;"	m	struct:spectra
l_max	test/test_degeneracy.c	15;"	d	file:
l_max_ct	include/spectra.h	/^  int ** l_max_ct;    \/**< last multipole (given as an input) at which$/;"	m	struct:spectra
l_max_dr	include/common.h	/^  int l_max_dr;   \/**< number of momenta in Boltzmann hierarchy for decay radiation, at least 4 *\/$/;"	m	struct:precision
l_max_dr	include/perturbations.h	/^  int l_max_dr;          \/**< max momentum in Boltzmann hierarchy for dr) *\/$/;"	m	struct:perturb_vector
l_max_g	include/common.h	/^  int l_max_g;     \/**< number of momenta in Boltzmann hierarchy for photon temperature (scalar), at least 4 *\/$/;"	m	struct:precision
l_max_g	include/perturbations.h	/^  int l_max_g;            \/**< max momentum in Boltzmann hierarchy (at least 3) *\/$/;"	m	struct:perturb_vector
l_max_g_ten	include/common.h	/^  int l_max_g_ten;     \/**< number of momenta in Boltzmann hierarchy for photon temperature (tensor), at least 4 *\/$/;"	m	struct:precision
l_max_lt	include/lensing.h	/^  int * l_max_lt;    \/**< last multipole (given as an input) at which$/;"	m	struct:lensing
l_max_ncdm	include/common.h	/^  int l_max_ncdm;   \/**< number of momenta in Boltzmann hierarchy for relativistic neutrino\/relics (scalar), at least 4 *\/$/;"	m	struct:precision
l_max_ncdm	include/perturbations.h	/^  int* l_max_ncdm;	\/**< mutipole l at which Boltzmann hierarchy is truncated (for each ncdm species) *\/$/;"	m	struct:perturb_vector
l_max_pol_g	include/common.h	/^  int l_max_pol_g; \/**< number of momenta in Boltzmann hierarchy for photon polarization (scalar), at least 4 *\/$/;"	m	struct:precision
l_max_pol_g	include/perturbations.h	/^  int l_max_pol_g;        \/**< max momentum in Boltzmann hierarchy (at least 3) *\/$/;"	m	struct:perturb_vector
l_max_pol_g_ten	include/common.h	/^  int l_max_pol_g_ten; \/**< number of momenta in Boltzmann hierarchy for photon polarization (tensor), at least 4 *\/$/;"	m	struct:precision
l_max_tot	include/spectra.h	/^  int l_max_tot; \/**< last multipole (given as an input) at which$/;"	m	struct:spectra
l_max_ur	include/common.h	/^  int l_max_ur;   \/**< number of momenta in Boltzmann hierarchy for relativistic neutrino\/relics (scalar), at least 4 *\/$/;"	m	struct:precision
l_max_ur	include/perturbations.h	/^  int l_max_ur;          \/**< max momentum in Boltzmann hierarchy (at least 3) *\/$/;"	m	struct:perturb_vector
l_scalar_max	include/perturbations.h	/^  int l_scalar_max; \/**< maximum l value for CMB scalars \\f$ C_l \\f$'s *\/$/;"	m	struct:perturbs
l_size	include/hyperspherical.h	/^  int l_size;                \/\/Number of l values$/;"	m	struct:HypersphericalInterpolationStructure
l_size	include/lensing.h	/^  int l_size;       \/**< number of l values *\/$/;"	m	struct:lensing
l_size	include/spectra.h	/^  int * l_size;   \/**< number of multipole values for each requested mode, l_size[index_md] *\/$/;"	m	struct:spectra
l_size	include/transfer.h	/^  int * l_size;   \/**< number of multipole values for each requested mode, l_size[index_md] *\/$/;"	m	struct:transfers
l_size	include/transfer.h	/^  int l_size;        \/**< number of l values *\/$/;"	m	struct:transfer_workspace
l_size_max	include/spectra.h	/^  int l_size_max; \/**< greatest of all l_size[index_md] *\/$/;"	m	struct:spectra
l_size_max	include/transfer.h	/^  int l_size_max; \/**< greatest of all l_size[index_md] *\/$/;"	m	struct:transfers
l_size_tt	include/transfer.h	/^  int ** l_size_tt;  \/**< number of multipole values for which we effectively compute the transfer function,l_size_tt[index_md][index_tt] *\/$/;"	m	struct:transfers
l_switch_limber	include/common.h	/^  double l_switch_limber;$/;"	m	struct:precision
l_switch_limber_for_nc_local_over_z	include/common.h	/^  double l_switch_limber_for_nc_local_over_z;$/;"	m	struct:precision
l_switch_limber_for_nc_los_over_z	include/common.h	/^  double l_switch_limber_for_nc_los_over_z;$/;"	m	struct:precision
l_tensor_max	include/perturbations.h	/^  int l_tensor_max; \/**< maximum l value for CMB tensors \\f$ C_l \\f$'s *\/$/;"	m	struct:perturbs
l_unlensed_max	include/lensing.h	/^  int l_unlensed_max;    \/**< last multipole in all calculations (same as in spectra module)*\/$/;"	m	struct:lensing
l_vector_max	include/perturbations.h	/^  int l_vector_max; \/**< maximum l value for CMB vectors \\f$ C_l \\f$'s *\/$/;"	m	struct:perturbs
last_index	include/background.h	/^  int last_index;$/;"	m	struct:background_parameters_for_distributions
last_index_back	include/perturbations.h	/^  int last_index_back;   \/**< the background interpolation function background_at_tau() keeps memory of the last point called through this index *\/$/;"	m	struct:perturb_workspace
last_index_thermo	include/perturbations.h	/^  int last_index_thermo; \/**< the thermodynamics interpolation function thermodynamics_at_z() keeps memory of the last point called through this index *\/$/;"	m	struct:perturb_workspace
lcmb_pivot	include/transfer.h	/^  double lcmb_pivot;   \/**< if lcmb_tilt non-zero, corresponding pivot$/;"	m	struct:transfers
lcmb_rescale	include/transfer.h	/^  double lcmb_rescale; \/**< normally set to one, can be used$/;"	m	struct:transfers
lcmb_tilt	include/transfer.h	/^  double lcmb_tilt;    \/**< normally set to zero, can be used$/;"	m	struct:transfers
le	python/classy.c	/^  struct lensing le;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::lensing	file:
le	test/test_degeneracy.c	/^struct lensing le;          \/* for lensed spectra *\/$/;"	v	typeref:struct:lensing
leaf_childs	include/quadrature.h	/^  int leaf_childs;\/* Number of leafs under current node. 1 means that the node is a leaf. *\/$/;"	m	struct:adaptive_integration_tree_node
leaf_count	tools/quadrature.c	/^int leaf_count(qss_node *node){$/;"	f
left	include/quadrature.h	/^  struct  adaptive_integration_tree_node *left, *right;	\/* Pointer to left child. *\/$/;"	m	struct:adaptive_integration_tree_node	typeref:struct:adaptive_integration_tree_node::adaptive_integration_tree_node
left_border	include/hermite3_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
left_border	include/hermite4_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
left_border	include/hermite6_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
left_border	tools/hermite3_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
left_border	tools/hermite4_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
left_border	tools/hermite6_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
lensing	include/lensing.h	/^struct lensing {$/;"	s
lensing_addback_cl_ee_bb	source/lensing.c	/^int lensing_addback_cl_ee_bb($/;"	f
lensing_addback_cl_te	source/lensing.c	/^int lensing_addback_cl_te($/;"	f
lensing_addback_cl_tt	source/lensing.c	/^int lensing_addback_cl_tt($/;"	f
lensing_cl_at_l	source/lensing.c	/^int lensing_cl_at_l($/;"	f
lensing_d00	source/lensing.c	/^int lensing_d00($/;"	f
lensing_d11	source/lensing.c	/^int lensing_d11($/;"	f
lensing_d1m1	source/lensing.c	/^int lensing_d1m1($/;"	f
lensing_d20	source/lensing.c	/^int lensing_d20($/;"	f
lensing_d22	source/lensing.c	/^int lensing_d22($/;"	f
lensing_d2m2	source/lensing.c	/^int lensing_d2m2($/;"	f
lensing_d31	source/lensing.c	/^int lensing_d31($/;"	f
lensing_d3m1	source/lensing.c	/^int lensing_d3m1($/;"	f
lensing_d3m3	source/lensing.c	/^int lensing_d3m3($/;"	f
lensing_d40	source/lensing.c	/^int lensing_d40($/;"	f
lensing_d4m2	source/lensing.c	/^int lensing_d4m2($/;"	f
lensing_d4m4	source/lensing.c	/^int lensing_d4m4($/;"	f
lensing_free	source/lensing.c	/^int lensing_free($/;"	f
lensing_indices	source/lensing.c	/^int lensing_indices($/;"	f
lensing_init	source/lensing.c	/^int lensing_init($/;"	f
lensing_lensed_cl_ee_bb	source/lensing.c	/^int lensing_lensed_cl_ee_bb($/;"	f
lensing_lensed_cl_te	source/lensing.c	/^int lensing_lensed_cl_te($/;"	f
lensing_lensed_cl_tt	source/lensing.c	/^int lensing_lensed_cl_tt($/;"	f
lensing_verbose	include/lensing.h	/^  short lensing_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:lensing
likely	python/classy.c	472;"	d	file:
likely	python/classy.c	475;"	d	file:
linear	include/primordial.h	/^  linear,$/;"	e	enum:linear_or_logarithmic
linear_or_logarithmic	include/primordial.h	/^enum linear_or_logarithmic {$/;"	g
ln_aH_ratio	include/primordial.h	/^  ln_aH_ratio,$/;"	e	enum:phi_pivot_methods
ln_aH_ratio_auto	include/primordial.h	/^  ln_aH_ratio_auto$/;"	e	enum:phi_pivot_methods
ln_k	include/spectra.h	/^  double * ln_k;    \/**< list of ln(k) values ln_k[index_k] *\/$/;"	m	struct:spectra
ln_k_size	include/spectra.h	/^  int ln_k_size;    \/**< number ln(k) values *\/$/;"	m	struct:spectra
ln_pk	include/spectra.h	/^  double * ln_pk;   \/**< Matter power spectrum.$/;"	m	struct:spectra
ln_pk_nl	include/spectra.h	/^  double * ln_pk_nl;   \/**< Non-linear matter power spectrum.$/;"	m	struct:spectra
ln_tau	include/spectra.h	/^  double * ln_tau;  \/**< list of ln(tau) values ln_tau[index_tau] *\/$/;"	m	struct:spectra
ln_tau_size	include/spectra.h	/^  int ln_tau_size;  \/**< number ln(tau) values (only one if z_max_pk = 0) *\/$/;"	m	struct:spectra
lnk	include/primordial.h	/^  double * lnk;    \/**< list of ln(k) values lnk[index_k] *\/$/;"	m	struct:primordial
lnk_size	include/primordial.h	/^  int lnk_size;    \/**< number of ln(k) values *\/$/;"	m	struct:primordial
lnpk	include/primordial.h	/^  double ** lnpk;  \/**< depends on indices index_md, index_ic1, index_ic2, index_k as:$/;"	m	struct:primordial
logAlpha_tab	hyrec/hydrogen.h	/^  double **logAlpha_tab[2];$/;"	m	struct:__anon31
logR2p2s_tab	hyrec/hydrogen.h	/^  double *logR2p2s_tab;$/;"	m	struct:__anon31
logTR_tab	hyrec/hydrogen.h	/^  double *logTR_tab;$/;"	m	struct:__anon31
logarithmic	include/primordial.h	/^  logarithmic$/;"	e	enum:linear_or_logarithmic
logj	include/evolver_ndf15.h	/^	int * logj;$/;"	m	struct:numjac_workspace
long_info	include/background.h	/^  short long_info;   \/**< flag for calling background_at_eta and return all information *\/$/;"	m	struct:background
lt_size	include/lensing.h	/^  int lt_size; \/**< number of \\f$ C_l\\f$ types requested *\/$/;"	m	struct:lensing
lubksb	tools/evolver_ndf15.c	/^int lubksb(double **a, int n, int *indx, double b[]){$/;"	f
ludcmp	tools/evolver_ndf15.c	/^int ludcmp(double **a, int n, int *indx, double *d, double *vv){$/;"	f
luidx	include/evolver_ndf15.h	/^	int *luidx;$/;"	m	struct:jacobian
lxlp1	include/hermite3_interpolation_csource.h	/^double lxlp1 = l*(l+1.0);$/;"	v
lxlp1	include/hermite4_interpolation_csource.h	/^double lxlp1 = l*(l+1.0);$/;"	v
lxlp1	include/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
lxlp1	tools/hermite3_interpolation_csource.h	/^double lxlp1 = l*(l+1.0);$/;"	v
lxlp1	tools/hermite4_interpolation_csource.h	/^double lxlp1 = l*(l+1.0);$/;"	v
lxlp1	tools/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
mH	hyrec/hydrogen.h	24;"	d
m_ncdm_in_eV	include/background.h	/^  double * m_ncdm_in_eV; \/**< list of ncdm masses in eV (inferred from M_ncdm and other parameters above) *\/$/;"	m	struct:background
main	hyrec/hyrec.c	/^int main(void) {$/;"	f
main	main/class.c	/^int main(int argc, char **argv) {$/;"	f
main	test/chi2.c	/^int main(int argc, char **argv) {$/;"	f
main	test/custom_lensing.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_2D_quadrature.c	/^int main(){$/;"	f
main	test/test_background.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_bessel.c	/^main(int argc, char **argv) {$/;"	f
main	test/test_degeneracy.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_hyperspherical.c	/^int main(){$/;"	f
main	test/test_loops.c	/^int main() {$/;"	f
main	test/test_loops_omp.c	/^int main() {$/;"	f
main	test/test_nonlinear.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_optimize.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_optimize_1D.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_pbc.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_perturbations.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_spectra.c	/^main(int argc, char **argv) {$/;"	f
main	test/test_thermodynamics.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_timing.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_transfer.c	/^int main(int argc, char **argv) {$/;"	f
main	test/test_trg.c	/^main(int argc, char **argv) {$/;"	f
maketab	hyrec/hyrectools.c	/^void maketab(double xmin, double xmax, unsigned Nx, double *xtab){$/;"	f
many_tanh_num	include/thermodynamics.h	/^  int many_tanh_num; \/**< with how many jumps do we want to describe reionization? *\/$/;"	m	struct:thermo
many_tanh_width	include/thermodynamics.h	/^  double many_tanh_width; \/**< sharpness of tanh() steps *\/$/;"	m	struct:thermo
many_tanh_xe	include/thermodynamics.h	/^  double * many_tanh_xe; \/**< imposed \\f$ X_e(z)\\f$ value at the end of each jump (ie at later times)*\/$/;"	m	struct:thermo
many_tanh_z	include/thermodynamics.h	/^  double * many_tanh_z; \/**< central z value for each tanh jump *\/$/;"	m	struct:thermo
matter_transfer	include/spectra.h	/^  double * matter_transfer;   \/**< Matter transfer functions.$/;"	m	struct:spectra
max_count	python/classy.c	/^    int max_count;$/;"	m	struct:__Pyx_CodeObjectCache	file:
max_group	include/evolver_ndf15.h	/^	int max_group; \/*Number of columngroups -1 *\/$/;"	m	struct:jacobian
max_l_max	include/perturbations.h	/^  int max_l_max;    \/**< maximum l_max for any multipole *\/$/;"	m	struct:perturb_workspace
max_nonzero	include/evolver_ndf15.h	/^	int max_nonzero;     \/*Maximal number of non-zero entries to be considered sparse *\/$/;"	m	struct:jacobian
maxnz	include/sparse.h	/^	int maxnz;		\/* Maximum number of non-zero entries*\/$/;"	m	struct:sparse_matrix
md_size	include/perturbations.h	/^  int md_size; \/**< number of modes included in computation *\/$/;"	m	struct:perturbs
md_size	include/primordial.h	/^  int md_size;      \/**< number of modes included in computation *\/$/;"	m	struct:primordial
md_size	include/spectra.h	/^  int md_size;           \/**< number of modes (scalar, tensor, ...) included in computation *\/$/;"	m	struct:spectra
md_size	include/transfer.h	/^  int md_size;       \/**< number of modes included in computation *\/$/;"	m	struct:transfers
method	include/nonlinear.h	/^  enum non_linear_method method; \/**< method for computing non-linear corrections (none, Halogit, etc.) *\/$/;"	m	struct:nonlinear	typeref:enum:nonlinear::non_linear_method
mt_size	include/perturbations.h	/^  int mt_size;                \/**< size of metric perturbation vector *\/$/;"	m	struct:perturb_workspace
n	include/dei_rkck.h	/^  int n;$/;"	m	struct:generic_integrator_workspace
n	include/sparse.h	/^	int n;			\/*Matrix assumed square, [nxn] *\/$/;"	m	struct:sparse_numerical
n	python/classy.c	/^typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;$/;"	m	struct:__anon2	file:
nH0	hyrec/history.h	/^   double nH0;                  \/* density of hydrogen today in m^{-3} *\/  $/;"	m	struct:__anon30
n_ad_bi	include/primordial.h	/^  double n_ad_bi; \/**< ADxBI cross-correlation tilt *\/$/;"	m	struct:primordial
n_ad_cdi	include/primordial.h	/^  double n_ad_cdi; \/**< ADxCDI cross-correlation tilt *\/$/;"	m	struct:primordial
n_ad_nid	include/primordial.h	/^  double n_ad_nid; \/**< ADxNID cross-correlation tilt *\/$/;"	m	struct:primordial
n_ad_niv	include/primordial.h	/^  double n_ad_niv; \/**< ADxNIV cross-correlation tilt *\/$/;"	m	struct:primordial
n_bi	include/primordial.h	/^  double n_bi;  \/**< BI tilt *\/$/;"	m	struct:primordial
n_bi_cdi	include/primordial.h	/^  double n_bi_cdi; \/**< BIxCDI cross-correlation tilt *\/$/;"	m	struct:primordial
n_bi_nid	include/primordial.h	/^  double n_bi_nid; \/**< BIxNIV cross-correlation tilt *\/$/;"	m	struct:primordial
n_bi_niv	include/primordial.h	/^  double n_bi_niv; \/**< BIxNIV cross-correlation tilt *\/$/;"	m	struct:primordial
n_cdi	include/primordial.h	/^  double n_cdi;  \/**< CDI tilt *\/$/;"	m	struct:primordial
n_cdi_nid	include/primordial.h	/^  double n_cdi_nid; \/**< CDIxNID cross-correlation tilt *\/$/;"	m	struct:primordial
n_cdi_niv	include/primordial.h	/^  double n_cdi_niv; \/**< CDIxNIV cross-correlation tilt *\/$/;"	m	struct:primordial
n_e	include/thermodynamics.h	/^  double n_e; \/**< total number density of electrons today (free or not) *\/$/;"	m	struct:thermo
n_ncdm	include/background.h	/^  int n_ncdm;$/;"	m	struct:background_parameters_for_distributions
n_nid	include/primordial.h	/^  double n_nid;  \/**< NID tilt *\/$/;"	m	struct:primordial
n_nid_niv	include/primordial.h	/^  double n_nid_niv; \/**< NIDxNIV cross-correlation tilt *\/$/;"	m	struct:primordial
n_niv	include/primordial.h	/^  double n_niv;  \/**< NIV tilt *\/$/;"	m	struct:primordial
n_s	include/primordial.h	/^  double n_s;  \/**< usual scalar tilt = [curvature power spectrum tilt at pivot scale -1] *\/$/;"	m	struct:primordial
n_t	include/primordial.h	/^  double n_t;  \/**< usual tensor tilt = [GW power spectrum tilt at pivot scale] *\/$/;"	m	struct:primordial
name	include/parser.h	/^  FileArg * name;  \/**< list of (size) names *\/$/;"	m	struct:file_content
name	python/classy.c	/^  const char* name;$/;"	m	struct:__Pyx_StructField_	file:
name	python/classy.c	/^  const char* name;$/;"	m	struct:__anon3	file:
natural	include/primordial.h	/^  natural,$/;"	e	enum:potential_shape
ncdm_fluid_approximation	include/common.h	/^  int ncdm_fluid_approximation; \/**< method for non-cold dark matter fluid approximation *\/$/;"	m	struct:precision
ncdm_fluid_trigger_tau_over_tau_k	include/common.h	/^  double ncdm_fluid_trigger_tau_over_tau_k;$/;"	m	struct:precision
ncdm_psd_files	include/background.h	/^  char * ncdm_psd_files;                \/**< list of filenames for tabulated p-s-d *\/$/;"	m	struct:background
ncdm_psd_parameters	include/background.h	/^  double * ncdm_psd_parameters;         \/**< list of parameters for specifying\/modifying$/;"	m	struct:background
ncdmfa_CLASS	include/perturbations.h	/^enum ncdmfa_method {ncdmfa_mb,ncdmfa_hu,ncdmfa_CLASS,ncdmfa_none};$/;"	e	enum:ncdmfa_method
ncdmfa_flags	include/perturbations.h	/^enum ncdmfa_flags {ncdmfa_off, ncdmfa_on};$/;"	g
ncdmfa_hu	include/perturbations.h	/^enum ncdmfa_method {ncdmfa_mb,ncdmfa_hu,ncdmfa_CLASS,ncdmfa_none};$/;"	e	enum:ncdmfa_method
ncdmfa_mb	include/perturbations.h	/^enum ncdmfa_method {ncdmfa_mb,ncdmfa_hu,ncdmfa_CLASS,ncdmfa_none};$/;"	e	enum:ncdmfa_method
ncdmfa_method	include/perturbations.h	/^enum ncdmfa_method {ncdmfa_mb,ncdmfa_hu,ncdmfa_CLASS,ncdmfa_none};$/;"	g
ncdmfa_none	include/perturbations.h	/^enum ncdmfa_method {ncdmfa_mb,ncdmfa_hu,ncdmfa_CLASS,ncdmfa_none};$/;"	e	enum:ncdmfa_method
ncdmfa_off	include/perturbations.h	/^enum ncdmfa_flags {ncdmfa_off, ncdmfa_on};$/;"	e	enum:ncdmfa_flags
ncdmfa_on	include/perturbations.h	/^enum ncdmfa_flags {ncdmfa_off, ncdmfa_on};$/;"	e	enum:ncdmfa_flags
ncols	include/sparse.h	/^	int ncols;		\/* Number of columns *\/$/;"	m	struct:sparse_matrix
ncp	python/classy.c	/^  PyObject *ncp;$/;"	m	struct:__pyx_obj_6classy_Class	file:
nd	source/perturbations.c	4205;"	d	file:
ndf15	include/common.h	/^  ndf15 \/* stiff integrator *\/$/;"	e	enum:evolver_type
ndim	python/classy.c	/^  int ndim;$/;"	m	struct:__anon3	file:
neglect_CMB_sources_below_visibility	include/common.h	/^  double neglect_CMB_sources_below_visibility;$/;"	m	struct:precision
neglect_late_source	include/transfer.h	/^  short neglect_late_source; \/**< flag stating whether we use the time cut approximation for the wavenumber at hand *\/$/;"	m	struct:transfer_workspace
new_count	python/classy.c	/^  size_t new_count, enc_count;$/;"	m	struct:__anon5	file:
new_jacobian	include/evolver_ndf15.h	/^	int new_jacobian; \/* True if sp_ludcmp has not been run on the current jacobian. *\/$/;"	m	struct:jacobian
new_linearisation	tools/evolver_ndf15.c	/^int new_linearisation(struct jacobian *jac,double hinvGak,int neq,ErrorMsg error_message){$/;"	f
new_packmode	python/classy.c	/^  char new_packmode;$/;"	m	struct:__anon5	file:
newtonian	include/perturbations.h	/^  newtonian, \/**< newtonian (or longitudinal) gauge *\/$/;"	e	enum:possible_gauges
next_border	include/hermite3_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
next_border	include/hermite4_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
next_border	include/hermite6_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
next_border	tools/hermite3_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
next_border	tools/hermite4_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
next_border	tools/hermite6_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
ng	source/perturbations.c	4206;"	d	file:
nl	python/classy.c	/^  struct nonlinear nl;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::nonlinear	file:
nl	test/test_degeneracy.c	/^struct nonlinear nl;	      \/* for non linear spectra *\/$/;"	v	typeref:struct:nonlinear
nl_corr_density	include/nonlinear.h	/^  double * nl_corr_density;   \/**< nl_corr_density[index_tau * ppt->k_size + index_k] *\/$/;"	m	struct:nonlinear
nl_halofit	include/nonlinear.h	/^enum non_linear_method {nl_none,nl_halofit};$/;"	e	enum:non_linear_method
nl_none	include/nonlinear.h	/^enum non_linear_method {nl_none,nl_halofit};$/;"	e	enum:non_linear_method
noise	test/test_degeneracy.c	/^double ** noise;$/;"	v
noise_planck	test/chi2.c	/^int noise_planck($/;"	f
noise_planck	test/test_degeneracy.c	/^int noise_planck($/;"	f
noise_planck	test/test_optimize.c	/^int noise_planck($/;"	f
noise_planck	test/test_optimize_1D.c	/^int noise_planck($/;"	f
non_diag	include/spectra.h	/^  int non_diag; \/**< sets the number of cross-correlation spectra$/;"	m	struct:spectra
non_linear_method	include/nonlinear.h	/^enum non_linear_method {nl_none,nl_halofit};$/;"	g
nonlinear	include/nonlinear.h	/^struct nonlinear {$/;"	s
nonlinear_free	source/nonlinear.c	/^int nonlinear_free($/;"	f
nonlinear_halofit	source/nonlinear.c	/^int nonlinear_halofit($/;"	f
nonlinear_init	source/nonlinear.c	/^int nonlinear_init($/;"	f
nonlinear_k_nl_at_z	source/nonlinear.c	/^int nonlinear_k_nl_at_z($/;"	f
nonlinear_pk_l	source/nonlinear.c	/^int nonlinear_pk_l($/;"	f
nonlinear_verbose	include/nonlinear.h	/^  short nonlinear_verbose;  	\/**< amount of information written in standard output *\/$/;"	m	struct:nonlinear
normal_info	include/background.h	/^  short normal_info; \/**< flag for calling background_at_eta and return medium information *\/$/;"	m	struct:background
nrows	include/sparse.h	/^	int nrows;		\/* Number of rows *\/$/;"	m	struct:sparse_matrix
num_mu_minus_lmax	include/common.h	/^  int num_mu_minus_lmax; \/**< difference between num_mu and l_max, increase for more precision *\/$/;"	m	struct:precision
number_of_scalar_titles	include/perturbations.h	/^  int number_of_scalar_titles; \/**< number of titles\/columns in scalar perturbation output files *\/$/;"	m	struct:perturbs
number_of_tensor_titles	include/perturbations.h	/^  int number_of_tensor_titles; \/**< number of titles\/columns in tensor perturbation output files*\/$/;"	m	struct:perturbs
number_of_vector_titles	include/perturbations.h	/^  int number_of_vector_titles; \/**< number of titles\/columns in vector perturbation output files*\/$/;"	m	struct:perturbs
numerical	include/primordial.h	/^  numerical,$/;"	e	enum:inflation_module_behavior
numjac	tools/evolver_ndf15.c	/^int numjac($/;"	f
numjac_workspace	include/evolver_ndf15.h	/^struct numjac_workspace{$/;"	s
nx	include/hermite3_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
nx	include/hermite4_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
nx	include/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
nx	tools/hermite3_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
nx	tools/hermite4_interpolation_csource.h	/^int j, nx, current_border_idx=0;$/;"	v
nx	tools/hermite6_interpolation_csource.h	/^int K, l, j, nx, current_border_idx=0;$/;"	v
nz	hyrec/history.h	/^   long nz;                     \/* total number of redshift steps *\/$/;"	m	struct:__anon30
nz_ddnz	include/transfer.h	/^  double * nz_ddnz;      \/**< second derivatives in splined selection function*\/$/;"	m	struct:transfers
nz_evo_dd_dlog_nz	include/transfer.h	/^  double * nz_evo_dd_dlog_nz; \/**< second derivatives in splined log of evolution function *\/$/;"	m	struct:transfers
nz_evo_dlog_nz	include/transfer.h	/^  double * nz_evo_dlog_nz;    \/**< log of tabulated values of evolution function *\/$/;"	m	struct:transfers
nz_evo_file_name	include/transfer.h	/^  FileName nz_evo_file_name;  \/**< dN\/dz (evolution function) input file name *\/$/;"	m	struct:transfers
nz_evo_nz	include/transfer.h	/^  double * nz_evo_nz;         \/**< input tabulated values of evolution function *\/$/;"	m	struct:transfers
nz_evo_size	include/transfer.h	/^  int nz_evo_size;            \/**< number of redshift values in input tabulated evolution function *\/$/;"	m	struct:transfers
nz_evo_z	include/transfer.h	/^  double * nz_evo_z;          \/**< redshift values in input tabulated evolution function *\/$/;"	m	struct:transfers
nz_file_name	include/transfer.h	/^  FileName nz_file_name; \/**< dN\/dz (selection function) input file name *\/$/;"	m	struct:transfers
nz_nz	include/transfer.h	/^  double * nz_nz;        \/**< input tabulated values of selection function *\/$/;"	m	struct:transfers
nz_size	include/transfer.h	/^  int nz_size;           \/**< number of redshift values in input tabulated selection function *\/$/;"	m	struct:transfers
nz_z	include/transfer.h	/^  double * nz_z;         \/**< redshift values in input tabulated selection function *\/$/;"	m	struct:transfers
obh2	hyrec/history.h	/^   double obh2, omh2, okh2;     \/* cosmological parameters *\/$/;"	m	struct:__anon30
odeh2	hyrec/history.h	/^   double odeh2, w0, wa;        \/* dark energy parameters *\/$/;"	m	struct:__anon30
offset	python/classy.c	/^  size_t offset;$/;"	m	struct:__Pyx_StructField_	file:
offsetof	python/classy.c	13;"	d	file:
okh2	hyrec/history.h	/^   double obh2, omh2, okh2;     \/* cosmological parameters *\/$/;"	m	struct:__anon30
omega_dcdmdr	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	e	enum:target_names
omega_ini_dcdm	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	e	enum:target_names
omh2	hyrec/history.h	/^   double obh2, omh2, okh2;     \/* cosmological parameters *\/$/;"	m	struct:__anon30
onthespot_injection_rate	hyrec/history.c	/^double onthespot_injection_rate(REC_COSMOPARAMS *param,$/;"	f
op	python/classy.c	/^  struct output op;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::output	file:
op	test/test_degeneracy.c	/^struct output op;           \/* for output files *\/$/;"	v	typeref:struct:output
open	include/background.h	/^enum spatial_curvature {flat,open,closed};$/;"	e	enum:spatial_curvature
output	include/output.h	/^struct output {$/;"	s
output_background	source/output.c	/^int output_background($/;"	f
output_cl	source/output.c	/^int output_cl($/;"	f
output_format	include/output.h	/^  enum file_format output_format; \/**< which format for output files (definitions, order of columns, etc.) *\/$/;"	m	struct:output	typeref:enum:output::file_format
output_init	source/output.c	/^int output_init($/;"	f
output_one_line_of_cl	source/output.c	/^int output_one_line_of_cl($/;"	f
output_one_line_of_pk	source/output.c	/^int output_one_line_of_pk($/;"	f
output_open_cl_file	source/output.c	/^int output_open_cl_file($/;"	f
output_open_pk_file	source/output.c	/^int output_open_pk_file($/;"	f
output_perturbations	source/output.c	/^int output_perturbations($/;"	f
output_pk	source/output.c	/^int output_pk($/;"	f
output_pk_nl	source/output.c	/^int output_pk_nl($/;"	f
output_primordial	source/output.c	/^int output_primordial($/;"	f
output_print_data	source/output.c	/^int output_print_data(FILE *out,$/;"	f
output_thermodynamics	source/output.c	/^int output_thermodynamics($/;"	f
output_tk	source/output.c	/^int output_tk($/;"	f
output_total_cl_at_l	source/output.c	/^int output_total_cl_at_l($/;"	f
output_verbose	include/output.h	/^  short output_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:output
p	include/sparse.h	/^	int *p;			\/*Row permutation. *\/$/;"	m	struct:sparse_numerical
p	python/classy.c	/^typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;$/;"	m	struct:__anon2	file:
pBIS	include/transfer.h	/^  HyperInterpStruct * pBIS;  \/**< pointer to structure containing all the spherical bessel functions of the flat case (used even in the non-flat case, for approximation schemes). pBIS = pointer to Bessel Interpolation Structure. *\/$/;"	m	struct:transfer_workspace
parent_offset	python/classy.c	/^  size_t parent_offset;$/;"	m	struct:__anon4	file:
parser_cat	tools/parser.c	/^int parser_cat($/;"	f
parser_free	tools/parser.c	/^int parser_free($/;"	f
parser_init	tools/parser.c	/^int parser_init($/;"	f
parser_read_double	tools/parser.c	/^int parser_read_double($/;"	f
parser_read_double_and_position	tools/parser.c	/^int parser_read_double_and_position($/;"	f
parser_read_file	tools/parser.c	/^int parser_read_file($/;"	f
parser_read_int	tools/parser.c	/^int parser_read_int($/;"	f
parser_read_line	tools/parser.c	/^int parser_read_line($/;"	f
parser_read_list_of_doubles	tools/parser.c	/^int parser_read_list_of_doubles($/;"	f
parser_read_list_of_integers	tools/parser.c	/^int parser_read_list_of_integers($/;"	f
parser_read_list_of_strings	tools/parser.c	/^int parser_read_list_of_strings($/;"	f
parser_read_string	tools/parser.c	/^int parser_read_string($/;"	f
pba	include/background.h	/^  struct background * pba;$/;"	m	struct:background_parameters_and_workspace	typeref:struct:background_parameters_and_workspace::background
pba	include/background.h	/^  struct background * pba;$/;"	m	struct:background_parameters_for_distributions	typeref:struct:background_parameters_for_distributions::background
pba	include/input.h	/^  struct background * pba;$/;"	m	struct:input_pprpba	typeref:struct:input_pprpba::background
pba	include/perturbations.h	/^  struct background * pba;        \/**< pointer to the background structure *\/$/;"	m	struct:perturb_parameters_and_workspace	typeref:struct:perturb_parameters_and_workspace::background
pba	include/thermodynamics.h	/^  struct background * pba;$/;"	m	struct:thermodynamics_parameters_and_workspace	typeref:struct:thermodynamics_parameters_and_workspace::background
perturb_approximations	source/perturbations.c	/^int perturb_approximations($/;"	f
perturb_derivs	source/perturbations.c	/^int perturb_derivs(double tau,$/;"	f
perturb_einstein	source/perturbations.c	/^int perturb_einstein($/;"	f
perturb_find_approximation_number	source/perturbations.c	/^int perturb_find_approximation_number($/;"	f
perturb_find_approximation_switches	source/perturbations.c	/^int perturb_find_approximation_switches($/;"	f
perturb_free	source/perturbations.c	/^int perturb_free($/;"	f
perturb_get_k_list	source/perturbations.c	/^int perturb_get_k_list($/;"	f
perturb_indices_of_perturbs	source/perturbations.c	/^int perturb_indices_of_perturbs($/;"	f
perturb_init	source/perturbations.c	/^int perturb_init($/;"	f
perturb_initial_conditions	source/perturbations.c	/^int perturb_initial_conditions(struct precision * ppr,$/;"	f
perturb_integration_stepsize	include/common.h	/^  double perturb_integration_stepsize;$/;"	m	struct:precision
perturb_output_file	include/perturbations.h	/^  FILE * perturb_output_file; \/**< filepointer to output file*\/$/;"	m	struct:perturb_workspace
perturb_parameters_and_workspace	include/perturbations.h	/^struct perturb_parameters_and_workspace {$/;"	s
perturb_prepare_output	source/perturbations.c	/^int perturb_prepare_output(struct background * pba,$/;"	f
perturb_print_variables	source/perturbations.c	/^int perturb_print_variables(double tau,$/;"	f
perturb_rsa_delta_and_theta	source/perturbations.c	/^int perturb_rsa_delta_and_theta($/;"	f
perturb_sampling_stepsize	include/common.h	/^  double perturb_sampling_stepsize;$/;"	m	struct:precision
perturb_solve	source/perturbations.c	/^int perturb_solve($/;"	f
perturb_sources	source/perturbations.c	/^int perturb_sources($/;"	f
perturb_sources_at_tau	source/perturbations.c	/^int perturb_sources_at_tau($/;"	f
perturb_tca_slip_and_shear	source/perturbations.c	/^int perturb_tca_slip_and_shear(double * y,$/;"	f
perturb_timesampling_for_sources	source/perturbations.c	/^int perturb_timesampling_for_sources($/;"	f
perturb_timescale	source/perturbations.c	/^int perturb_timescale($/;"	f
perturb_total_stress_energy	source/perturbations.c	/^int perturb_total_stress_energy($/;"	f
perturb_vector	include/perturbations.h	/^struct perturb_vector$/;"	s
perturb_vector_free	source/perturbations.c	/^int perturb_vector_free($/;"	f
perturb_vector_init	source/perturbations.c	/^int perturb_vector_init($/;"	f
perturb_workspace	include/perturbations.h	/^struct perturb_workspace$/;"	s
perturb_workspace_free	source/perturbations.c	/^int perturb_workspace_free ($/;"	f
perturb_workspace_init	source/perturbations.c	/^int perturb_workspace_init($/;"	f
perturbations_verbose	include/perturbations.h	/^  short perturbations_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:perturbs
perturbs	include/perturbations.h	/^struct perturbs$/;"	s
phi	include/hyperspherical.h	/^  double *phi;        \/\/array of size nl*nx. [y_{l1}(x1) t_{l1}(x2)...]$/;"	m	struct:HypersphericalInterpolationStructure
phi_end	include/primordial.h	/^  double phi_end;	\/**< value of inflaton at the end of inflation *\/$/;"	m	struct:primordial
phi_ini_scf	include/background.h	/^  double phi_ini_scf;       \/**< \\f$ \\phi(t_0) \\f$: scalar field initial value *\/$/;"	m	struct:background
phi_max	include/primordial.h	/^  double phi_max;        \/**< in inflationary module, value of phi when \\f$ k_{max}=aH \\f$*\/$/;"	m	struct:primordial
phi_min	include/primordial.h	/^  double phi_min;        \/**< in inflationary module, value of phi when \\f$ k_{min}=aH \\f$*\/$/;"	m	struct:primordial
phi_pivot	include/primordial.h	/^  double phi_pivot;      \/**< in inflationary module, value of$/;"	m	struct:primordial
phi_pivot_method	include/primordial.h	/^  enum phi_pivot_methods phi_pivot_method; \/**< flag for method used to define and find the pivot scale *\/$/;"	m	struct:primordial	typeref:enum:primordial::phi_pivot_methods
phi_pivot_methods	include/primordial.h	/^enum phi_pivot_methods {$/;"	g
phi_pivot_target	include/primordial.h	/^  double phi_pivot_target; \/**< For each of the above methods, critical value to be reached between pivot and end of inflation (N_star, [aH]ratio, etc.) *\/$/;"	m	struct:primordial
phi_prime_ini_scf	include/background.h	/^  double phi_prime_ini_scf; \/**< \\f$ d\\phi(t_0)\/d\\tau \\f$: scalar field initial derivative wrt conformal time *\/$/;"	m	struct:background
phi_stop	include/primordial.h	/^  double phi_stop;       \/**< in inflationary module, value of phi at the end of inflation *\/$/;"	m	struct:primordial
phi_var	source/perturbations.c	4209;"	d	file:
phiminabs	include/hyperspherical.h	/^   double phiminabs;$/;"	m	struct:WKB_parameters
phisign	include/hermite3_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
phisign	include/hermite4_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
phisign	include/hermite6_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
phisign	tools/hermite3_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
phisign	tools/hermite4_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
phisign	tools/hermite6_interpolation_csource.h	/^int phisign = 1, dphisign = 1;$/;"	v
pinv	include/sparse.h	/^	int *pinv;		\/*Inverse row permutation. *\/$/;"	m	struct:sparse_numerical
pk_def	include/common.h	/^enum pk_def {$/;"	g
pm	python/classy.c	/^  struct primordial pm;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::primordial	file:
pm	test/test_degeneracy.c	/^struct primordial pm;       \/* for primordial spectra *\/$/;"	v	typeref:struct:primordial
polynomial	include/primordial.h	/^  polynomial,$/;"	e	enum:potential_shape
populateTS_2photon	hyrec/hydrogen.c	/^void populateTS_2photon(double Trr[2][2], double *Trv[2], double *Tvr[2], double *Tvv[3],$/;"	f
populate_Diffusion	hyrec/hydrogen.c	/^void populate_Diffusion(double *Aup, double *Adn, double *A2p_up, double *A2p_dn,$/;"	f
possible_gauges	include/perturbations.h	/^enum possible_gauges {$/;"	g
potential	include/primordial.h	/^  enum potential_shape potential;$/;"	m	struct:primordial	typeref:enum:primordial::potential_shape
potential_shape	include/primordial.h	/^enum potential_shape {$/;"	g
ppm	include/primordial.h	/^  struct primordial * ppm;$/;"	m	struct:primordial_inflation_parameters_and_workspace	typeref:struct:primordial_inflation_parameters_and_workspace::primordial
ppr	include/input.h	/^  struct precision * ppr;$/;"	m	struct:input_pprpba	typeref:struct:input_pprpba::precision
ppr	include/perturbations.h	/^  struct precision * ppr;         \/**< pointer to the precision structure *\/$/;"	m	struct:perturb_parameters_and_workspace	typeref:struct:perturb_parameters_and_workspace::precision
ppr	include/thermodynamics.h	/^  struct precision * ppr;$/;"	m	struct:thermodynamics_parameters_and_workspace	typeref:struct:thermodynamics_parameters_and_workspace::precision
ppt	include/perturbations.h	/^  struct perturbs * ppt;          \/**< pointer to the precision structure *\/$/;"	m	struct:perturb_parameters_and_workspace	typeref:struct:perturb_parameters_and_workspace::perturbs
ppw	include/perturbations.h	/^  struct perturb_workspace * ppw; \/**< workspace defined above *\/$/;"	m	struct:perturb_parameters_and_workspace	typeref:struct:perturb_parameters_and_workspace::perturb_workspace
pr	python/classy.c	/^  struct precision pr;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::precision	file:
pr	test/test_degeneracy.c	/^struct precision pr;        \/* for precision parameters *\/$/;"	v	typeref:struct:precision
precision	include/common.h	/^struct precision$/;"	s
preco	include/thermodynamics.h	/^  struct recombination * preco;$/;"	m	struct:thermodynamics_parameters_and_workspace	typeref:struct:thermodynamics_parameters_and_workspace::recombination
primordial	include/primordial.h	/^struct primordial {$/;"	s
primordial_analytic_spectrum	source/primordial.c	/^int primordial_analytic_spectrum($/;"	f
primordial_analytic_spectrum_init	source/primordial.c	/^int primordial_analytic_spectrum_init($/;"	f
primordial_external_spectrum_init	source/primordial.c	/^int primordial_external_spectrum_init($/;"	f
primordial_free	source/primordial.c	/^int primordial_free($/;"	f
primordial_get_lnk_list	source/primordial.c	/^int primordial_get_lnk_list($/;"	f
primordial_indices	source/primordial.c	/^int primordial_indices($/;"	f
primordial_inflation_aH_ini_target	include/common.h	/^  double primordial_inflation_aH_ini_target; \/**< control the step size in the search for a suitable initial field value *\/$/;"	m	struct:precision
primordial_inflation_analytic_spectra	source/primordial.c	/^int primordial_inflation_analytic_spectra($/;"	f
primordial_inflation_attractor_maxit	include/common.h	/^  int primordial_inflation_attractor_maxit; \/**< maximum number of iteration when searching attractor solution *\/$/;"	m	struct:precision
primordial_inflation_attractor_precision_initial	include/common.h	/^  double primordial_inflation_attractor_precision_initial; \/**< targeted precision when searching attractor solution near phi_ini *\/$/;"	m	struct:precision
primordial_inflation_attractor_precision_pivot	include/common.h	/^  double primordial_inflation_attractor_precision_pivot;   \/**< targeted precision when searching attractor solution near phi_pivot *\/$/;"	m	struct:precision
primordial_inflation_bg_stepsize	include/common.h	/^  double primordial_inflation_bg_stepsize;     \/**< controls the integration timestep for inflaton background *\/$/;"	m	struct:precision
primordial_inflation_check_hubble	source/primordial.c	/^int primordial_inflation_check_hubble($/;"	f
primordial_inflation_check_potential	source/primordial.c	/^int primordial_inflation_check_potential($/;"	f
primordial_inflation_derivs	source/primordial.c	/^int primordial_inflation_derivs($/;"	f
primordial_inflation_end_dphi	include/common.h	/^  double primordial_inflation_end_dphi; \/**< first bracketing width, when trying to bracket the value phi_end at which inflation ends naturally *\/$/;"	m	struct:precision
primordial_inflation_end_logstep	include/common.h	/^  double primordial_inflation_end_logstep; \/**< logarithmic step for updating the bracketing width, when trying to bracket the value phi_end at which inflation ends naturally *\/$/;"	m	struct:precision
primordial_inflation_evolve_background	source/primordial.c	/^int primordial_inflation_evolve_background($/;"	f
primordial_inflation_extra_efolds	include/common.h	/^  double primordial_inflation_extra_efolds; \/**< a small number of efolds, irrelevant at the end, used in the search for the pivot scale (backward from the end of inflation) *\/$/;"	m	struct:precision
primordial_inflation_find_attractor	source/primordial.c	/^int primordial_inflation_find_attractor($/;"	f
primordial_inflation_find_phi_pivot	source/primordial.c	/^int primordial_inflation_find_phi_pivot($/;"	f
primordial_inflation_get_epsilon	source/primordial.c	/^int primordial_inflation_get_epsilon($/;"	f
primordial_inflation_hubble	source/primordial.c	/^int primordial_inflation_hubble($/;"	f
primordial_inflation_indices	source/primordial.c	/^int primordial_inflation_indices($/;"	f
primordial_inflation_one_k	source/primordial.c	/^int primordial_inflation_one_k($/;"	f
primordial_inflation_one_wavenumber	source/primordial.c	/^int primordial_inflation_one_wavenumber($/;"	f
primordial_inflation_parameters_and_workspace	include/primordial.h	/^struct primordial_inflation_parameters_and_workspace {$/;"	s
primordial_inflation_phi_ini_maxit	include/common.h	/^  int primordial_inflation_phi_ini_maxit;      \/**< maximum number of iteration when searching a suitable initial field value phi_ini (value reached when no long-enough slow-roll period before the pivot scale) *\/$/;"	m	struct:precision
primordial_inflation_potential	source/primordial.c	/^int primordial_inflation_potential($/;"	f
primordial_inflation_pt_stepsize	include/common.h	/^  double primordial_inflation_pt_stepsize;     \/**< controls the integration timestep for inflaton perturbations *\/$/;"	m	struct:precision
primordial_inflation_ratio_max	include/common.h	/^  double primordial_inflation_ratio_max; \/**< for each k, stop following wavenumber, at the latest, when aH = k\/primordial_inflation_ratio_max *\/$/;"	m	struct:precision
primordial_inflation_ratio_min	include/common.h	/^  double primordial_inflation_ratio_min; \/**< for each k, start following wavenumber when aH = k\/primordial_inflation_ratio_min *\/$/;"	m	struct:precision
primordial_inflation_small_epsilon	include/common.h	/^  double primordial_inflation_small_epsilon; \/**< value of slow-roll parameter epsilon used to define a field value phi_end close to the end of inflation (doesn't need to be exactly at the end): epsilon(phi_end)=small_epsilon (should be smaller than one) *\/$/;"	m	struct:precision
primordial_inflation_small_epsilon_tol	include/common.h	/^  double primordial_inflation_small_epsilon_tol; \/**< tolerance in the search for phi_end *\/$/;"	m	struct:precision
primordial_inflation_solve_inflation	source/primordial.c	/^int primordial_inflation_solve_inflation($/;"	f
primordial_inflation_spectra	source/primordial.c	/^int primordial_inflation_spectra($/;"	f
primordial_inflation_tol_curvature	include/common.h	/^  double primordial_inflation_tol_curvature; \/**< for each k, stop following wavenumber, at the latest, when curvature perturbation R is stable up to to this tolerance *\/$/;"	m	struct:precision
primordial_inflation_tol_integration	include/common.h	/^  double primordial_inflation_tol_integration; \/**< controls the precision of the ODE integration during inflation *\/$/;"	m	struct:precision
primordial_init	source/primordial.c	/^int primordial_init($/;"	f
primordial_output_data	source/primordial.c	/^int primordial_output_data(struct perturbs * ppt,$/;"	f
primordial_output_titles	source/primordial.c	/^int primordial_output_titles(struct perturbs * ppt,$/;"	f
primordial_spec_type	include/primordial.h	/^  enum primordial_spectrum_type primordial_spec_type; \/**< type of primordial spectrum (simple analytic from, integration of inflationary perturbations, etc.) *\/$/;"	m	struct:primordial	typeref:enum:primordial::primordial_spectrum_type
primordial_spectrum_at_k	source/primordial.c	/^int primordial_spectrum_at_k($/;"	f
primordial_spectrum_type	include/primordial.h	/^enum primordial_spectrum_type {$/;"	g
primordial_verbose	include/primordial.h	/^  short primordial_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:primordial
proper	include/primordial.h	/^  proper$/;"	e	enum:time_definition
pt	python/classy.c	/^  struct perturbs pt;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::perturbs	file:
pt	test/test_degeneracy.c	/^struct perturbs pt;         \/* for source functions *\/$/;"	v	typeref:struct:perturbs
pt_size	include/perturbations.h	/^  int pt_size;            \/**< size of perturbation vector *\/$/;"	m	struct:perturb_vector
pth	include/perturbations.h	/^  struct thermo * pth;            \/**< pointer to the thermodynamics structure *\/$/;"	m	struct:perturb_parameters_and_workspace	typeref:struct:perturb_parameters_and_workspace::thermo
pv	include/perturbations.h	/^  struct perturb_vector * pv; \/**< pointer to vector of integrated$/;"	m	struct:perturb_workspace	typeref:struct:perturb_workspace::perturb_vector
pvecback	include/background.h	/^  double * pvecback;$/;"	m	struct:background_parameters_and_workspace
pvecback	include/perturbations.h	/^  double * pvecback;          \/**< background quantities *\/$/;"	m	struct:perturb_workspace
pvecback	include/thermodynamics.h	/^  double * pvecback;$/;"	m	struct:thermodynamics_parameters_and_workspace
pvecmetric	include/perturbations.h	/^  double * pvecmetric;        \/**< metric quantities *\/$/;"	m	struct:perturb_workspace
pvecthermo	include/perturbations.h	/^  double * pvecthermo;        \/**< thermodynamics quantities *\/$/;"	m	struct:perturb_workspace
pybuffer	python/classy.c	/^  Py_buffer pybuffer;$/;"	m	struct:__anon12	file:
q	include/background.h	/^  double *q;$/;"	m	struct:background_parameters_for_distributions
q	include/sparse.h	/^	int *q;			\/* Column permutation *\/$/;"	m	struct:sparse_numerical
q	include/transfer.h	/^  double * q;  \/**< list of wavenumber values, q[index_q] *\/$/;"	m	struct:transfers
q_linstep	include/common.h	/^  double q_linstep;         \/**< asymptotic linear sampling step in q$/;"	m	struct:precision
q_logstep_open	include/common.h	/^  double q_logstep_open;   \/**< in open models, the value of$/;"	m	struct:precision
q_logstep_spline	include/common.h	/^  double q_logstep_spline; \/**< initial logarithmic sampling step in q$/;"	m	struct:precision
q_logstep_trapzd	include/common.h	/^  double q_logstep_trapzd; \/**< initial logarithmic sampling step in q$/;"	m	struct:precision
q_ncdm	include/background.h	/^  double ** q_ncdm;     \/**< Pointers to vectors of perturbation sampling in q *\/$/;"	m	struct:background
q_ncdm_bg	include/background.h	/^  double ** q_ncdm_bg;  \/**< Pointers to vectors of background sampling in q *\/$/;"	m	struct:background
q_numstep_transition	include/common.h	/^  double q_numstep_transition; \/**< number of steps for the transition$/;"	m	struct:precision
q_size	include/transfer.h	/^  size_t q_size; \/**< number of wavenumber values *\/$/;"	m	struct:transfers
q_size_ncdm	include/background.h	/^  int * q_size_ncdm;    \/**< Size of the q_ncdm arrays *\/$/;"	m	struct:background
q_size_ncdm	include/perturbations.h	/^  int* q_size_ncdm;	\/**< number of discrete momenta (for each ncdm species) *\/$/;"	m	struct:perturb_vector
q_size_ncdm_bg	include/background.h	/^  int * q_size_ncdm_bg; \/**< Size of the q_ncdm_bg arrays *\/$/;"	m	struct:background
qss_node	include/quadrature.h	/^} qss_node;$/;"	t	typeref:struct:adaptive_integration_tree_node
quadrature_gauss_legendre	tools/quadrature.c	/^int quadrature_gauss_legendre($/;"	f
quadrature_in_rectangle	tools/quadrature.c	/^int quadrature_in_rectangle($/;"	f
r	include/primordial.h	/^  double r;    \/**< usual tensor to scalar ratio of power spectra, \\f$ r=A_T\/A_S=P_h\/P_R \\f$*\/$/;"	m	struct:primordial
ra_rec	include/thermodynamics.h	/^  double ra_rec;  \/**< conformal angular diameter distance to recombination *\/$/;"	m	struct:thermo
radial_function_type	include/transfer.h	/^              NC_RSD} radial_function_type;$/;"	t	typeref:enum:__anon34
radiation_streaming_approximation	include/common.h	/^  int radiation_streaming_approximation;$/;"	m	struct:precision
radiation_streaming_trigger_tau_c_over_tau	include/common.h	/^  double radiation_streaming_trigger_tau_c_over_tau;$/;"	m	struct:precision
radiation_streaming_trigger_tau_over_tau_k	include/common.h	/^  double radiation_streaming_trigger_tau_over_tau_k;$/;"	m	struct:precision
rcbuffer	python/classy.c	/^  __Pyx_Buffer *rcbuffer;$/;"	m	struct:__anon13	file:
rd_rec	include/thermodynamics.h	/^  double rd_rec;  \/**< comoving photon damping scale at recombination *\/$/;"	m	struct:thermo
re_size	include/thermodynamics.h	/^  int re_size;             \/**< size of this vector *\/$/;"	m	struct:recombination
re_size	include/thermodynamics.h	/^  int re_size;             \/**< size of this vector *\/$/;"	m	struct:reionization
reachr	tools/sparse.c	/^int reachr(sp_mat *G, sp_mat *B,int k, int *xik,int *pinv){$/;"	f
read	include/parser.h	/^  short * read;    \/**< set to _TRUE_ if this parameter is effectively read *\/$/;"	m	struct:file_content
read_rates	hyrec/hydrogen.c	/^void read_rates(HRATEEFF *rate_table){$/;"	f
read_twog_params	hyrec/hydrogen.c	/^void read_twog_params(TWO_PHOTON_PARAMS *twog){$/;"	f
ready	python/classy.c	/^  int ready;$/;"	m	struct:__pyx_obj_6classy_Class	file:
real	python/classy.c	/^    typedef struct { double real, imag; } __pyx_t_double_complex;$/;"	m	struct:__anon7	file:
real	python/classy.c	/^    typedef struct { float real, imag; } __pyx_t_float_complex;$/;"	m	struct:__anon6	file:
rec_HMLA_2photon_dxedlna	hyrec/hydrogen.c	/^double rec_HMLA_2photon_dxedlna(double xe, double nH, double H, double TM, double TR,$/;"	f
rec_HMLA_dxedlna	hyrec/hydrogen.c	/^double rec_HMLA_dxedlna(double xe, double nH, double Hubble, double TM, double TR, double energy_rate, HRATEEFF *rate_table){$/;"	f
rec_HPeebles_dxedlna	hyrec/hydrogen.c	/^double rec_HPeebles_dxedlna(double xe, double nH, double H, double TM, double TR, double energy_rate) {$/;"	f
rec_HRecFast_dxedlna	hyrec/hydrogen.c	/^double rec_HRecFast_dxedlna(double xe, double nH, double H, double TM, double TR, double energy_rate) {$/;"	f
rec_HubbleConstant	hyrec/history.c	/^double rec_HubbleConstant(REC_COSMOPARAMS *param, double z) {$/;"	f
rec_Tmss	hyrec/history.c	/^double rec_Tmss(double xe, double Tr, double H, double fHe, double nH, double energy_rate) {$/;"	f
rec_build_history	hyrec/history.c	/^void rec_build_history(REC_COSMOPARAMS *param, HRATEEFF *rate_table, TWO_PHOTON_PARAMS *twog_params,$/;"	f
rec_dTmdlna	hyrec/history.c	/^double rec_dTmdlna(double xe, double Tm, double Tr, double H, double fHe, double nH, double energy_rate) {$/;"	f
rec_get_cosmoparam	hyrec/history.c	/^void rec_get_cosmoparam(FILE *fin, FILE *fout, REC_COSMOPARAMS *param) {$/;"	f
rec_get_xe_next1	hyrec/history.c	/^void rec_get_xe_next1(REC_COSMOPARAMS *param, double z1, double xe_in, double *xe_out,$/;"	f
rec_get_xe_next2	hyrec/history.c	/^void rec_get_xe_next2(REC_COSMOPARAMS *param, double z1, double xe_in, double Tm_in, double *xe_out, double *Tm_out,$/;"	f
rec_helium_dxedt	hyrec/helium.c	/^double rec_helium_dxedt(double xe, double nH0, double Tr0, double fHe, double H, double z) {$/;"	f
rec_interp1d	hyrec/hyrectools.c	/^double rec_interp1d(double x0, double dx, double *ytab, unsigned int Nx, double x) {$/;"	f
rec_interp2d	hyrec/hyrectools.c	/^double rec_interp2d(double x10, double dx1, double x20, double dx2, double **ytab,$/;"	f
rec_sahaHeI	hyrec/helium.c	/^double rec_sahaHeI(double nH0, double Tr0, double fHe, double z) {$/;"	f
rec_sahaHeII	hyrec/helium.c	/^double rec_sahaHeII(double nH0, double Tr0, double fHe, double z, double *xHeIII) {$/;"	f
rec_saha_xe_H	hyrec/helium.c	/^double rec_saha_xe_H(double nH0, double T0, double z) {$/;"	f
recfast	include/thermodynamics.h	/^  recfast,$/;"	e	enum:recombination_algorithm
recfast_AGauss1	include/common.h	/^  double recfast_AGauss1;         \/**< Amplitude of 1st Gaussian *\/$/;"	m	struct:precision
recfast_AGauss2	include/common.h	/^  double recfast_AGauss2;         \/**< Amplitude of 2nd Gaussian *\/$/;"	m	struct:precision
recfast_H_frac	include/common.h	/^  double recfast_H_frac;              \/**< governs time at which full equation of evolution for Tmat is used *\/$/;"	m	struct:precision
recfast_Heswitch	include/common.h	/^  int recfast_Heswitch;           \/**< recfast 1.4 parameter *\/$/;"	m	struct:precision
recfast_Hswitch	include/common.h	/^  int recfast_Hswitch;            \/**< recfast 1.5 switching parameter *\/$/;"	m	struct:precision
recfast_Nz0	include/common.h	/^  int recfast_Nz0;               \/**< number of integration steps *\/$/;"	m	struct:precision
recfast_delta_fudge_H	include/common.h	/^  double recfast_delta_fudge_H;   \/**< correction to H fudge factor in v1.5 *\/$/;"	m	struct:precision
recfast_delta_z_He_1	include/common.h	/^  double recfast_delta_z_He_1;        \/**< z range over which transition is smoothed *\/$/;"	m	struct:precision
recfast_delta_z_He_2	include/common.h	/^  double recfast_delta_z_He_2;        \/**< z range over which transition is smoothed *\/$/;"	m	struct:precision
recfast_delta_z_He_3	include/common.h	/^  double recfast_delta_z_He_3;        \/**< z range over which transition is smoothed *\/$/;"	m	struct:precision
recfast_fudge_H	include/common.h	/^  double recfast_fudge_H;         \/**< H fudge factor when recfast_Hswitch set to false (v1.4 fudging) *\/$/;"	m	struct:precision
recfast_fudge_He	include/common.h	/^  double recfast_fudge_He;        \/**< recfast 1.4 parameter *\/$/;"	m	struct:precision
recfast_wGauss1	include/common.h	/^  double recfast_wGauss1;         \/**< Width of 1st Gaussian *\/$/;"	m	struct:precision
recfast_wGauss2	include/common.h	/^  double recfast_wGauss2;         \/**< Width of 2nd Gaussian *\/$/;"	m	struct:precision
recfast_x_H0_trigger	include/common.h	/^  double recfast_x_H0_trigger;        \/**< value below which recfast uses the full equation for Hydrogen *\/$/;"	m	struct:precision
recfast_x_H0_trigger2	include/common.h	/^  double recfast_x_H0_trigger2;       \/**< a second threshold used in derivative routine *\/$/;"	m	struct:precision
recfast_x_H0_trigger_delta	include/common.h	/^  double recfast_x_H0_trigger_delta;  \/**< x_H range over which transition is smoothed *\/$/;"	m	struct:precision
recfast_x_He0_trigger	include/common.h	/^  double recfast_x_He0_trigger;       \/**< value below which recfast uses the full equation for Helium *\/$/;"	m	struct:precision
recfast_x_He0_trigger2	include/common.h	/^  double recfast_x_He0_trigger2;      \/**< a second threshold used in derivative routine *\/$/;"	m	struct:precision
recfast_x_He0_trigger_delta	include/common.h	/^  double recfast_x_He0_trigger_delta; \/**< x_He range over which transition is smoothed *\/$/;"	m	struct:precision
recfast_zGauss1	include/common.h	/^  double recfast_zGauss1;         \/**< ln(1+z) of 1st Gaussian *\/$/;"	m	struct:precision
recfast_zGauss2	include/common.h	/^  double recfast_zGauss2;         \/**< ln(1+z) of 2nd Gaussian *\/$/;"	m	struct:precision
recfast_z_He_1	include/common.h	/^  double recfast_z_He_1;              \/**< down to which redshift Helium fully ionized *\/$/;"	m	struct:precision
recfast_z_He_2	include/common.h	/^  double recfast_z_He_2;              \/**< down to which redshift first Helium recombination not complete *\/$/;"	m	struct:precision
recfast_z_He_3	include/common.h	/^  double recfast_z_He_3;              \/**< down to which redshift Helium singly ionized *\/$/;"	m	struct:precision
recfast_z_initial	include/common.h	/^  double recfast_z_initial;      \/**< initial redshift in recfast *\/$/;"	m	struct:precision
recombination	include/thermodynamics.h	/^  enum recombination_algorithm recombination; \/**< recombination code *\/$/;"	m	struct:thermo	typeref:enum:thermo::recombination_algorithm
recombination	include/thermodynamics.h	/^struct recombination {$/;"	s
recombination_algorithm	include/thermodynamics.h	/^enum recombination_algorithm {$/;"	g
recombination_table	include/thermodynamics.h	/^  double * recombination_table; \/**< table recombination_table[index_z*preco->re_size+index_re] with all other quantities (array of size preco->rt_size*preco->re_size) *\/$/;"	m	struct:recombination
reduce_tree	tools/quadrature.c	/^int reduce_tree(qss_node *node, int level){$/;"	f
refcount	python/classy.c	/^  size_t refcount;$/;"	m	struct:__anon12	file:
reio_bins_tanh	include/thermodynamics.h	/^  reio_bins_tanh,  \/**< binned reionization history with tanh inteprolation between bins *\/$/;"	e	enum:reionization_parametrization
reio_camb	include/thermodynamics.h	/^  reio_camb,  \/**< reionization parameterized like in CAMB *\/$/;"	e	enum:reionization_parametrization
reio_half_tanh	include/thermodynamics.h	/^  reio_half_tanh,  \/**< half a tanh, instead of the full tanh *\/$/;"	e	enum:reionization_parametrization
reio_inter	include/thermodynamics.h	/^  reio_inter       \/**< linear interpolation between specified points *\/$/;"	e	enum:reionization_parametrization
reio_inter_num	include/thermodynamics.h	/^  int reio_inter_num; \/**< with how many jumps do we want to describe reionization? *\/$/;"	m	struct:thermo
reio_inter_xe	include/thermodynamics.h	/^  double * reio_inter_xe; \/**< discrete \\f$ X_e(z)\\f$ values *\/$/;"	m	struct:thermo
reio_inter_z	include/thermodynamics.h	/^  double * reio_inter_z; \/**< discrete z values *\/$/;"	m	struct:thermo
reio_many_tanh	include/thermodynamics.h	/^  reio_many_tanh,  \/**< similar to reio_camb but with more than one tanh *\/$/;"	e	enum:reionization_parametrization
reio_none	include/thermodynamics.h	/^  reio_none, \/**< no reionization *\/$/;"	e	enum:reionization_parametrization
reio_num_params	include/thermodynamics.h	/^  int reio_num_params; \/**< length of vector reionization_parameters *\/$/;"	m	struct:reionization
reio_num_z	include/thermodynamics.h	/^  int reio_num_z; \/**< number of reionization jumps *\/$/;"	m	struct:reionization
reio_parametrization	include/thermodynamics.h	/^  enum reionization_parametrization reio_parametrization; \/**< reionization scheme *\/$/;"	m	struct:thermo	typeref:enum:thermo::reionization_parametrization
reio_tau	include/thermodynamics.h	/^  reio_tau \/**< input = tau *\/$/;"	e	enum:reionization_z_or_tau
reio_z	include/thermodynamics.h	/^  reio_z,  \/**< input = redshift *\/$/;"	e	enum:reionization_z_or_tau
reio_z_or_tau	include/thermodynamics.h	/^  enum reionization_z_or_tau reio_z_or_tau; \/**< is the input parameter the reionization redshift or optical depth? *\/$/;"	m	struct:thermo	typeref:enum:thermo::reionization_z_or_tau
reionization	include/thermodynamics.h	/^struct reionization {$/;"	s
reionization_exponent	include/thermodynamics.h	/^  double reionization_exponent; \/**< shape of H reionization *\/$/;"	m	struct:thermo
reionization_optical_depth	include/thermodynamics.h	/^  double reionization_optical_depth; \/**< reionization optical depth inferred from reionization history *\/$/;"	m	struct:reionization
reionization_optical_depth_tol	include/common.h	/^  double reionization_optical_depth_tol; \/**< fractional error on optical_depth *\/$/;"	m	struct:precision
reionization_parameters	include/thermodynamics.h	/^  double * reionization_parameters; \/**< vector containing all reionization parameters necessary to compute xe(z) *\/$/;"	m	struct:reionization
reionization_parametrization	include/thermodynamics.h	/^enum reionization_parametrization {$/;"	g
reionization_sampling	include/common.h	/^  double reionization_sampling; \/**< control stepsize in z during reionization *\/$/;"	m	struct:precision
reionization_start_factor	include/common.h	/^  double reionization_start_factor; \/**< parameter for CAMB-like parametrization *\/$/;"	m	struct:precision
reionization_table	include/thermodynamics.h	/^  double * reionization_table; \/**< table reionization_table[index_z*preio->re_size+index_re] with all other quantities (array of size preio->rt_size*preio->re_size) *\/$/;"	m	struct:reionization
reionization_width	include/thermodynamics.h	/^  double reionization_width; \/**< width of H reionization *\/$/;"	m	struct:thermo
reionization_z_or_tau	include/thermodynamics.h	/^enum reionization_z_or_tau {$/;"	g
reionization_z_start_max	include/common.h	/^  double reionization_z_start_max; \/**< maximum redshift at which reionization should start. If not, return an error. *\/$/;"	m	struct:precision
repeated_pattern	include/evolver_ndf15.h	/^	int repeated_pattern;$/;"	m	struct:jacobian
required_computation_stage	include/input.h	/^  enum computation_stage required_computation_stage;$/;"	m	struct:fzerofun_workspace	typeref:enum:fzerofun_workspace::computation_stage
rho_plus_p_shear	include/perturbations.h	/^  double rho_plus_p_shear;	\/**< total (rho+p)*shear (gives delta Tij) *\/$/;"	m	struct:perturb_workspace
rho_plus_p_theta	include/perturbations.h	/^  double rho_plus_p_theta;	\/**< total (rho+p)*theta perturbation (gives delta Toi) *\/$/;"	m	struct:perturb_workspace
rho_plus_p_theta_fld	include/perturbations.h	/^  double rho_plus_p_theta_fld; \/**< velocity divergence of fluid, not so trivial in PPF scheme *\/$/;"	m	struct:perturb_workspace
right	include/quadrature.h	/^  struct  adaptive_integration_tree_node *left, *right;	\/* Pointer to left child. *\/$/;"	m	struct:adaptive_integration_tree_node	typeref:struct:adaptive_integration_tree_node::
right_border	include/hermite3_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
right_border	include/hermite4_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
right_border	include/hermite6_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
right_border	tools/hermite3_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
right_border	tools/hermite4_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
right_border	tools/hermite6_interpolation_csource.h	/^double left_border, right_border, next_border;$/;"	v
rk	include/common.h	/^  rk, \/* Runge-Kutta integrator *\/$/;"	e	enum:evolver_type
rkck	tools/dei_rkck.c	/^int rkck($/;"	f
rkqs	tools/dei_rkck.c	/^int rkqs(double *x, double htry, double eps,$/;"	f
root	include/output.h	/^  FileName root; \/**< root for all file names *\/$/;"	m	struct:output
root	python/classy.c	/^  __Pyx_StructField root;$/;"	m	struct:__anon5	file:
rs_d	include/thermodynamics.h	/^  double rs_d;    \/**< comoving sound horizon at baryon drag *\/$/;"	m	struct:thermo
rs_rec	include/thermodynamics.h	/^  double rs_rec;  \/**< comoving sound horizon at recombination *\/$/;"	m	struct:thermo
rsa_MD	include/perturbations.h	/^enum rsa_method {rsa_null,rsa_MD,rsa_MD_with_reio,rsa_none};$/;"	e	enum:rsa_method
rsa_MD_with_reio	include/perturbations.h	/^enum rsa_method {rsa_null,rsa_MD,rsa_MD_with_reio,rsa_none};$/;"	e	enum:rsa_method
rsa_delta_g	include/perturbations.h	/^  double rsa_delta_g;  \/**< photon density in radiation streaming approximation *\/$/;"	m	struct:perturb_workspace
rsa_delta_ur	include/perturbations.h	/^  double rsa_delta_ur; \/**< photon density in radiation streaming approximation *\/$/;"	m	struct:perturb_workspace
rsa_flags	include/perturbations.h	/^enum rsa_flags {rsa_off, rsa_on};$/;"	g
rsa_method	include/perturbations.h	/^enum rsa_method {rsa_null,rsa_MD,rsa_MD_with_reio,rsa_none};$/;"	g
rsa_none	include/perturbations.h	/^enum rsa_method {rsa_null,rsa_MD,rsa_MD_with_reio,rsa_none};$/;"	e	enum:rsa_method
rsa_null	include/perturbations.h	/^enum rsa_method {rsa_null,rsa_MD,rsa_MD_with_reio,rsa_none};$/;"	e	enum:rsa_method
rsa_off	include/perturbations.h	/^enum rsa_flags {rsa_off, rsa_on};$/;"	e	enum:rsa_flags
rsa_on	include/perturbations.h	/^enum rsa_flags {rsa_off, rsa_on};$/;"	e	enum:rsa_flags
rsa_theta_g	include/perturbations.h	/^  double rsa_theta_g;  \/**< photon velocity in radiation streaming approximation *\/$/;"	m	struct:perturb_workspace
rsa_theta_ur	include/perturbations.h	/^  double rsa_theta_ur; \/**< photon velocity in radiation streaming approximation *\/$/;"	m	struct:perturb_workspace
rt_size	include/thermodynamics.h	/^  int rt_size;                 \/**< number of lines (redshift steps) in the table *\/$/;"	m	struct:reionization
rt_size	include/thermodynamics.h	/^  int rt_size; \/**< number of lines (redshift steps) in the table *\/$/;"	m	struct:recombination
running	include/primordial.h	/^  double ** running;   \/**< all runnings in matrix form: running[index_md][index_ic1_ic2] *\/$/;"	m	struct:primordial
s	python/classy.c	/^typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;$/;"	m	struct:__anon2	file:
sBBN_file	include/common.h	/^  FileName sBBN_file;$/;"	m	struct:precision
s_l	include/perturbations.h	/^  double * s_l;     \/**< array of freestreaming coefficients \\f$ s_l = \\sqrt{1-K*(l^2-1)\/k^2} \\f$*\/$/;"	m	struct:perturb_workspace
safe_phi_scf	include/common.h	/^  double safe_phi_scf;$/;"	m	struct:precision
scalar_perturbations_data	include/perturbations.h	/^  double * scalar_perturbations_data[_MAX_NUMBER_OF_K_FILES_]; \/**< Array of double pointers to perturbation output for scalars *\/$/;"	m	struct:perturbs
scalar_titles	include/perturbations.h	/^  char scalar_titles[_MAXTITLESTRINGLENGTH_]; \/**< _DELIMITER_ separated string of titles for scalar perturbation output files. *\/$/;"	m	struct:perturbs
scf_parameters	include/background.h	/^  double * scf_parameters;  \/**< list of parameters describing the scalar field potential *\/$/;"	m	struct:background
scf_parameters_size	include/background.h	/^  int scf_parameters_size;  \/**< size of scf_parameters *\/$/;"	m	struct:background
scf_tuning_index	include/background.h	/^  int scf_tuning_index;     \/**< index in scf_parameters used for tuning *\/$/;"	m	struct:background
second_order_CLASS	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	e	enum:tca_method
second_order_CRS	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	e	enum:tca_method
selection	include/perturbations.h	/^  enum selection_type selection;                \/**< type of selection functions *\/$/;"	m	struct:perturbs	typeref:enum:perturbs::selection_type
selection_bias	include/transfer.h	/^  double selection_bias[_SELECTION_NUM_MAX_];               \/**< light-to-mass bias in the transfer function of density number count *\/$/;"	m	struct:transfers
selection_cut_at_sigma	include/common.h	/^  double selection_cut_at_sigma;$/;"	m	struct:precision
selection_delta_tau	include/perturbations.h	/^  double selection_delta_tau; \/**< used in presence of selection functions (for matter density, cosmic shear...) *\/$/;"	m	struct:perturbs
selection_function	include/perturbations.h	/^  double * selection_function; \/**< selection function W(tau), normalized to \\f$ \\int W(tau) dtau=1 \\f$, stored in selection_function[bin*ppt->tau_size+index_tau] *\/$/;"	m	struct:perturbs
selection_magnification_bias	include/transfer.h	/^  double selection_magnification_bias[_SELECTION_NUM_MAX_]; \/**< magnification bias in the transfer function of density number count *\/$/;"	m	struct:transfers
selection_max_of_tau_max	include/perturbations.h	/^  double selection_max_of_tau_max; \/**< used in presence of selection functions (for matter density, cosmic shear...) *\/$/;"	m	struct:perturbs
selection_mean	include/perturbations.h	/^  double selection_mean[_SELECTION_NUM_MAX_]; \/**< centers of selection functions *\/$/;"	m	struct:perturbs
selection_min_of_tau_min	include/perturbations.h	/^  double selection_min_of_tau_min; \/**< used in presence of selection functions (for matter density, cosmic shear...) *\/$/;"	m	struct:perturbs
selection_num	include/perturbations.h	/^  int selection_num;                            \/**< number of selection functions$/;"	m	struct:perturbs
selection_sampling	include/common.h	/^  double selection_sampling;$/;"	m	struct:precision
selection_sampling_bessel	include/common.h	/^  double selection_sampling_bessel;$/;"	m	struct:precision
selection_sampling_bessel_los	include/common.h	/^  double selection_sampling_bessel_los;$/;"	m	struct:precision
selection_tau	include/perturbations.h	/^  double * selection_tau; \/**< value of conformal time at the center of each bin *\/$/;"	m	struct:perturbs
selection_tau_max	include/perturbations.h	/^  double * selection_tau_max; \/**< value of conformal time above which W(tau) is considered to vanish for each bin *\/$/;"	m	struct:perturbs
selection_tau_min	include/perturbations.h	/^  double * selection_tau_min; \/**< value of conformal time below which W(tau) is considered to vanish for each bin *\/$/;"	m	struct:perturbs
selection_tophat_edge	include/common.h	/^  double selection_tophat_edge;$/;"	m	struct:precision
selection_type	include/perturbations.h	/^enum selection_type {gaussian,tophat,dirac};$/;"	g
selection_width	include/perturbations.h	/^  double selection_width[_SELECTION_NUM_MAX_];  \/**< widths of selection functions *\/$/;"	m	struct:perturbs
sgnK	include/background.h	/^  int sgnK; \/**< K\/|K|: -1, 0 or 1 *\/$/;"	m	struct:background
sgnK	include/transfer.h	/^  int sgnK; \/**< 0 (flat), 1 (positive curvature, spherical, closed), -1 (negative curvature, hyperbolic, open) *\/$/;"	m	struct:transfer_workspace
shape	python/classy.c	/^  Py_ssize_t shape, strides, suboffsets;$/;"	m	struct:__anon11	file:
shear_ncdm	include/perturbations.h	/^  double * shear_ncdm;	\/**< shear for each ncdm species *\/$/;"	m	struct:perturb_workspace
shooting_error	include/background.h	/^  ErrorMsg shooting_error; \/**< Error message from shooting failed. *\/$/;"	m	struct:background
shooting_failed	include/background.h	/^  short shooting_failed;  \/**< flag is set to true if shooting failed. *\/$/;"	m	struct:background
short_info	include/background.h	/^  short short_info;  \/**< flag for calling background_at_eta and return little information *\/$/;"	m	struct:background
sigma8	include/spectra.h	/^  double sigma8;    \/**< sigma8 parameter *\/$/;"	m	struct:spectra
sinK	include/hermite3_interpolation_csource.h	/^double *sinK = pHIS->sinK;$/;"	v
sinK	include/hermite4_interpolation_csource.h	/^double *sinK = pHIS->sinK;$/;"	v
sinK	include/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
sinK	include/hyperspherical.h	/^  double *sinK;          \/\/Vector of sin_K(xvec)$/;"	m	struct:HypersphericalInterpolationStructure
sinK	tools/hermite3_interpolation_csource.h	/^double *sinK = pHIS->sinK;$/;"	v
sinK	tools/hermite4_interpolation_csource.h	/^double *sinK = pHIS->sinK;$/;"	v
sinK	tools/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
sinKm	include/hermite3_interpolation_csource.h	/^double cotKm=0,sinKm=0;$/;"	v
sinKm	include/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
sinKm	include/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKm	tools/hermite3_interpolation_csource.h	/^double cotKm=0,sinKm=0;$/;"	v
sinKm	tools/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
sinKm	tools/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKm2	include/hermite3_interpolation_csource.h	/^double sinKm2;$/;"	v
sinKm2	include/hermite4_interpolation_csource.h	/^double sinKm2, sinKp2;$/;"	v
sinKm2	include/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKm2	tools/hermite3_interpolation_csource.h	/^double sinKm2;$/;"	v
sinKm2	tools/hermite4_interpolation_csource.h	/^double sinKm2, sinKp2;$/;"	v
sinKm2	tools/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKp	include/hermite3_interpolation_csource.h	/^double cotKp=0,sinKp=0;$/;"	v
sinKp	include/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
sinKp	include/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKp	tools/hermite3_interpolation_csource.h	/^double cotKp=0,sinKp=0;$/;"	v
sinKp	tools/hermite4_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0;$/;"	v
sinKp	tools/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKp2	include/hermite3_interpolation_csource.h	/^double sinKp2;$/;"	v
sinKp2	include/hermite4_interpolation_csource.h	/^double sinKm2, sinKp2;$/;"	v
sinKp2	include/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
sinKp2	tools/hermite3_interpolation_csource.h	/^double sinKp2;$/;"	v
sinKp2	tools/hermite4_interpolation_csource.h	/^double sinKm2, sinKp2;$/;"	v
sinKp2	tools/hermite6_interpolation_csource.h	/^double cotKm=0,cotKp=0,sinKm=0,sinKp=0, sinKm2, sinKp2;$/;"	v
size	include/parser.h	/^  int size;$/;"	m	struct:file_content
size	python/classy.c	/^  size_t size;$/;"	m	struct:__anon3	file:
size_scalar_perturbation_data	include/perturbations.h	/^ int size_scalar_perturbation_data[_MAX_NUMBER_OF_K_FILES_]; \/**< Array of sizes of scalar double pointers  *\/$/;"	m	struct:perturbs
size_tensor_perturbation_data	include/perturbations.h	/^ int size_tensor_perturbation_data[_MAX_NUMBER_OF_K_FILES_]; \/**< Array of sizes of tensor double pointers  *\/$/;"	m	struct:perturbs
size_vector_perturbation_data	include/perturbations.h	/^ int size_vector_perturbation_data[_MAX_NUMBER_OF_K_FILES_]; \/**< Array of sizes of vector double pointers  *\/$/;"	m	struct:perturbs
smallest_allowed_variation	include/common.h	/^  double smallest_allowed_variation; \/**< machine-dependent, assigned automatically by the code *\/$/;"	m	struct:precision
solveTXeqB	hyrec/hydrogen.c	/^void solveTXeqB(double *diag, double *updiag, double *dndiag,$/;"	f
solve_real_virt	hyrec/hydrogen.c	/^void solve_real_virt(double xr[2], double xv[NVIRT], double Trr[2][2], double *Trv[2], double *Tvr[2],$/;"	f
sort_x_and_w	tools/quadrature.c	/^int sort_x_and_w(double *x, double *w, double *workx, double *workw, int startidx, int endidx){$/;"	f
sources	include/perturbations.h	/^  double *** sources; \/**< Pointer towards the source interpolation table$/;"	m	struct:perturbs
sources	include/transfer.h	/^  double * sources;              \/**< sources[index_tau]: sources$/;"	m	struct:transfer_workspace
sp	python/classy.c	/^  struct spectra sp;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::spectra	file:
sp	test/test_degeneracy.c	/^struct spectra sp;          \/* for output spectra *\/$/;"	v	typeref:struct:spectra
spJ	include/evolver_ndf15.h	/^	sp_mat *spJ; \/* Stores the matrix we want to decompose *\/$/;"	m	struct:jacobian
sp_amd	tools/sparse.c	/^int sp_amd(int *Cp, int *Ci, int n, int nzmax, int *P, int *W){$/;"	f
sp_ludcmp	tools/sparse.c	/^int sp_ludcmp(sp_num *N, sp_mat *A, double pivtol){$/;"	f
sp_lusolve	tools/sparse.c	/^int sp_lusolve(sp_num *N, double *b, double *x){$/;"	f
sp_mat	include/sparse.h	/^} sp_mat;$/;"	t	typeref:struct:sparse_matrix
sp_mat_alloc	tools/sparse.c	/^int sp_mat_alloc(sp_mat** A, int ncols, int nrows, int maxnz, ErrorMsg error_message){$/;"	f
sp_mat_free	tools/sparse.c	/^int sp_mat_free(sp_mat *A){$/;"	f
sp_num	include/sparse.h	/^} sp_num;$/;"	t	typeref:struct:sparse_numerical
sp_num_alloc	tools/sparse.c	/^int sp_num_alloc(sp_num** N, int n, ErrorMsg error_message){$/;"	f
sp_num_free	tools/sparse.c	/^int sp_num_free(sp_num *N){$/;"	f
sp_refactor	tools/sparse.c	/^int sp_refactor(sp_num *N, sp_mat *A){$/;"	f
sp_splsolve	tools/sparse.c	/^int sp_splsolve(sp_mat *G, sp_mat *B, int k, int*xik, int top, double *x, int *pinv){$/;"	f
sp_tdfs	tools/sparse.c	/^int sp_tdfs(int j, int k, int *head, const int *next, int *post, int *stack){$/;"	f
sp_wclear	tools/sparse.c	/^int sp_wclear(int mark, int lemax, int *w, int n){$/;"	f
sparse_matrix	include/sparse.h	/^typedef struct sparse_matrix{$/;"	s
sparse_numerical	include/sparse.h	/^typedef struct sparse_numerical{$/;"	s
sparse_stuff_initialized	include/evolver_ndf15.h	/^	int sparse_stuff_initialized;$/;"	m	struct:jacobian
spatial_curvature	include/background.h	/^enum spatial_curvature {flat,open,closed};$/;"	g
spectra	include/spectra.h	/^struct spectra {$/;"	s
spectra_bandpower	source/spectra.c	/^int spectra_bandpower(struct spectra * psp,$/;"	f
spectra_cl_at_l	source/spectra.c	/^int spectra_cl_at_l($/;"	f
spectra_cls	source/spectra.c	/^int spectra_cls($/;"	f
spectra_compute_cl	source/spectra.c	/^int spectra_compute_cl($/;"	f
spectra_firstline_and_ic_suffix	source/spectra.c	/^ int spectra_firstline_and_ic_suffix(struct perturbs *ppt,$/;"	f
spectra_free	source/spectra.c	/^int spectra_free($/;"	f
spectra_indices	source/spectra.c	/^int spectra_indices($/;"	f
spectra_init	source/spectra.c	/^int spectra_init($/;"	f
spectra_k_and_tau	source/spectra.c	/^int spectra_k_and_tau($/;"	f
spectra_matter_transfers	source/spectra.c	/^int spectra_matter_transfers($/;"	f
spectra_output_tk_data	source/spectra.c	/^int spectra_output_tk_data($/;"	f
spectra_output_tk_titles	source/spectra.c	/^int spectra_output_tk_titles(struct background *pba,$/;"	f
spectra_pk	source/spectra.c	/^int spectra_pk($/;"	f
spectra_pk_at_k_and_z	source/spectra.c	/^int spectra_pk_at_k_and_z($/;"	f
spectra_pk_at_z	source/spectra.c	/^int spectra_pk_at_z($/;"	f
spectra_pk_nl_at_k_and_z	source/spectra.c	/^int spectra_pk_nl_at_k_and_z($/;"	f
spectra_pk_nl_at_z	source/spectra.c	/^int spectra_pk_nl_at_z($/;"	f
spectra_sigma	source/spectra.c	/^int spectra_sigma($/;"	f
spectra_tk_at_k_and_z	source/spectra.c	/^int spectra_tk_at_k_and_z($/;"	f
spectra_tk_at_z	source/spectra.c	/^int spectra_tk_at_z($/;"	f
spectra_verbose	include/spectra.h	/^  short spectra_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:spectra
square	hyrec/hydrogen.c	/^double square(double x) {$/;"	f
start_large_k_at_tau_h_over_tau_k	include/common.h	/^  double start_large_k_at_tau_h_over_tau_k;  \/**< largest wavelengths start being sampled when mode is sufficiently outside Hubble scale. This is quantified in terms of the ratio of hubble time scale to wavenumber time scale, \\f$ \\tau_h\/\\tau_k \\f$ which is roughly equal to (k*tau). Start when this ratio equals start_large_k_at_tau_k_over_tau_h. Decrease this value to start integrating the wavenumbers earlier in time. *\/$/;"	m	struct:precision
start_small_k_at_tau_c_over_tau_h	include/common.h	/^  double start_small_k_at_tau_c_over_tau_h; \/**< largest wavelengths start being sampled when universe is sufficiently opaque. This is quantified in terms of the ratio of thermo to hubble time scales, \\f$ \\tau_c\/\\tau_H \\f$. Start when start_largek_at_tau_c_over_tau_h equals this ratio. Decrease this value to start integrating the wavenumbers earlier in time. *\/$/;"	m	struct:precision
start_sources_at_tau_c_over_tau_h	include/common.h	/^  double start_sources_at_tau_c_over_tau_h; \/**< sources start being sampled when universe is sufficiently opaque. This is quantified in terms of the ratio of thermo to hubble time scales, \\f$ \\tau_c\/\\tau_H \\f$. Start when start_sources_at_tau_c_over_tau_h equals this ratio. Decrease this value to start sampling the sources earlier in time. *\/$/;"	m	struct:precision
stepmin	include/dei_rkck.h	/^  double stepmin;$/;"	m	struct:generic_integrator_workspace
store_perturbations	include/perturbations.h	/^  int store_perturbations;  \/**< Do we want to store perturbations? *\/$/;"	m	struct:perturbs
strides	python/classy.c	/^  Py_ssize_t shape, strides, suboffsets;$/;"	m	struct:__anon11	file:
struct_alignment	python/classy.c	/^  size_t struct_alignment;$/;"	m	struct:__anon5	file:
suboffsets	python/classy.c	/^  Py_ssize_t shape, strides, suboffsets;$/;"	m	struct:__anon11	file:
switch_dop	include/perturbations.h	/^  int switch_dop;  \/**< in temperature calculation, do we want to include the Doppler term? *\/$/;"	m	struct:perturbs
switch_eisw	include/perturbations.h	/^  int switch_eisw; \/**< in temperature calculation, do we want to include the early integrated Sachs Wolfe term? *\/$/;"	m	struct:perturbs
switch_lisw	include/perturbations.h	/^  int switch_lisw; \/**< in temperature calculation, do we want to include the late integrated Sachs Wolfe term? *\/$/;"	m	struct:perturbs
switch_pol	include/perturbations.h	/^  int switch_pol;  \/**< in temperature calculation, do we want to include the polarization-related term? *\/$/;"	m	struct:perturbs
switch_sw	include/perturbations.h	/^  int switch_sw;   \/**< in temperature calculation, do we want to include the intrinsic temperature + Sachs Wolfe term? *\/$/;"	m	struct:perturbs
synchronous	include/perturbations.h	/^  synchronous \/**< synchronous gauge with \\f$ \\theta_{cdm} = 0 \\f$ by convention *\/$/;"	e	enum:possible_gauges
sz	include/growTable.h	/^  long sz;      \/**< total size *\/$/;"	m	struct:__anon33
tablesize	include/background.h	/^  int tablesize;$/;"	m	struct:background_parameters_for_distributions
target_name	include/input.h	/^  enum target_names * target_name;$/;"	m	struct:fzerofun_workspace	typeref:enum:fzerofun_workspace::target_names
target_names	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	g
target_quantity	include/primordial.h	/^enum target_quantity {$/;"	g
target_size	include/input.h	/^  int target_size;$/;"	m	struct:fzerofun_workspace
target_value	include/input.h	/^  double * target_value;$/;"	m	struct:fzerofun_workspace
tau	include/nonlinear.h	/^  double * tau;    \/**< tau[index_tau] = list of time values *\/$/;"	m	struct:nonlinear
tau0_minus_tau	include/transfer.h	/^  double * tau0_minus_tau;       \/**< tau0_minus_tau[index_tau]: values of (tau0 - tau) *\/$/;"	m	struct:transfer_workspace
tau0_minus_tau_cut	include/transfer.h	/^  double tau0_minus_tau_cut; \/**< critical value of (tau0-tau) in time cut approximation for the wavenumber at hand *\/$/;"	m	struct:transfer_workspace
tau_cut	include/thermodynamics.h	/^  double tau_cut; \/**< at at which the visibility goes below a fixed fraction of the maximum visibility, used for an approximation in perturbation module *\/$/;"	m	struct:thermo
tau_d	include/thermodynamics.h	/^  double tau_d;   \/**< baryon drag time *\/$/;"	m	struct:thermo
tau_free_streaming	include/thermodynamics.h	/^  double tau_free_streaming;   \/**< minimum value of tau at which sfree-streaming approximation can be switched on *\/$/;"	m	struct:thermo
tau_ini	include/thermodynamics.h	/^  double tau_ini; \/**< initial conformal time at which thermodynamical variables have been be integrated *\/$/;"	m	struct:thermo
tau_rec	include/thermodynamics.h	/^  double tau_rec; \/**< conformal time at which the visibility reaches its maximum (= recombination time) *\/$/;"	m	struct:thermo
tau_reio	include/thermodynamics.h	/^  double tau_reio; \/**< if above set to tau, input value of reionization optical depth *\/$/;"	m	struct:thermo
tau_sampling	include/perturbations.h	/^  double * tau_sampling; \/**< tau_sampling[index_tau] = list of tau values *\/$/;"	m	struct:perturbs
tau_size	include/nonlinear.h	/^  int tau_size;    \/**< tau_size = number of values *\/$/;"	m	struct:nonlinear
tau_size	include/perturbations.h	/^  int tau_size;          \/**< tau_size = number of values *\/$/;"	m	struct:perturbs
tau_size	include/transfer.h	/^  int tau_size;                  \/**< number of discrete time values for a given type *\/$/;"	m	struct:transfer_workspace
tau_size_max	include/transfer.h	/^  int tau_size_max;              \/**< maximum number of discrete time values for all types *\/$/;"	m	struct:transfer_workspace
tau_table	include/background.h	/^  double * tau_table;        \/**< vector tau_table[index_tau] with values of \\f$ \\tau \\f$ (conformal time) *\/$/;"	m	struct:background
tca_flags	include/perturbations.h	/^enum tca_flags {tca_on, tca_off};$/;"	g
tca_method	include/perturbations.h	/^enum tca_method {first_order_MB,first_order_CAMB,first_order_CLASS,second_order_CRS,second_order_CLASS,compromise_CLASS};$/;"	g
tca_off	include/perturbations.h	/^enum tca_flags {tca_on, tca_off};$/;"	e	enum:tca_flags
tca_on	include/perturbations.h	/^enum tca_flags {tca_on, tca_off};$/;"	e	enum:tca_flags
tca_shear_g	include/perturbations.h	/^  double tca_shear_g;  \/**< photon shear in tight-coupling approximation *\/$/;"	m	struct:perturb_workspace
tca_slip	include/perturbations.h	/^  double tca_slip;     \/**< photon-baryon slip in tight-coupling approximation *\/$/;"	m	struct:perturb_workspace
tensor_method	include/perturbations.h	/^  enum tensor_methods tensor_method;  \/**< way to treat neutrinos in tensor perturbations(neglect, approximate as massless, take exact equations) *\/$/;"	m	struct:perturbs	typeref:enum:perturbs::tensor_methods
tensor_methods	include/perturbations.h	/^enum tensor_methods {tm_photons_only,tm_massless_approximation,tm_exact};$/;"	g
tensor_perturbations_data	include/perturbations.h	/^  double * tensor_perturbations_data[_MAX_NUMBER_OF_K_FILES_]; \/**< Array of double pointers to perturbation output for tensors *\/$/;"	m	struct:perturbs
tensor_titles	include/perturbations.h	/^  char tensor_titles[_MAXTITLESTRINGLENGTH_]; \/**< _DELIMITER_ separated string of titles for tensor perturbation output files. *\/$/;"	m	struct:perturbs
th	python/classy.c	/^  struct thermo th;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::thermo	file:
th	test/test_degeneracy.c	/^struct thermo th;           \/* for thermodynamics *\/$/;"	v	typeref:struct:thermo
th_size	include/thermodynamics.h	/^  int th_size;                \/**< size of thermodynamics vector *\/$/;"	m	struct:thermo
thermo	include/thermodynamics.h	/^struct thermo$/;"	s
thermo_rate_smoothing_radius	include/common.h	/^  int thermo_rate_smoothing_radius; \/**< plays a minor (almost aesthetic) role in the definition of the variation rate of thermodynamical quantities *\/$/;"	m	struct:precision
thermodynamics_at_z	source/thermodynamics.c	/^int thermodynamics_at_z($/;"	f
thermodynamics_derivs_with_recfast	source/thermodynamics.c	/^int thermodynamics_derivs_with_recfast($/;"	f
thermodynamics_energy_injection	source/thermodynamics.c	/^int thermodynamics_energy_injection($/;"	f
thermodynamics_free	source/thermodynamics.c	/^int thermodynamics_free($/;"	f
thermodynamics_get_xe_before_reionization	source/thermodynamics.c	/^int thermodynamics_get_xe_before_reionization($/;"	f
thermodynamics_helium_from_bbn	source/thermodynamics.c	/^int thermodynamics_helium_from_bbn($/;"	f
thermodynamics_indices	source/thermodynamics.c	/^int thermodynamics_indices($/;"	f
thermodynamics_init	source/thermodynamics.c	/^int thermodynamics_init($/;"	f
thermodynamics_merge_reco_and_reio	source/thermodynamics.c	/^int thermodynamics_merge_reco_and_reio($/;"	f
thermodynamics_onthespot_energy_injection	source/thermodynamics.c	/^int thermodynamics_onthespot_energy_injection($/;"	f
thermodynamics_output_data	source/thermodynamics.c	/^int thermodynamics_output_data(struct background * pba,$/;"	f
thermodynamics_output_titles	source/thermodynamics.c	/^int thermodynamics_output_titles(struct background * pba,$/;"	f
thermodynamics_parameters_and_workspace	include/thermodynamics.h	/^struct thermodynamics_parameters_and_workspace {$/;"	s
thermodynamics_recombination	source/thermodynamics.c	/^int thermodynamics_recombination($/;"	f
thermodynamics_recombination_with_hyrec	source/thermodynamics.c	/^int thermodynamics_recombination_with_hyrec($/;"	f
thermodynamics_recombination_with_recfast	source/thermodynamics.c	/^int thermodynamics_recombination_with_recfast($/;"	f
thermodynamics_reionization	source/thermodynamics.c	/^int thermodynamics_reionization($/;"	f
thermodynamics_reionization_function	source/thermodynamics.c	/^int thermodynamics_reionization_function($/;"	f
thermodynamics_reionization_sample	source/thermodynamics.c	/^int thermodynamics_reionization_sample($/;"	f
thermodynamics_table	include/thermodynamics.h	/^  double * thermodynamics_table; \/**< table thermodynamics_table[index_z*pth->tt_size+pba->index_th] with all other quantities (array of size th_size*tt_size) *\/$/;"	m	struct:thermo
thermodynamics_tanh	source/thermodynamics.c	/^int thermodynamics_tanh(double x,$/;"	f
thermodynamics_verbose	include/thermodynamics.h	/^  short thermodynamics_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:thermo
theta_m	include/perturbations.h	/^  double theta_m;	\/**< velocity divergence theta of all non-relativistic species *\/$/;"	m	struct:perturb_workspace
theta_ncdm	include/perturbations.h	/^  double * theta_ncdm;	\/**< velocity divergence theta of each ncdm species *\/$/;"	m	struct:perturb_workspace
theta_s	include/input.h	/^enum target_names {theta_s, Omega_dcdmdr, omega_dcdmdr, Omega_scf, Omega_ini_dcdm, omega_ini_dcdm};$/;"	e	enum:target_names
three_ceff2_ur	include/perturbations.h	/^  double three_ceff2_ur;\/**< 3 x effective squared sound speed for the ultrarelativistic perturbations *\/$/;"	m	struct:perturbs
three_cvis2_ur	include/perturbations.h	/^  double three_cvis2_ur;\/**< 3 x effective viscosity parameter for the ultrarelativistic perturbations *\/$/;"	m	struct:perturbs
tight_coupling_approximation	include/common.h	/^  int tight_coupling_approximation; \/**< method for tight coupling approximation *\/$/;"	m	struct:precision
tight_coupling_trigger_tau_c_over_tau_h	include/common.h	/^  double tight_coupling_trigger_tau_c_over_tau_h;$/;"	m	struct:precision
tight_coupling_trigger_tau_c_over_tau_k	include/common.h	/^  double tight_coupling_trigger_tau_c_over_tau_k;$/;"	m	struct:precision
tilt	include/primordial.h	/^  double ** tilt;      \/**< all tilts in matrix form: tilt[index_md][index_ic1_ic2] *\/$/;"	m	struct:primordial
time	include/primordial.h	/^  enum time_definition time;$/;"	m	struct:primordial_inflation_parameters_and_workspace	typeref:enum:primordial_inflation_parameters_and_workspace::time_definition
time_definition	include/primordial.h	/^enum time_definition {$/;"	g
tm_exact	include/perturbations.h	/^enum tensor_methods {tm_photons_only,tm_massless_approximation,tm_exact};$/;"	e	enum:tensor_methods
tm_massless_approximation	include/perturbations.h	/^enum tensor_methods {tm_photons_only,tm_massless_approximation,tm_exact};$/;"	e	enum:tensor_methods
tm_photons_only	include/perturbations.h	/^enum tensor_methods {tm_photons_only,tm_massless_approximation,tm_exact};$/;"	e	enum:tensor_methods
tmp	include/evolver_ndf15.h	/^	double * tmp;$/;"	m	struct:numjac_workspace
tol_M_ncdm	include/common.h	/^  double tol_M_ncdm;$/;"	m	struct:precision
tol_background_integration	include/common.h	/^  double tol_background_integration;$/;"	m	struct:precision
tol_gauss_legendre	include/common.h	/^  double tol_gauss_legendre; \/**< tolerance with which quadrature points are found: must be very small for an accurate integration (if not entered manually, set automatically to match machine precision) *\/$/;"	m	struct:precision
tol_initial_Omega_r	include/common.h	/^  double tol_initial_Omega_r;$/;"	m	struct:precision
tol_ncdm	include/common.h	/^  double tol_ncdm;$/;"	m	struct:precision
tol_ncdm_bg	include/common.h	/^  double tol_ncdm_bg;$/;"	m	struct:precision
tol_ncdm_initial_w	include/common.h	/^  double tol_ncdm_initial_w;$/;"	m	struct:precision
tol_ncdm_newtonian	include/common.h	/^  double tol_ncdm_newtonian;$/;"	m	struct:precision
tol_ncdm_synchronous	include/common.h	/^  double tol_ncdm_synchronous;$/;"	m	struct:precision
tol_perturb_integration	include/common.h	/^  double tol_perturb_integration;$/;"	m	struct:precision
tol_tau_approx	include/common.h	/^  double tol_tau_approx;$/;"	m	struct:precision
tol_thermo_integration	include/common.h	/^  double tol_thermo_integration; \/**< precision of each integration step *\/$/;"	m	struct:precision
tophat	include/perturbations.h	/^enum selection_type {gaussian,tophat,dirac};$/;"	e	enum:selection_type
topvec	include/sparse.h	/^	int *topvec;	\/*topvec[k] holds the first index in xi[k].*\/$/;"	m	struct:sparse_numerical
tp_size	include/perturbations.h	/^  int * tp_size; \/**< number of types tp_size[index_md] included in computation for each mode *\/$/;"	m	struct:perturbs
tr	python/classy.c	/^  struct transfers tr;$/;"	m	struct:__pyx_obj_6classy_Class	typeref:struct:__pyx_obj_6classy_Class::transfers	file:
tr	test/test_degeneracy.c	/^struct transfers tr;        \/* for transfer functions *\/$/;"	v	typeref:struct:transfers
tr_size	include/spectra.h	/^  int tr_size;                 \/**< total number of species in transfer functions *\/$/;"	m	struct:spectra
transfer	include/transfer.h	/^  double ** transfer; \/**< table of transfer functions for each mode, initial condition, type, multipole and wavenumber, with argument transfer[index_md][((index_ic * ptr->tt_size[index_md] + index_tt) * ptr->l_size[index_md] + index_l) * ptr->q_size + index_q] *\/$/;"	m	struct:transfers
transfer_can_be_neglected	source/transfer.c	/^int transfer_can_be_neglected($/;"	f
transfer_compute_for_each_l	source/transfer.c	/^int transfer_compute_for_each_l($/;"	f
transfer_compute_for_each_q	source/transfer.c	/^int transfer_compute_for_each_q($/;"	f
transfer_dNdz_analytic	source/transfer.c	/^int transfer_dNdz_analytic($/;"	f
transfer_free	source/transfer.c	/^int transfer_free($/;"	f
transfer_free_source_correspondence	source/transfer.c	/^int transfer_free_source_correspondence($/;"	f
transfer_functions_at_q	source/transfer.c	/^int transfer_functions_at_q($/;"	f
transfer_get_k_list	source/transfer.c	/^int transfer_get_k_list($/;"	f
transfer_get_l_list	source/transfer.c	/^int transfer_get_l_list($/;"	f
transfer_get_lmax	source/transfer.c	/^int transfer_get_lmax(int (*get_xmin_generic)(int sgnK,$/;"	f
transfer_get_q_list	source/transfer.c	/^int transfer_get_q_list($/;"	f
transfer_get_source_correspondence	source/transfer.c	/^int transfer_get_source_correspondence($/;"	f
transfer_global_selection_read	source/transfer.c	/^int transfer_global_selection_read($/;"	f
transfer_indices_of_transfers	source/transfer.c	/^int transfer_indices_of_transfers($/;"	f
transfer_init	source/transfer.c	/^int transfer_init($/;"	f
transfer_integrate	source/transfer.c	/^int transfer_integrate($/;"	f
transfer_interpolate_sources	source/transfer.c	/^int transfer_interpolate_sources($/;"	f
transfer_late_source_can_be_neglected	source/transfer.c	/^int transfer_late_source_can_be_neglected($/;"	f
transfer_lensing_sampling	source/transfer.c	/^int transfer_lensing_sampling($/;"	f
transfer_limber	source/transfer.c	/^int transfer_limber($/;"	f
transfer_limber2	source/transfer.c	/^int transfer_limber2($/;"	f
transfer_limber_interpolate	source/transfer.c	/^int transfer_limber_interpolate($/;"	f
transfer_neglect_delta_k_S_e	include/common.h	/^  double transfer_neglect_delta_k_S_e;  \/**< same for polarization source function E of scalar mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_S_t0	include/common.h	/^  double transfer_neglect_delta_k_S_t0; \/**< for temperature source function T0 of scalar mode, range of k values (in 1\/Mpc) taken into account in transfer function: for l < (k-delta_k)*tau0, ie for k > (l\/tau0 + delta_k), the transfer function is set to zero *\/$/;"	m	struct:precision
transfer_neglect_delta_k_S_t1	include/common.h	/^  double transfer_neglect_delta_k_S_t1; \/**< same for temperature source function T1 of scalar mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_S_t2	include/common.h	/^  double transfer_neglect_delta_k_S_t2; \/**< same for temperature source function T2 of scalar mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_T_b	include/common.h	/^  double transfer_neglect_delta_k_T_b;  \/**< same for polarization source function B of tensor mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_T_e	include/common.h	/^  double transfer_neglect_delta_k_T_e;  \/**< same for polarization source function E of tensor mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_T_t2	include/common.h	/^  double transfer_neglect_delta_k_T_t2; \/**< same for temperature source function T2 of tensor mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_V_b	include/common.h	/^  double transfer_neglect_delta_k_V_b;  \/**< same for polarization source function B of vector mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_V_e	include/common.h	/^  double transfer_neglect_delta_k_V_e;  \/**< same for polarization source function E of vector mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_V_t1	include/common.h	/^  double transfer_neglect_delta_k_V_t1; \/**< same for temperature source function T1 of vector mode *\/$/;"	m	struct:precision
transfer_neglect_delta_k_V_t2	include/common.h	/^  double transfer_neglect_delta_k_V_t2; \/**< same for temperature source function T2 of vector mode *\/$/;"	m	struct:precision
transfer_neglect_late_source	include/common.h	/^  double transfer_neglect_late_source;  \/**< value of l below which the CMB source functions can be neglected at late time, excepted when there is a Late ISW contribution *\/$/;"	m	struct:precision
transfer_perturbation_copy_sources_and_nl_corrections	source/transfer.c	/^int transfer_perturbation_copy_sources_and_nl_corrections($/;"	f
transfer_perturbation_source_spline	source/transfer.c	/^int transfer_perturbation_source_spline($/;"	f
transfer_perturbation_sources_free	source/transfer.c	/^int transfer_perturbation_sources_free($/;"	f
transfer_perturbation_sources_spline_free	source/transfer.c	/^int transfer_perturbation_sources_spline_free($/;"	f
transfer_radial_coordinates	source/transfer.c	/^int transfer_radial_coordinates($/;"	f
transfer_radial_function	source/transfer.c	/^int transfer_radial_function($/;"	f
transfer_select_radial_function	source/transfer.c	/^int transfer_select_radial_function($/;"	f
transfer_selection_compute	source/transfer.c	/^int transfer_selection_compute($/;"	f
transfer_selection_function	source/transfer.c	/^int transfer_selection_function($/;"	f
transfer_selection_sampling	source/transfer.c	/^int transfer_selection_sampling($/;"	f
transfer_selection_times	source/transfer.c	/^int transfer_selection_times($/;"	f
transfer_source_resample	source/transfer.c	/^int transfer_source_resample($/;"	f
transfer_source_tau_size	source/transfer.c	/^int transfer_source_tau_size($/;"	f
transfer_source_tau_size_max	source/transfer.c	/^int transfer_source_tau_size_max($/;"	f
transfer_sources	source/transfer.c	/^int transfer_sources($/;"	f
transfer_update_HIS	source/transfer.c	/^int transfer_update_HIS($/;"	f
transfer_use_limber	source/transfer.c	/^int transfer_use_limber($/;"	f
transfer_verbose	include/transfer.h	/^  short transfer_verbose; \/**< flag regulating the amount of information sent to standard output (none if set to zero) *\/$/;"	m	struct:transfers
transfer_workspace	include/transfer.h	/^struct transfer_workspace {$/;"	s
transfer_workspace_free	source/transfer.c	/^int transfer_workspace_free($/;"	f
transfer_workspace_init	source/transfer.c	/^int transfer_workspace_init($/;"	f
transfers	include/transfer.h	/^struct transfers {$/;"	s
trig_order	include/hyperspherical.h	/^  int trig_order;        \/\/Order of the interpolation formula for SinK and CosK.$/;"	m	struct:HypersphericalInterpolationStructure
trust_sparse	include/evolver_ndf15.h	/^	int trust_sparse; \/* Number of times a pattern is repeated (actually included) before we trust it. *\/$/;"	m	struct:jacobian
tt_size	include/thermodynamics.h	/^  int tt_size; \/**< number of lines (redshift steps) in the tables *\/$/;"	m	struct:thermo
tt_size	include/transfer.h	/^  int * tt_size;     \/**< number of requested transfer types tt_size[index_md] for each mode *\/$/;"	m	struct:transfers
two_scales	include/primordial.h	/^  two_scales,$/;"	e	enum:primordial_spectrum_type
type	python/classy.c	/^  __Pyx_TypeInfo* type;$/;"	m	struct:__Pyx_StructField_	file:
typegroup	python/classy.c	/^  char typegroup;$/;"	m	struct:__anon3	file:
ufa_CLASS	include/perturbations.h	/^enum ufa_method {ufa_mb,ufa_hu,ufa_CLASS,ufa_none};$/;"	e	enum:ufa_method
ufa_flags	include/perturbations.h	/^enum ufa_flags {ufa_off, ufa_on};$/;"	g
ufa_hu	include/perturbations.h	/^enum ufa_method {ufa_mb,ufa_hu,ufa_CLASS,ufa_none};$/;"	e	enum:ufa_method
ufa_mb	include/perturbations.h	/^enum ufa_method {ufa_mb,ufa_hu,ufa_CLASS,ufa_none};$/;"	e	enum:ufa_method
ufa_method	include/perturbations.h	/^enum ufa_method {ufa_mb,ufa_hu,ufa_CLASS,ufa_none};$/;"	g
ufa_none	include/perturbations.h	/^enum ufa_method {ufa_mb,ufa_hu,ufa_CLASS,ufa_none};$/;"	e	enum:ufa_method
ufa_off	include/perturbations.h	/^enum ufa_flags {ufa_off, ufa_on};$/;"	e	enum:ufa_flags
ufa_on	include/perturbations.h	/^enum ufa_flags {ufa_off, ufa_on};$/;"	e	enum:ufa_flags
uninitialize_jacobian	tools/evolver_ndf15.c	/^int uninitialize_jacobian(struct jacobian *jac){$/;"	f
uninitialize_numjac_workspace	tools/evolver_ndf15.c	/^int uninitialize_numjac_workspace(struct numjac_workspace * nj_ws){$/;"	f
unknown_parameters_index	include/input.h	/^  int * unknown_parameters_index;$/;"	m	struct:fzerofun_workspace
unlikely	python/classy.c	473;"	d	file:
unlikely	python/classy.c	476;"	d	file:
update_fminus_Saha	hyrec/hydrogen.c	/^void update_fminus_Saha(double **logfminus_hist, double *logfminus_Ly_hist[],$/;"	f
ur_fluid_approximation	include/common.h	/^  int ur_fluid_approximation; \/**< method for ultra relativistic fluid approximation *\/$/;"	m	struct:precision
ur_fluid_trigger_tau_over_tau_k	include/common.h	/^  double ur_fluid_trigger_tau_over_tau_k;$/;"	m	struct:precision
use_ppf	include/background.h	/^  short use_ppf; \/**< flag switching on PPF perturbation equations$/;"	m	struct:background
use_sparse	include/evolver_ndf15.h	/^	int use_sparse;$/;"	m	struct:jacobian
used_in_sources	include/perturbations.h	/^  int * used_in_sources; \/**< boolean array specifying which$/;"	m	struct:perturb_vector
value	include/parser.h	/^  FileArg * value; \/**< list of (size) values *\/$/;"	m	struct:file_content
vector_perturbations_data	include/perturbations.h	/^  double * vector_perturbations_data[_MAX_NUMBER_OF_K_FILES_]; \/**< Array of double pointers to perturbation output for vectors *\/$/;"	m	struct:perturbs
vector_source_pi	include/perturbations.h	/^  double vector_source_pi;	\/**< first stress-energy source term in Einstein's vector equations *\/$/;"	m	struct:perturb_workspace
vector_source_v	include/perturbations.h	/^  double vector_source_v;	\/**< second stress-energy source term in Einstein's vector equations *\/$/;"	m	struct:perturb_workspace
vector_titles	include/perturbations.h	/^  char vector_titles[_MAXTITLESTRINGLENGTH_]; \/**< _DELIMITER_ separated string of titles for vector perturbation output files. *\/$/;"	m	struct:perturbs
w	include/quadrature.h	/^  double *w;		\/* Pointer to the corresponding weights *\/$/;"	m	struct:adaptive_integration_tree_node
w	include/sparse.h	/^	double *w;		\/* Work array for sp_lu *\/$/;"	m	struct:sparse_numerical
w0	hyrec/history.h	/^   double odeh2, w0, wa;        \/* dark energy parameters *\/$/;"	m	struct:__anon30
w0_fld	include/background.h	/^  double w0_fld; \/**< \\f$ w0_{DE} \\f$: current fluid equation of state parameter *\/$/;"	m	struct:background
w_ncdm	include/background.h	/^  double ** w_ncdm;     \/**< Pointers to vectors of corresponding quadrature weights w *\/$/;"	m	struct:background
w_ncdm_bg	include/background.h	/^  double ** w_ncdm_bg;  \/**< Pointers to vectors of corresponding quadrature weights w *\/$/;"	m	struct:background
w_trapz	include/transfer.h	/^  double * w_trapz;              \/**< w_trapz[index_tau]: values of weights in trapezoidal integration (related to time steps) *\/$/;"	m	struct:transfer_workspace
wa	hyrec/history.h	/^   double odeh2, w0, wa;        \/* dark energy parameters *\/$/;"	m	struct:__anon30
wa_fld	include/background.h	/^  double wa_fld; \/**< \\f$ wa_{DE} \\f$: fluid equation of state parameter derivative *\/$/;"	m	struct:background
wamd	include/sparse.h	/^	int *wamd;		\/* Work array for sp_amd *\/$/;"	m	struct:sparse_numerical
write_background	include/output.h	/^  short write_background; \/**< flag for outputing background evolution in file *\/$/;"	m	struct:output
write_header	include/output.h	/^  short write_header; \/**< flag stating whether we should write a header in output files *\/$/;"	m	struct:output
write_perturbations	include/output.h	/^  short write_perturbations; \/**< flag for outputing perturbations of selected wavenumber(s) in file(s) *\/$/;"	m	struct:output
write_primordial	include/output.h	/^  short write_primordial; \/**< flag for outputing scalar\/tensor primordial spectra in files *\/$/;"	m	struct:output
write_thermodynamics	include/output.h	/^  short write_thermodynamics; \/**< flag for outputing thermodynamical evolution in file *\/$/;"	m	struct:output
x	include/hermite3_interpolation_csource.h	/^double yp=0, dyp=0, x;$/;"	v
x	include/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
x	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
x	include/hyperspherical.h	/^  double *x;          \/\/Pointer to x-values$/;"	m	struct:HypersphericalInterpolationStructure
x	include/quadrature.h	/^  double *x;		\/* Pointer to the abscissas of node *\/$/;"	m	struct:adaptive_integration_tree_node
x	python/classy.c	/^typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;$/;"	m	struct:__anon29	file:
x	python/classy.c	/^typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;$/;"	m	struct:__anon21	file:
x	python/classy.c	/^typedef struct { char c; double x; } __Pyx_st_double;$/;"	m	struct:__anon18	file:
x	python/classy.c	/^typedef struct { char c; float x; } __Pyx_st_float;$/;"	m	struct:__anon17	file:
x	python/classy.c	/^typedef struct { char c; int x; } __Pyx_st_int;$/;"	m	struct:__anon15	file:
x	python/classy.c	/^typedef struct { char c; long double x; } __Pyx_st_longdouble;$/;"	m	struct:__anon19	file:
x	python/classy.c	/^typedef struct { char c; long x; } __Pyx_st_long;$/;"	m	struct:__anon16	file:
x	python/classy.c	/^typedef struct { char c; short x; } __Pyx_st_short;$/;"	m	struct:__anon14	file:
x	python/classy.c	/^typedef struct { char c; void *x; } __Pyx_st_void_p;$/;"	m	struct:__anon20	file:
x	python/classy.c	/^typedef struct { double x; char c; } __Pyx_pad_double;$/;"	m	struct:__anon26	file:
x	python/classy.c	/^typedef struct { float x; char c; } __Pyx_pad_float;$/;"	m	struct:__anon25	file:
x	python/classy.c	/^typedef struct { int x; char c; } __Pyx_pad_int;$/;"	m	struct:__anon23	file:
x	python/classy.c	/^typedef struct { long double x; char c; } __Pyx_pad_longdouble;$/;"	m	struct:__anon27	file:
x	python/classy.c	/^typedef struct { long x; char c; } __Pyx_pad_long;$/;"	m	struct:__anon24	file:
x	python/classy.c	/^typedef struct { short x; char c; } __Pyx_pad_short;$/;"	m	struct:__anon22	file:
x	python/classy.c	/^typedef struct { void *x; char c; } __Pyx_pad_void_p;$/;"	m	struct:__anon28	file:
x	tools/hermite3_interpolation_csource.h	/^double yp=0, dyp=0, x;$/;"	v
x	tools/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
x	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
x_size	include/hyperspherical.h	/^  int x_size;                \/\/Number of x-values$/;"	m	struct:HypersphericalInterpolationStructure
xe_PostSahaH	hyrec/hydrogen.c	/^double xe_PostSahaH(double nH, double H, double T, HRATEEFF *rate_table, TWO_PHOTON_PARAMS *twog,$/;"	f
xe_PostSahaHe	hyrec/helium.c	/^double xe_PostSahaHe(double nH0, double Tr0, double fHe, double H, double z, double *Delta_xe){$/;"	f
xi	include/sparse.h	/^	int **xi;		\/*xi[k] points to a row of xi, which holds the topological ordered indices.*\/$/;"	m	struct:sparse_numerical
xjac	include/evolver_ndf15.h	/^	double *xjac; \/*Stores the values of the sparse jacobian. (Same pattern as spJ) *\/$/;"	m	struct:jacobian
xmax	include/hermite3_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmax	include/hermite4_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmax	include/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
xmax	tools/hermite3_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmax	tools/hermite4_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmax	tools/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
xmin	include/hermite3_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmin	include/hermite4_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmin	include/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
xmin	tools/hermite3_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmin	tools/hermite4_interpolation_csource.h	/^double xmin, xmax, deltax;$/;"	v
xmin	tools/hermite6_interpolation_csource.h	/^double xmin, xmax, deltax, deltax2, lxlp1;$/;"	v
xvec	include/hermite3_interpolation_csource.h	/^double *xvec;$/;"	v
xvec	include/hermite4_interpolation_csource.h	/^double *xvec;$/;"	v
xvec	include/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
xvec	tools/hermite3_interpolation_csource.h	/^double *xvec;$/;"	v
xvec	tools/hermite4_interpolation_csource.h	/^double *xvec;$/;"	v
xvec	tools/hermite6_interpolation_csource.h	/^double beta, beta2, *xvec, *sinK, *cotK;$/;"	v
y	include/dei_rkck.h	/^  double * y;$/;"	m	struct:generic_integrator_workspace
y	include/perturbations.h	/^  double * y;             \/**< vector of perturbations to be integrated *\/$/;"	m	struct:perturb_vector
ydel_Fdel	include/evolver_ndf15.h	/^	double **ydel_Fdel;$/;"	m	struct:numjac_workspace
yerr	include/dei_rkck.h	/^  double * yerr;$/;"	m	struct:generic_integrator_workspace
ym	include/hermite3_interpolation_csource.h	/^double ym=0;$/;"	v
ym	include/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
ym	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
ym	tools/hermite3_interpolation_csource.h	/^double ym=0;$/;"	v
ym	tools/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
ym	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
yp	include/hermite3_interpolation_csource.h	/^double yp=0, dyp=0, x;$/;"	v
yp	include/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
yp	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
yp	tools/hermite3_interpolation_csource.h	/^double yp=0, dyp=0, x;$/;"	v
yp	tools/hermite4_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, x;$/;"	v
yp	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
yscal	include/dei_rkck.h	/^  double * yscal;$/;"	m	struct:generic_integrator_workspace
yscale	include/evolver_ndf15.h	/^	double *yscale;$/;"	m	struct:numjac_workspace
ytemp	include/dei_rkck.h	/^  double * ytemp;$/;"	m	struct:generic_integrator_workspace
ytempo	include/dei_rkck.h	/^  double * ytempo;$/;"	m	struct:generic_integrator_workspace
yydel	include/evolver_ndf15.h	/^	double * yydel;$/;"	m	struct:numjac_workspace
z	include/hermite3_interpolation_csource.h	/^double z[2]={0.,0.};$/;"	v
z	include/hermite4_interpolation_csource.h	/^double z[3]={0.,0.,0.};$/;"	v
z	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z	tools/hermite3_interpolation_csource.h	/^double z[2]={0.,0.};$/;"	v
z	tools/hermite4_interpolation_csource.h	/^double z[3]={0.,0.,0.};$/;"	v
z	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z2	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z2	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z3	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z3	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z4	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z4	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z5	include/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z5	tools/hermite6_interpolation_csource.h	/^double ym=0, yp=0, dym=0, dyp=0, d2ym=0, d2yp=0, x, z, z2, z3, z4, z5;$/;"	v
z_d	include/thermodynamics.h	/^  double z_d;     \/**< baryon drag redshift *\/$/;"	m	struct:thermo
z_max_pk	include/perturbations.h	/^  double z_max_pk; \/**< when we compute only the matter spectrum \/ transfer functions, but not the CMB, we are sometimes interested to sample source functions at very high redshift, way before recombination. This z_max_pk will then fix the initial sampling time of the sources. *\/$/;"	m	struct:perturbs
z_max_pk	include/spectra.h	/^  double z_max_pk;  \/**< maximum value of z at which matter spectrum P(k,z) will be evaluated; keep fixed to zero if P(k) only needed today *\/$/;"	m	struct:spectra
z_pk	include/output.h	/^  double z_pk[_Z_PK_NUM_MAX_]; \/**< value(s) of redshift at which P(k,z) and T_i(k,z) should be written *\/$/;"	m	struct:output
z_pk_num	include/output.h	/^  int z_pk_num; \/**< number of redshift at which P(k,z) and T_i(k,z) should be written *\/$/;"	m	struct:output
z_rec	include/thermodynamics.h	/^  double z_rec;   \/**< z at which the visibility reaches its maximum (= recombination redshift) *\/$/;"	m	struct:thermo
z_reio	include/thermodynamics.h	/^  double z_reio;   \/**< if above set to z,   input value of reionization redshift *\/$/;"	m	struct:thermo
z_table	include/background.h	/^  double * z_table;          \/**< vector z_table[index_tau] with values of \\f$ z \\f$ (redshift) *\/$/;"	m	struct:background
z_table	include/thermodynamics.h	/^  double * z_table; \/**< vector z_table[index_z] with values of redshift (vector of size tt_size) *\/$/;"	m	struct:thermo
zend	hyrec/history.h	/^   double zstart, zend, dlna;   \/* initial and final redshift and step size in log a *\/$/;"	m	struct:__anon30
zpp_over_z	include/primordial.h	/^  double zpp_over_z;$/;"	m	struct:primordial_inflation_parameters_and_workspace
zstart	hyrec/history.h	/^   double zstart, zend, dlna;   \/* initial and final redshift and step size in log a *\/$/;"	m	struct:__anon30
